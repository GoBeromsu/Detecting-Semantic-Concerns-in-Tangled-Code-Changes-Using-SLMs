commit_message,diff,concern_count,shas,types
repository creation,"[""diff --git a/server/src/services/repository.service.ts b/server/src/services/repository.service.ts\nindex 3869c98..d675b30 100644\n--- a/server/src/services/repository.service.ts\n+++ b/server/src/services/repository.service.ts\n@@ -19,6 +19,8 @@ export class RepositoryService {\n       return;\n     }\n \n+    await this.createTeam(this.github, this.getTeamName(course), course.id);\n+\n     const studentRepo = getCustomRepository(StudentRepository);\n     const students = await studentRepo.findActiveByCourseId(this.courseId);\n \n@@ -31,8 +33,8 @@ export class RepositoryService {\n         if (mentorGithubId) {\n           await this.inviteMentor(mentorGithubId, course);\n         }\n-        await this.addTeamToRepository(this.github, course, student.githubId);\n       }\n+      await this.addTeamToRepository(this.github, course, student.githubId);\n       if (record?.repository) {\n         result.push({ repository: record.repository });\n       }\n""]",1,"[""87d5d4e55ab7149b593d29410f1fe426ba2447d4""]","[""fix""]"
update wrapping tests for v7,"[""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n""]",1,"[""317f4eefecddfb1392ca71d551840f446feee302""]","[""test""]"
add a branch name to Slack notifications (#14793),"[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n""]",1,"[""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da""]","[""cicd""]"
increment failing test retries,"[""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n""]",1,"[""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57""]","[""cicd""]"
print errors without stacktrace,"[""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n""]",1,"[""d129eaf9125a967ac86c6c7276bbae6b4d50af36""]","[""fix""]"
"assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>","[""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n""]",1,"[""1269431c8a3e7549f10fcbbb4b88ff625c8898b3""]","[""build""]"
export a modal transition preset,"[""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n""]",1,"[""535708ae50aecb452560a23356fd396f99ef13a2""]","[""refactor""]"
"add hardware back button

Closes #5071","[""diff --git a/ionic/components/app/app.ts b/ionic/components/app/app.ts\nindex 04d8c57..08aab92 100644\n--- a/ionic/components/app/app.ts\n+++ b/ionic/components/app/app.ts\n@@ -3,8 +3,7 @@ import {Title} from 'angular2/platform/browser';\n \n import {Config} from '../../config/config';\n import {ClickBlock} from '../../util/click-block';\n-import {Nav} from '../nav/nav';\n-import {Tabs} from '../tabs/tabs';\n+import {Platform} from '../../platform/platform';\n \n \n /**\n@@ -23,8 +22,20 @@ export class IonicApp {\n \n   constructor(\n     private _config: Config,\n-    private _clickBlock: ClickBlock\n-  ) {}\n+    private _clickBlock: ClickBlock,\n+    platform: Platform\n+  ) {\n+    platform.backButton.subscribe(() => {\n+      let activeNav = this.getActiveNav();\n+      if (activeNav) {\n+        if (activeNav.length() === 1) {\n+          platform.exitApp();\n+        } else {\n+          activeNav.pop();\n+        }\n+      }\n+    });\n+  }\n \n   /**\n    * Sets the document title.\n@@ -102,7 +113,7 @@ export class IonicApp {\n   /**\n    * @private\n    */\n-  getActiveNav(): Nav | Tabs {\n+  getActiveNav(): any {\n     var nav = this._rootNav || null;\n     var activeChildNav;\n \n""]",1,"[""68278b00450f2679761a2999500f6d87a579376b""]","[""feat""]"
publish sdks after docs/build,"[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n""]",1,"[""6c9cb638cb4d1ecc42632fcf389c24898c5b3244""]","[""cicd""]"
fixed docker link tests,"[""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n""]",1,"[""c7b25726df94a2530c9b1c0d2b6a0acaa103822f""]","[""test""]"
"terminated tasks linger for a bit

Signed-off-by: Eliza Weisman <eliza@buoyant.io>","[""diff --git a/console/src/main.rs b/console/src/main.rs\nindex ebfa315..5328d96 100644\n--- a/console/src/main.rs\n+++ b/console/src/main.rs\n@@ -69,6 +69,7 @@ async fn main() -> Result<(), Box<dyn std::error::Error>> {\n                 .wrap(Wrap { trim: true });\n             f.render_widget(header, chunks[0]);\n             tasks.render(f, chunks[1]);\n+            tasks.retain_active();\n         })?;\n     }\n \ndiff --git a/console/src/tasks.rs b/console/src/tasks.rs\nindex 7be39a4..eb41495 100644\n--- a/console/src/tasks.rs\n+++ b/console/src/tasks.rs\n@@ -19,6 +19,7 @@ struct Task {\n     fields: String,\n     kind: &'static str,\n     stats: Stats,\n+    completed_for: usize,\n }\n \n #[derive(Default, Debug)]\n@@ -28,10 +29,15 @@ struct Stats {\n     idle: Duration,\n     total: Duration,\n }\n+\n impl State {\n+    // How many updates to retain completed tasks for\n+    const RETAIN_COMPLETED_FOR: usize = 6;\n+\n     pub(crate) fn len(&self) -> usize {\n         self.tasks.len()\n     }\n+\n     pub(crate) fn update(&mut self, update: proto::tasks::TaskUpdate) {\n         let new_tasks = update.new_tasks.into_iter().filter_map(|task| {\n             if task.id.is_none() {\n@@ -48,6 +54,7 @@ impl State {\n                 fields: task.string_fields,\n                 kind,\n                 stats: Default::default(),\n+                completed_for: 0,\n             };\n             Some((id, task))\n         });\n@@ -60,7 +67,10 @@ impl State {\n         }\n \n         for proto::SpanId { id } in update.completed {\n-            if self.tasks.remove(&id).is_none() {\n+            if let Some(task) = self.tasks.get_mut(&id) {\n+                task.kind = \""!\"";\n+                task.completed_for = 1;\n+            } else {\n                 tracing::warn!(?id, \""tried to complete a task that didn't exist\"");\n             }\n         }\n@@ -79,7 +89,7 @@ impl State {\n         const DUR_PRECISION: usize = 4;\n         const POLLS_LEN: usize = 5;\n         let rows = self.tasks.values().map(|task| {\n-            let row = Row::new(vec![\n+            let mut row = Row::new(vec![\n                 Cell::from(task.id_hex.as_str()),\n                 // TODO(eliza): is there a way to write a `fmt::Debug` impl\n                 // directly to tui without doing an allocation?\n@@ -105,6 +115,9 @@ impl State {\n                 Cell::from(format!(\""{:>width$}\"", task.stats.polls, width = POLLS_LEN)),\n                 Cell::from(task.fields.as_str()),\n             ]);\n+            if task.completed_for > 0 {\n+                row = row.style(Style::default().add_modifier(style::Modifier::DIM));\n+            }\n             row\n         });\n         let t = Table::new(rows)\n@@ -126,6 +139,16 @@ impl State {\n \n         frame.render_widget(t, area)\n     }\n+\n+    pub(crate) fn retain_active(&mut self) {\n+        self.tasks.retain(|_, task| {\n+            if task.completed_for == 0 {\n+                return true;\n+            }\n+            task.completed_for += 1;\n+            task.completed_for <= Self::RETAIN_COMPLETED_FOR\n+        })\n+    }\n }\n \n impl From<proto::tasks::Stats> for Stats {\n""]",1,"[""1bcf88670b50155b50071e707f98f30cea0b7a24""]","[""feat""]"
"upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.","[""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n""]",1,"[""454003841aabeb74396d73541378bfa59c75b5db""]","[""build""]"
"only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>","[""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n""]",1,"[""dbb537a26e388a8d7d17faf131abc30c2f7a84e6""]","[""cicd""]"
Fix typo,"[""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n""]",1,"[""bf83c9155e9bee6925aa7102fab53fb803d52533""]","[""docs""]"
add getter for protocol id,"[""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n""]",1,"[""dc5238b2bda98a7c4f2fe9584fc3b0191a408109""]","[""feat""]"
remove ubuntu-latest from job title where that is the only os,"[""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n""]",1,"[""74e9de5ec97dc013a52aa063dff0f40ac74c407b""]","[""cicd""]"
ensure checksum persist flushes to disk,"[""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n""]",1,"[""b7ce2894fd1794064bd6db4ed730bb6cb7728739""]","[""test""]"
updated react demo parcel command,"[""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n""]",1,"[""32b92cfa0b74a6c25990e32ac6aab12b8496794c""]","[""build""]"
autostart feature fixed,"[""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n""]",1,"[""bed78248c941d57ad4cc20a455147e186e97c7a1""]","[""fix""]"
"Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.","[""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n""]",1,"[""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3""]","[""test""]"
"add numberOfLines prop to DataTableTitle (#863)

Closes #848","[""diff --git a/src/components/DataTable/DataTableTitle.js b/src/components/DataTable/DataTableTitle.js\nindex bfcf07e..d764fd5 100644\n--- a/src/components/DataTable/DataTableTitle.js\n+++ b/src/components/DataTable/DataTableTitle.js\n@@ -27,6 +27,10 @@ type Props = React.ElementConfig<typeof TouchableWithoutFeedback> & {|\n    */\n   sortDirection?: 'ascending' | 'descending',\n   /**\n+   * The number of lines to show.\n+   */\n+  numberOfLines?: number,\n+  /**\n    * Function to execute on press.\n    */\n   onPress?: () => mixed,\n@@ -44,6 +48,10 @@ type State = {\n class DataTableTitle extends React.Component<Props, State> {\n   static displayName = 'DataTable.Title';\n \n+  static defaultProps = {\n+    numberOfLines: 1,\n+  };\n+\n   state = {\n     spinAnim: new Animated.Value(\n       this.props.sortDirection === 'ascending' ? 0 : 1\n@@ -70,6 +78,7 @@ class DataTableTitle extends React.Component<Props, State> {\n       sortDirection,\n       theme,\n       style,\n+      numberOfLines,\n       ...rest\n     } = this.props;\n \n@@ -99,7 +108,7 @@ class DataTableTitle extends React.Component<Props, State> {\n               styles.cell,\n               sortDirection ? styles.sorted : { color: textColor },\n             ]}\n-            numberOfLines={1}\n+            numberOfLines={numberOfLines}\n           >\n             {children}\n           </Text>\n""]",1,"[""f9a094918b62534614c47aa8a13f33aec751a1e0""]","[""feat""]"
"added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284","[""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n""]",1,"[""aca23027da1295c78fdf42ba9687d8ccc88784d7""]","[""docs""]"
"docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>","[""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n""]",1,"[""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf""]","[""build""]"
support use meta key select multiple element,"[""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n""]",1,"[""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8""]","[""feat""]"
verify checkpoint listeners are notified,"[""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n""]",1,"[""e0198f74b81da3663144cfe1d971939319f82a0f""]","[""test""]"
do not use scripts and binaries from the libcc repo,"[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n""]",1,"[""45837af24a33308a70a3454f0f650f9fe728e272""]","[""cicd""]"
update `cargo-make` for `v0.35.3`,"[""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n""]",1,"[""0cfc5633d37ea06f645649138323f1820e18bdee""]","[""docs""]"
add tests,"[""diff --git a/Cargo.lock b/Cargo.lock\nindex 84d5d07..6ad05da 100644\n--- a/Cargo.lock\n+++ b/Cargo.lock\n@@ -293,6 +293,7 @@ version = \""0.1.0\""\n dependencies = [\n  \""git-cliff-core\"",\n  \""log\"",\n+ \""pretty_assertions\"",\n  \""pretty_env_logger\"",\n  \""structopt\"",\n ]\ndiff --git a/git-cliff-core/src/lib.rs b/git-cliff-core/src/lib.rs\nindex 3b18ba0..a560c94 100644\n--- a/git-cliff-core/src/lib.rs\n+++ b/git-cliff-core/src/lib.rs\n@@ -1,6 +1,8 @@\n //! Highly customizable Changelog Generator\n #![warn(missing_docs, clippy::unwrap_used)]\n \n+/// Export regex crate.\n+pub use regex;\n /// Git commit.\n pub mod commit;\n /// Config file parser.\ndiff --git a/git-cliff/Cargo.toml b/git-cliff/Cargo.toml\nindex 41eb2e9..cc64b37 100644\n--- a/git-cliff/Cargo.toml\n+++ b/git-cliff/Cargo.toml\n@@ -20,3 +20,6 @@ log = \""0.4.14\""\n version = \""0.3\""\n default-features = false\n features = [\""suggestions\"", \""color\"", \""wrap_help\""]\n+\n+[dev-dependencies]\n+pretty_assertions = \""0.7\""\ndiff --git a/git-cliff/src/changelog.rs b/git-cliff/src/changelog.rs\nindex 3f9e994..23ea186 100644\n--- a/git-cliff/src/changelog.rs\n+++ b/git-cliff/src/changelog.rs\n@@ -115,3 +115,171 @@ impl<'a> Changelog<'a> {\n \t\tOk(())\n \t}\n }\n+\n+#[cfg(test)]\n+mod test {\n+\tuse super::*;\n+\tuse git_cliff_core::config::{\n+\t\tChangelogConfig,\n+\t\tCommitParser,\n+\t\tGitConfig,\n+\t};\n+\tuse git_cliff_core::regex::Regex;\n+\tuse pretty_assertions::assert_eq;\n+\tuse std::str;\n+\t#[test]\n+\tfn changelog_generator() -> Result<()> {\n+\t\tlet config = Config {\n+\t\t\tchangelog: ChangelogConfig {\n+\t\t\t\theader: Some(String::from(\""# Changelog\"")),\n+\t\t\t\tbody:   String::from(\n+\t\t\t\t\tr#\""{% if version %}\n+\t\t\t\t## Release [{{ version }}] - {{ timestamp | date(format=\""%Y-%m-%d\"") }}\n+\t\t\t\t({{ commit_id }}){% else %}\n+\t\t\t\t## Unreleased{% endif %}\n+\t\t\t\t{% for group, commits in commits | group_by(attribute=\""group\"") %}\n+\t\t\t\t### {{ group }}{% for group, commits in commits | group_by(attribute=\""scope\"") %}\n+\t\t\t\t#### {{ group }}{% for commit in commits %}\n+\t\t\t\t- {{ commit.message }}{% endfor %}\n+\t\t\t\t{% endfor %}{% endfor %}\""#,\n+\t\t\t\t)\n+\t\t\t\t.replace(\""\t\t\t\t\"", \""\""),\n+\t\t\t\tfooter: Some(String::from(\""------------\"")),\n+\t\t\t},\n+\t\t\tgit:       GitConfig {\n+\t\t\t\tconventional_commits: true,\n+\t\t\t\tcommit_parsers:       Some(vec![\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""feat*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""New features\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""fix*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Bug Fixes\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\"".*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Other\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t]),\n+\t\t\t\tfilter_commits:       Some(false),\n+\t\t\t\ttag_pattern:          String::new(),\n+\t\t\t\tskip_tags:            Regex::new(\""v3.*\"").ok(),\n+\t\t\t},\n+\t\t};\n+\t\tlet test_release = Release {\n+\t\t\tversion:   Some(String::from(\""v1.0.0\"")),\n+\t\t\tcommits:   vec![\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0bc123\""),\n+\t\t\t\t\tString::from(\""feat(app): add cool features\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0werty\""),\n+\t\t\t\t\tString::from(\""style(ui): make good stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0w3rty\""),\n+\t\t\t\t\tString::from(\""fix(ui): fix more stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0jkl12\""),\n+\t\t\t\t\tString::from(\""chore(app): do nothing\""),\n+\t\t\t\t),\n+\t\t\t],\n+\t\t\tcommit_id: Some(String::from(\""0bc123\"")),\n+\t\t\ttimestamp: 50000000,\n+\t\t\tprevious:  None,\n+\t\t};\n+\t\tlet releases = vec![\n+\t\t\ttest_release.clone(),\n+\t\t\tRelease {\n+\t\t\t\tversion: Some(String::from(\""v3.0.0\"")),\n+\t\t\t\tcommits: vec![Commit::new(\n+\t\t\t\t\tString::from(\""n0thin\""),\n+\t\t\t\t\tString::from(\""feat(xyz): skip commit\""),\n+\t\t\t\t)],\n+\t\t\t\t..Release::default()\n+\t\t\t},\n+\t\t\tRelease {\n+\t\t\t\tversion:   None,\n+\t\t\t\tcommits:   vec![\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc123\""),\n+\t\t\t\t\t\tString::from(\""feat(app): add xyz\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc124\""),\n+\t\t\t\t\t\tString::from(\""docs(app): document zyx\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(String::from(\""def789\""), String::from(\""merge #4\"")),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""qwerty\""),\n+\t\t\t\t\t\tString::from(\""fix(app): fix abc\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""hjkl12\""),\n+\t\t\t\t\t\tString::from(\""chore(ui): do boring stuff\""),\n+\t\t\t\t\t),\n+\t\t\t\t],\n+\t\t\t\tcommit_id: None,\n+\t\t\t\ttimestamp: 1000,\n+\t\t\t\tprevious:  Some(Box::new(test_release)),\n+\t\t\t},\n+\t\t];\n+\t\tlet changelog = Changelog::new(releases, &config)?;\n+\t\tlet mut out = Vec::new();\n+\t\tchangelog.generate(&mut out)?;\n+\t\tassert_eq!(\n+\t\t\tString::from(\n+\t\t\t\tr#\""# Changelog\n+\n+\t\t\t## Unreleased\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### app\n+\t\t\t- fix abc\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add xyz\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- document zyx\n+\n+\t\t\t#### ui\n+\t\t\t- do boring stuff\n+\n+\t\t\t## Release [v1.0.0] - 1971-08-02\n+\t\t\t(0bc123)\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### ui\n+\t\t\t- fix more stuff\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add cool features\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- do nothing\n+\n+\t\t\t#### ui\n+\t\t\t- make good stuff\n+\t\t\t------------\n+\t\t\t\""#\n+\t\t\t)\n+\t\t\t.replace(\""\t\t\t\"", \""\""),\n+\t\t\tstr::from_utf8(&out).unwrap()\n+\t\t);\n+\t\tOk(())\n+\t}\n+}\n""]",1,"[""8ee0611fbf0cd89abe7ae588f22e6ecb843598ea""]","[""test""]"
"update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909","[""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n""]",1,"[""c2ee5cd5e709afd15c5565ee009a0d204403a119""]","[""docs""]"
"wrong icon reference

Signed-off-by: Pranav C <pranavxc@gmail.com>","[""diff --git a/packages/nc-gui/components.d.ts b/packages/nc-gui/components.d.ts\nindex b7e6585..bb86478 100644\n--- a/packages/nc-gui/components.d.ts\n+++ b/packages/nc-gui/components.d.ts\n@@ -81,7 +81,6 @@ declare module '@vue/runtime-core' {\n     ClaritySuccessLine: typeof import('~icons/clarity/success-line')['default']\n     EvaEmailOutline: typeof import('~icons/eva/email-outline')['default']\n     IcBaselineMoreVert: typeof import('~icons/ic/baseline-more-vert')['default']\n-    Icon: typeof import('~icons/ic/on')['default']\n     IcOutlineInsertDriveFile: typeof import('~icons/ic/outline-insert-drive-file')['default']\n     IcRoundEdit: typeof import('~icons/ic/round-edit')['default']\n     IcRoundKeyboardArrowDown: typeof import('~icons/ic/round-keyboard-arrow-down')['default']\n""]",1,"[""d1d55e787b7d07f763852602b9939a5394607fd9""]","[""fix""]"
"spring version, core version","[""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n""]",1,"[""c55591ba157298a9c5816693c102a89dfd058830""]","[""build""]"
"fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.","[""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n""]",1,"[""9be725fa3906323d4bc9788f54eccf74109d632b""]","[""fix""]"
"fix netty dependency

netty-bom 4.1.70 contains the changes from pull request
https://github.com/netty/netty/pull/11798, which moved the classes out
of the native modules to make sure the same classes don't end up on the
classpath multiple times. For us it means that we need to depend on both
the native and classes modules. However, since we don't use the native
module directly (only classes that were moved to this classes module),
we need to force the dependency plugin to consider the native module as
used.","[""diff --git a/atomix/cluster/pom.xml b/atomix/cluster/pom.xml\nindex a477873..b6db695 100644\n--- a/atomix/cluster/pom.xml\n+++ b/atomix/cluster/pom.xml\n@@ -69,6 +69,10 @@\n     </dependency>\n     <dependency>\n       <groupId>io.netty</groupId>\n+      <artifactId>netty-transport-classes-epoll</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.netty</groupId>\n       <artifactId>netty-transport-native-epoll</artifactId>\n       <classifier>linux-x86_64</classifier>\n     </dependency>\n@@ -278,6 +282,7 @@\n             <dependency>uk.co.real-logic:sbe-tool</dependency>\n             <dependency>net.jqwik:jqwik</dependency>\n             <dependency>io.netty:netty-tcnative-boringssl-static</dependency>\n+            <dependency>io.netty:netty-transport-native-epoll</dependency>\n           </usedDependencies>\n         </configuration>\n       </plugin>\n""]",1,"[""f00a4d3e307b89842250358ee432e6800bb24362""]","[""build""]"
add comments for the Handler,"[""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n""]",1,"[""036a0ff49a7dade0e04c9c07071a1ff49133ee24""]","[""docs""]"
add .nullif() example,"[""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n""]",1,"[""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21""]","[""docs""]"
restructure ClusterTopology to track completed change,"[""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n""]",1,"[""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2""]","[""refactor""]"
add spacing in comment fix lint (#8555),"[""diff --git a/src/components/nav/test/basic/app-module.ts b/src/components/nav/test/basic/app-module.ts\nindex 467917a..375e662 100644\n--- a/src/components/nav/test/basic/app-module.ts\n+++ b/src/components/nav/test/basic/app-module.ts\n@@ -633,7 +633,7 @@ export class Tab3 {\n   }\n \n   presentModal() {\n-    //this.modalCtrl.create(MyModal).present();\n+    // this.modalCtrl.create(MyModal).present();\n   }\n \n   selectPrevious() {\n""]",1,"[""af880ac5b4fecbc6c4f3d1eee0d95f326e8bd9d1""]","[""docs""]"
"never call ""onStart"" prop when idle","[""diff --git a/packages/core/src/SpringValue.ts b/packages/core/src/SpringValue.ts\nindex 18494a8..cbc4f27 100644\n--- a/packages/core/src/SpringValue.ts\n+++ b/packages/core/src/SpringValue.ts\n@@ -596,11 +596,11 @@ export class SpringValue<T = any> extends AnimationValue<T> {\n   /** Notify change observers */\n   protected _onChange(value: T, idle = false) {\n     const anim = this.animation\n-    if (!anim.changed) {\n+    if (!anim.changed && !idle) {\n       anim.changed = true\n       // The \""onStart\"" prop is called on the first change after entering the\n       // frameloop, but never for immediate animations.\n-      if (anim.onStart && !anim.immediate) {\n+      if (anim.onStart) {\n         anim.onStart(this)\n       }\n     }\n""]",1,"[""c8e0ae8612df3d6f2831acc004aaac332f6105e4""]","[""fix""]"
make it mode less,"[""diff --git a/core/src/components/slides/slides.tsx b/core/src/components/slides/slides.tsx\nindex 48fd53f..d5c2f75 100644\n--- a/core/src/components/slides/slides.tsx\n+++ b/core/src/components/slides/slides.tsx\n@@ -1,7 +1,6 @@\n import { Component, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n \n import { Mode } from '../../interface.js';\n-import { createThemedClasses } from '../../utils/theme.js';\n \n import { Swiper } from './vendor/swiper.js';\n \n@@ -15,6 +14,7 @@ import { Swiper } from './vendor/swiper.js';\n   shadow: true\n })\n export class Slides {\n+\n   private container!: HTMLElement;\n   private swiper: any;\n \n@@ -391,12 +391,6 @@ export class Slides {\n     return { ...swiperOptions, ...this.options, ...eventOptions };\n   }\n \n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'slides')\n-    };\n-  }\n-\n   render() {\n     return (\n       <div class=\""swiper-container\"" ref={el => this.container = el as HTMLElement }>\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.scss b/core/src/components/thumbnail/thumbnail.ios.scss\ndeleted file mode 100644\nindex e3add45..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.ios.vars\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-ios-width};\n-  --border-radius: #{$thumbnail-ios-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.vars.scss b/core/src/components/thumbnail/thumbnail.ios.vars.scss\ndeleted file mode 100644\nindex 85d53e5..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.ios\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-ios-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-ios-height:                  $thumbnail-ios-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-ios-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.md.scss b/core/src/components/thumbnail/thumbnail.md.scss\ndeleted file mode 100644\nindex 0fbb2ca..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.md.vars\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-md-width};\n-  --border-radius: #{$thumbnail-md-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.md.vars.scss b/core/src/components/thumbnail/thumbnail.md.vars.scss\ndeleted file mode 100644\nindex 94e48b2..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.md\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-md-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-md-height:                  $thumbnail-md-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-md-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.scss b/core/src/components/thumbnail/thumbnail.scss\nindex 8ac3a22..8af268d 100644\n--- a/core/src/components/thumbnail/thumbnail.scss\n+++ b/core/src/components/thumbnail/thumbnail.scss\n@@ -9,6 +9,8 @@\n    * @prop --border-radius: Border radius of the thumbnail\n    * @prop --size: Size of the thumbnail\n    */\n+  --size: 48px;\n+  --border-radius: 0;\n \n   @include border-radius(var(--border-radius));\n \ndiff --git a/core/src/components/thumbnail/thumbnail.tsx b/core/src/components/thumbnail/thumbnail.tsx\nindex 50ff2c2..de76593 100644\n--- a/core/src/components/thumbnail/thumbnail.tsx\n+++ b/core/src/components/thumbnail/thumbnail.tsx\n@@ -1,25 +1,11 @@\n import { Component } from '@stencil/core';\n \n-import { Mode } from '../../interface';\n-import { createThemedClasses } from '../../utils/theme';\n-\n @Component({\n   tag: 'ion-thumbnail',\n-  styleUrls: {\n-    ios: 'thumbnail.ios.scss',\n-    md: 'thumbnail.md.scss'\n-  },\n+  styleUrl: 'thumbnail.scss',\n   shadow: true\n })\n export class Thumbnail {\n-  mode!: Mode;\n-\n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'thumbnail')\n-    };\n-  }\n-\n   render() {\n     return <slot></slot>;\n   }\n""]",1,"[""771857b1df9470ebc15357e8879118a72c649d5b""]","[""refactor""]"
remove appear css animation,"[""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n""]",1,"[""47ef9104e4a89e80d7cc6c1950bc080841da4a7b""]","[""refactor""]"
convert `run_tag_values_test_case` to a function,"[""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n""]",1,"[""1db13ec43727aca872a0f3836e4023ed85db665e""]","[""refactor""]"
update flushed index before truncating,"[""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n""]",1,"[""933ab6bb86372913c992567cf9660009900911a7""]","[""fix""]"
skip flaky test,"[""diff --git a/test/browser-pool/browser-pool.test.ts b/test/browser-pool/browser-pool.test.ts\nindex 9f21322..7a011b5 100644\n--- a/test/browser-pool/browser-pool.test.ts\n+++ b/test/browser-pool/browser-pool.test.ts\n@@ -128,7 +128,8 @@ describe.each([\n             expect(page.close).toBeDefined();\n         });\n \n-        test('should allow early aborting in case of outer timeout', async () => {\n+        // TODO: this test is very flaky in the CI\n+        test.skip('should allow early aborting in case of outer timeout', async () => {\n             const timeout = browserPool.operationTimeoutMillis;\n             browserPool.operationTimeoutMillis = 500;\n             // @ts-expect-error mocking private method\n""]",1,"[""e2e8ad25854bd1e7cdbc7f50b50bbd99e04ad47d""]","[""test""]"
[gn] fix include_dirs ordering error,"[""diff --git a/BUILD.gn b/BUILD.gn\nindex 11adaa7..ed64b17 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -240,6 +240,14 @@ static_library(\""electron_lib\"") {\n     \""brightray\"",\n     \""build/node\"",\n   ]\n+  include_dirs = [\n+    \""chromium_src\"",\n+    \"".\"",\n+    \""$target_gen_dir\"",\n+    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n+    # API of blink, then delete this include dir.\n+    \""//third_party/WebKit/Source\"",\n+  ]\n   if (enable_desktop_capturer) {\n     deps += [ \""//third_party/webrtc/modules/desktop_capture\"" ]\n   }\n@@ -275,14 +283,6 @@ static_library(\""electron_lib\"") {\n     # Disable warnings for g_settings_list_schemas.\n     \""GLIB_DISABLE_DEPRECATION_WARNINGS\"",\n   ]\n-  include_dirs = [\n-    \""chromium_src\"",\n-    \"".\"",\n-    \""$target_gen_dir\"",\n-    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n-    # API of blink, then delete this include dir.\n-    \""//third_party/WebKit/Source\"",\n-  ]\n   if (is_component_build) {\n     defines += [\n       # Import V8 symbols from shared library (node.dll / libnode.so)\n""]",1,"[""c44cf88a6ec54e5ddd99d8348bcc57b301ec7945""]","[""build""]"
add remote [skip ci],"[""diff --git a/.github/workflows/ibis-rebase-nightly.yml b/.github/workflows/ibis-rebase-nightly.yml\nindex 06c9003..e19c703 100644\n--- a/.github/workflows/ibis-rebase-nightly.yml\n+++ b/.github/workflows/ibis-rebase-nightly.yml\n@@ -47,7 +47,10 @@ jobs:\n           git config --global user.email 'ibis-squawk-bot[bot]@users.noreply.github.com'\n \n       - name: fetch and rebase on top of upstream\n-        run: git pull --rebase -X ours https://github.com/ibis-project/ibis master\n+        run: |\n+          git remote add upstream https://github.com/ibis-project/ibis\n+          git fetch upstream\n+          git rebase -X ours upstream/master\n \n       - uses: tibdex/github-app-token@v1\n         id: generate_pr_token\n""]",1,"[""e96487ad7ce90b141219d9032fa2bed68d5dae6a""]","[""cicd""]"
[gn win] link comctl32.lib to fix component build,"[""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n""]",1,"[""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0""]","[""build""]"
better layout for block and segment,"[""diff --git a/docs/docs/config-block.md b/docs/docs/config-block.md\nnew file mode 100644\nindex 0000000..df1ee54\n--- /dev/null\n+++ b/docs/docs/config-block.md\n@@ -0,0 +1,60 @@\n+---\n+id: config-block\n+title: Block\n+sidebar_label: Block\n+---\n+\n+Let's take a closer look at what defines a block.\n+\n+```json\n+{\n+  \""$schema\"": \""https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json\"",\n+  ...\n+  \""blocks\"": [\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""left\"",\n+      \""segments\"": [\n+        ...\n+      ]\n+    }\n+  ]\n+}\n+```\n+\n+- type: `prompt` | `rprompt`\n+- newline: `boolean`\n+- alignment: `left` | `right`\n+- vertical_offset: `int`\n+- horizontal_offset: `int`\n+- segments: `array` of one or more `segments`\n+\n+### Type\n+\n+Tells the engine what to do with the block. There are three options:\n+\n+- `prompt` renders one or more segments\n+- `rprompt` renders one or more segments aligned to the right of the cursor. Only one `rprompt` block is permitted.\n+Supported on [ZSH][rprompt], Bash and Powershell.\n+\n+### Newline\n+\n+Start the block on a new line. Defaults to `false`.\n+\n+### Alignment\n+\n+Tell the engine if the block should be left or right-aligned.\n+\n+### Vertical offset\n+\n+Move the block up or down x lines. For example, `vertical_offset: 1` moves the prompt down one line, `vertical_offset: -1`\n+moves it up one line.\n+\n+### Horizontal offset\n+\n+Moves the segment to the left or the right to have it exactly where you want it to be. Works like `vertical_offset`\n+but on a horizontal level where a negative number moves the block left and a positive number right.\n+\n+### Segments\n+\n+Array of one or more segments.\ndiff --git a/docs/docs/config-example.md b/docs/docs/config-example.md\nnew file mode 100644\nindex 0000000..c180c4f\n--- /dev/null\n+++ b/docs/docs/config-example.md\n@@ -0,0 +1,96 @@\n+---\n+id: config-sample\n+title: Sample\n+sidebar_label: Sample\n+---\n+\n+```json\n+{\n+  \""final_space\"": true,\n+  \""blocks\"": [\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""right\"",\n+      \""vertical_offset\"": -1,\n+      \""segments\"": [\n+        {\n+          \""type\"": \""time\"",\n+          \""style\"": \""plain\"",\n+          \""foreground\"": \""#007ACC\"",\n+          \""properties\"": {\n+            \""time_format\"": \""15:04:05\""\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""left\"",\n+      \""newline\"": true,\n+      \""segments\"": [\n+        {\n+          \""type\"": \""session\"",\n+          \""style\"": \""diamond\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#ffb300\"",\n+          \""leading_diamond\"": \""\\uE0B6\"",\n+          \""trailing_diamond\"": \""\\uE0B0\"",\n+          \""properties\"": {\n+            \""postfix\"": \"" \""\n+          }\n+        },\n+        {\n+          \""type\"": \""path\"",\n+          \""style\"": \""powerline\"",\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#61AFEF\"",\n+          \""properties\"": {\n+            \""prefix\"": \"" \\uE5FF \"",\n+            \""style\"": \""folder\"",\n+            \""exclude_folders\"": [\n+              \""/super/secret/project\""\n+            ],\n+            \""enable_hyperlink\"": false\n+          }\n+        },\n+        {\n+          \""type\"": \""git\"",\n+          \""style\"": \""powerline\"",\n+          \""foreground\"": \""#193549\"",\n+          \""foreground_templates\"": [\n+            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#ffffff{{ end }}\""\n+          ],\n+          \""background\"": \""#2e9599\"",\n+          \""background_templates\"": [\n+            \""{{ if or (.Working.Changed) (.Staging.Changed) }}#f36943{{ end }}\"",\n+            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#a8216b{{ end }}\"",\n+            \""{{ if gt .Ahead 0 }}#35b5ff{{ end }}\"",\n+            \""{{ if gt .Behind 0 }}#f89cfa{{ end }}\""\n+          ],\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""properties\"": {\n+            \""fetch_status\"": true,\n+            \""branch_max_length\"": 25,\n+            \""template\"": \""{{ .HEAD }}{{ .BranchStatus }}\""\n+          }\n+        },\n+        {\n+          \""type\"": \""exit\"",\n+          \""style\"": \""diamond\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#00897b\"",\n+          \""background_templates\"": [\""{{ if gt .Code 0 }}#e91e63{{ end }}\""],\n+          \""leading_diamond\"": \""\"",\n+          \""trailing_diamond\"": \""\\uE0B4\"",\n+          \""properties\"": {\n+            \""always_enabled\"": true,\n+            \""template\"": \""\\uE23A\"",\n+            \""prefix\"": \""<parentBackground>\\uE0B0</> \""\n+          }\n+        }\n+      ]\n+    }\n+  ]\n+}\n+```\ndiff --git a/docs/docs/config-overview.md b/docs/docs/config-overview.md\nindex 1fdbcba..b554869 100644\n--- a/docs/docs/config-overview.md\n+++ b/docs/docs/config-overview.md\n@@ -1,7 +1,7 @@\n ---\n id: config-overview\n-title: Overview\n-sidebar_label: Overview\n+title: General\n+sidebar_label: General\n ---\n \n Oh My Posh renders your prompt based on the definition of _blocks_ (like Lego) which contain one or more _segments_.\n@@ -64,332 +64,7 @@ boxes with question marks, set up your terminal to use a [supported font][font] \n - terminal_background: `string` [color][colors] - terminal background color, set to your terminal's background color when\n you notice black elements in Windows Terminal or the Visual Studio Code integrated terminal\n \n-## Block\n-\n-Let's take a closer look at what defines a block.\n-\n-- type: `prompt` | `rprompt`\n-- newline: `boolean`\n-- alignment: `left` | `right`\n-- vertical_offset: `int`\n-- horizontal_offset: `int`\n-- segments: `array` of one or more `segments`\n-\n-### Type\n-\n-Tells the engine what to do with the block. There are three options:\n-\n-- `prompt` renders one or more segments\n-- `rprompt` renders one or more segments aligned to the right of the cursor. Only one `rprompt` block is permitted.\n-Supported on [ZSH][rprompt], Bash and Powershell.\n-\n-### Newline\n-\n-Start the block on a new line. Defaults to `false`.\n-\n-### Alignment\n-\n-Tell the engine if the block should be left or right-aligned.\n-\n-### Vertical offset\n-\n-Move the block up or down x lines. For example, `vertical_offset: 1` moves the prompt down one line, `vertical_offset: -1`\n-moves it up one line.\n-\n-### Horizontal offset\n-\n-Moves the segment to the left or the right to have it exactly where you want it to be. Works like `vertical_offset`\n-but on a horizontal level where a negative number moves the block left and a positive number right.\n-\n-### Segments\n-\n-Array of one or more segments.\n-\n-## Segment\n-\n-A segment is a part of the prompt with a certain context. There are different types available out-of-the-box, if you're\n-looking for what's included, feel free to skip this part and browse through the [segments][segments]. Keep reading to\n-understand how to configure a segment.\n-\n-- type: `string` any of the included [segments][segments]\n-- style: `powerline` | `plain` | `diamond`\n-- powerline_symbol: `string`\n-- invert_powerline: `boolean`\n-- leading_diamond: `string`\n-- trailing_diamond: `string`\n-- foreground: `string` [color][colors]\n-- foreground_templates: `array` of `string` values\n-- background: `string` [color][colors]\n-- background_templates: `array` of `string` values\n-- properties: `array` of `Property`: `string`\n-\n-### Type\n-\n-Takes the `string` value referencing which segment logic it needs to run (see [segments][segments] for possible values).\n-\n-### Style\n-\n-Oh Hi! You made it to a really interesting part, great! Style defines how a prompt is rendered. Looking at the most prompt\n-themes out there, we identified 3 types. All of these require a different configuration and depending on the look\n-you want to achieve you might need to understand/use them all.\n-\n-#### Powerline\n-\n-What started it all for us. Makes use of a single symbol (`powerline_symbol`) to separate the segments. It takes the\n-background color of the previous segment (or transparent if none) and the foreground of the current one (or transparent\n-if we're at the last segment). Expects segments to have a colored background, else there little use for this one.\n-\n-#### Plain\n-\n-Simple. Colored text on a transparent background. Make sure to set `foreground` for maximum enjoyment.\n-Segments will be separated by empty spaces unless you specify `''` for the `prefix` and `postfix` settings for the segment.\n-\n-#### Diamond\n-\n-While Powerline works great with a single symbol, sometimes you want a segment to have a different start and end symbol.\n-Just like a diamond: `< my segment text >`. The difference between this and plain is that the diamond symbols take the\n-segment background as their foreground color.\n-\n-### Powerline symbol\n-\n-Text character to use when `\""style\"": \""powerline\""`.\n-\n-### Invert Powerline\n-\n-If `true` this swaps the foreground and background colors. Can be useful when the character you want does not exist\n-in the perfectly mirrored variant for example.\n-\n-### Leading diamond\n-\n-Text character to use at the start of the segment. Will take the background color of the segment as\n-its foreground color.\n-\n-### Trailing diamond\n-\n-Text character to use at the end of the segment. Will take the background color of the segment as its foreground color.\n-\n-### Foreground\n-\n-[Color][colors] to use as the segment text foreground color. Also supports transparency using the `transparent` keyword.\n-\n-### Foreground Templates\n-\n-Array if string templates to define the foreground color for the given Segment based on the Segment's Template Properties.\n-Under the hood this uses go's [text/template][go-text-template] feature extended with [sprig][sprig] and\n-offers a few standard properties to work with. For supported Segments, look for the **Template Properties** section in\n-the documentation.\n-\n-The following sample is based on the [AWS Segment][aws].\n-\n-```json\n-{\n-  \""type\"": \""aws\"",\n-  \""style\"": \""powerline\"",\n-  \""powerline_symbol\"": \""\\uE0B0\"",\n-  \""foreground\"": \""#ffffff\"",\n-  \""background\"": \""#111111\"",\n-  \""foreground_templates\"": [\n-    \""{{if contains \\\""default\\\"" .Profile}}#FFA400{{end}}\"",\n-    \""{{if contains \\\""jan\\\"" .Profile}}#f1184c{{end}}\""\n-  ],\n-  \""properties\"": {\n-    \""prefix\"": \"" \\uE7AD \""\n-  }\n-}\n-```\n-\n-The logic is as follows: when `background_templates` contains an array, we will check every template line until there's\n-one that returns a non-empty string. So, when the contents of `.Profile` contain the word `default`, the first template\n-returns `#FFA400` and that's the color that will be used. If it contains `jan`, it returns `#f1184c`. When none of the\n-templates returns a value, the foreground value `#ffffff` is used.\n-\n-### Background\n-\n-[Color][colors] to use as the segment text background color. Also supports transparency using the `transparent` keyword.\n-\n-### Background Templates\n-\n-Same as [Foreground Templates][fg-templ] but for the background color.\n-\n-### Properties\n-\n-An array of **Properties** with a value. This is used inside of the segment logic to tweak what the output of the segment\n-will be. Segments have the ability to define their own Properties, but there are some general ones being used by the\n-engine which allow you to customize the output even more.\n-\n-#### General-purpose properties\n-\n-You can use these on any segment, the engine is responsible for adding them correctly.\n-\n-- prefix: `string`\n-- postfix: `string`\n-- include_folders: `[]string`\n-- exclude_folders: `[]string`\n-\n-##### Prefix\n-\n-The string content will be put in front of the segment's output text. Useful for symbols, text or other customizations.\n-If this is not set, it will be an empty space in `plain` mode. If you want to remove the space before the segment,\n-specify this as `''`.\n-\n-##### Postfix\n-\n-The string content will be put after the segment's output text. Useful for symbols, text or other customizations.\n-If this is not set, it will default to an empty space in `plain` mode. If you want to remove the space after the segment,\n-specify this as `''`.\n-\n-##### Include / Exclude Folders\n-\n-Sometimes you might want to have a segment only rendered in certain folders. If `include_folders` is specified,\n-the segment will only be rendered when in one of those locations. If `exclude_folders` is specified, the segment\n-will not be rendered when in one of the excluded locations.\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects\""\n-]\n-```\n-\n-```json\n-\""exclude_folders\"": [\n-  \""/Users/posh/Projects\""\n-]\n-```\n-\n-The strings specified in these properties are evaluated as [regular expressions][regex]. You\n-can use any valid regular expression construct, but the regular expression must match the entire directory\n-name. The following will match `/Users/posh/Projects/Foo` but not `/home/Users/posh/Projects/Foo`.\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects.*\""\n-]\n-```\n-\n-You can also combine these properties:\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects.*\""\n-],\n-\""exclude_folders\"": [\n-  \""/Users/posh/Projects/secret-project.*\""\n-]\n-```\n-\n-##### Notes\n-\n-- Oh My Posh will accept both `/` and `\\` as path separators for a folder and will match regardless of which\n-is used by the current operating system.\n-- Because the strings are evaluated as regular expressions, if you want to use a `\\` in a Windows\n-directory name, you need to specify it as `\\\\\\\\`.\n-- The character `~` at the start of a specified folder will match the user's home directory.\n-- The comparison is case-insensitive on Windows and macOS, but case-sensitive on other operating systems.\n-\n-This means that for user Bill, who has a user account `Bill` on Windows and `bill` on Linux,  `~/Foo` might match\n-`C:\\Users\\Bill\\Foo` or `C:\\Users\\Bill\\foo` on Windows but only `/home/bill/Foo` on Linux.\n-\n-## Full Sample\n-\n-```json\n-{\n-  \""final_space\"": true,\n-  \""blocks\"": [\n-    {\n-      \""type\"": \""prompt\"",\n-      \""alignment\"": \""right\"",\n-      \""vertical_offset\"": -1,\n-      \""segments\"": [\n-        {\n-          \""type\"": \""time\"",\n-          \""style\"": \""plain\"",\n-          \""foreground\"": \""#007ACC\"",\n-          \""properties\"": {\n-            \""time_format\"": \""15:04:05\""\n-          }\n-        }\n-      ]\n-    },\n-    {\n-      \""type\"": \""prompt\"",\n-      \""alignment\"": \""left\"",\n-      \""newline\"": true,\n-      \""segments\"": [\n-        {\n-          \""type\"": \""session\"",\n-          \""style\"": \""diamond\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#ffb300\"",\n-          \""leading_diamond\"": \""\\uE0B6\"",\n-          \""trailing_diamond\"": \""\\uE0B0\"",\n-          \""properties\"": {\n-            \""postfix\"": \"" \""\n-          }\n-        },\n-        {\n-          \""type\"": \""path\"",\n-          \""style\"": \""powerline\"",\n-          \""powerline_symbol\"": \""\\uE0B0\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#61AFEF\"",\n-          \""properties\"": {\n-            \""prefix\"": \"" \\uE5FF \"",\n-            \""style\"": \""folder\"",\n-            \""exclude_folders\"": [\n-              \""/super/secret/project\""\n-            ],\n-            \""enable_hyperlink\"": false\n-          }\n-        },\n-        {\n-          \""type\"": \""git\"",\n-          \""style\"": \""powerline\"",\n-          \""foreground\"": \""#193549\"",\n-          \""foreground_templates\"": [\n-            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#ffffff{{ end }}\""\n-          ],\n-          \""background\"": \""#2e9599\"",\n-          \""background_templates\"": [\n-            \""{{ if or (.Working.Changed) (.Staging.Changed) }}#f36943{{ end }}\"",\n-            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#a8216b{{ end }}\"",\n-            \""{{ if gt .Ahead 0 }}#35b5ff{{ end }}\"",\n-            \""{{ if gt .Behind 0 }}#f89cfa{{ end }}\""\n-          ],\n-          \""powerline_symbol\"": \""\\uE0B0\"",\n-          \""properties\"": {\n-            \""fetch_status\"": true,\n-            \""branch_max_length\"": 25,\n-            \""template\"": \""{{ .HEAD }}{{ .BranchStatus }}\""\n-          }\n-        },\n-        {\n-          \""type\"": \""exit\"",\n-          \""style\"": \""diamond\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#00897b\"",\n-          \""background_templates\"": [\""{{ if gt .Code 0 }}#e91e63{{ end }}\""],\n-          \""leading_diamond\"": \""\"",\n-          \""trailing_diamond\"": \""\\uE0B4\"",\n-          \""properties\"": {\n-            \""always_enabled\"": true,\n-            \""template\"": \""\\uE23A\"",\n-            \""prefix\"": \""<parentBackground>\\uE0B0</> \""\n-          }\n-        }\n-      ]\n-    }\n-  ]\n-}\n-```\n-\n [releases]: https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest\n [font]: /docs/config-fonts\n [schema]: https://github.com/JanDeDobbeleer/oh-my-posh/blob/main/themes/schema.json\n [themes]: https://github.com/JanDeDobbeleer/oh-my-posh/tree/main/themes\n-[segments]: /docs/battery\n-[colors]: /docs/config-colors\n-[go-text-template]: https://golang.org/pkg/text/template/\n-[sprig]: https://masterminds.github.io/sprig/\n-[fg-templ]: /docs/config-overview#foreground-templates\n-[regex]: https://www.regular-expressions.info/tutorial.html\n-[aws]: /docs/aws\ndiff --git a/docs/docs/config-segment.md b/docs/docs/config-segment.md\nnew file mode 100644\nindex 0000000..08a66e4\n--- /dev/null\n+++ b/docs/docs/config-segment.md\n@@ -0,0 +1,219 @@\n+---\n+id: config-segment\n+title: Segment\n+sidebar_label: Segment\n+---\n+\n+A segment is a part of the prompt with a certain context. There are different types available out-of-the-box, if you're\n+looking for what's included, feel free to skip this part and browse through the [segments][segments]. Keep reading to\n+understand how to configure a segment.\n+\n+```json\n+{\n+  \""$schema\"": \""https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json\"",\n+  ...\n+  \""blocks\"": [\n+    {\n+      ...\n+      \""segments\"": [\n+        {\n+          \""type\"": \""path\"",\n+          \""style\"": \""powerline\"",\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#61AFEF\"",\n+          \""properties\"": {\n+            ...\n+          }\n+        }\n+      ]\n+    }\n+  ]\n+}\n+```\n+\n+- type: `string` any of the included [segments][segments]\n+- style: `powerline` | `plain` | `diamond`\n+- powerline_symbol: `string`\n+- invert_powerline: `boolean`\n+- leading_diamond: `string`\n+- trailing_diamond: `string`\n+- foreground: `string` [color][colors]\n+- foreground_templates: `array` of `string` values\n+- background: `string` [color][colors]\n+- background_templates: `array` of `string` values\n+- properties: `array` of `Property`: `string`\n+\n+## Type\n+\n+Takes the `string` value referencing which segment logic it needs to run (see [segments][segments] for possible values).\n+\n+## Style\n+\n+Oh Hi! You made it to a really interesting part, great! Style defines how a prompt is rendered. Looking at the most prompt\n+themes out there, we identified 3 types. All of these require a different configuration and depending on the look\n+you want to achieve you might need to understand/use them all.\n+\n+### Powerline\n+\n+What started it all for us. Makes use of a single symbol (`powerline_symbol`) to separate the segments. It takes the\n+background color of the previous segment (or transparent if none) and the foreground of the current one (or transparent\n+if we're at the last segment). Expects segments to have a colored background, else there little use for this one.\n+\n+### Plain\n+\n+Simple. Colored text on a transparent background. Make sure to set `foreground` for maximum enjoyment.\n+Segments will be separated by empty spaces unless you specify `''` for the `prefix` and `postfix` settings for the segment.\n+\n+### Diamond\n+\n+While Powerline works great with a single symbol, sometimes you want a segment to have a different start and end symbol.\n+Just like a diamond: `< my segment text >`. The difference between this and plain is that the diamond symbols take the\n+segment background as their foreground color.\n+\n+## Powerline symbol\n+\n+Text character to use when `\""style\"": \""powerline\""`.\n+\n+## Invert Powerline\n+\n+If `true` this swaps the foreground and background colors. Can be useful when the character you want does not exist\n+in the perfectly mirrored variant for example.\n+\n+## Leading diamond\n+\n+Text character to use at the start of the segment. Will take the background color of the segment as\n+its foreground color.\n+\n+## Trailing diamond\n+\n+Text character to use at the end of the segment. Will take the background color of the segment as its foreground color.\n+\n+## Foreground\n+\n+[Color][colors] to use as the segment text foreground color. Also supports transparency using the `transparent` keyword.\n+\n+## Foreground Templates\n+\n+Array if string templates to define the foreground color for the given Segment based on the Segment's Template Properties.\n+Under the hood this uses go's [text/template][go-text-template] feature extended with [sprig][sprig] and\n+offers a few standard properties to work with. For supported Segments, look for the **Template Properties** section in\n+the documentation.\n+\n+The following sample is based on the [AWS Segment][aws].\n+\n+```json\n+{\n+  \""type\"": \""aws\"",\n+  \""style\"": \""powerline\"",\n+  \""powerline_symbol\"": \""\\uE0B0\"",\n+  \""foreground\"": \""#ffffff\"",\n+  \""background\"": \""#111111\"",\n+  \""foreground_templates\"": [\n+    \""{{if contains \\\""default\\\"" .Profile}}#FFA400{{end}}\"",\n+    \""{{if contains \\\""jan\\\"" .Profile}}#f1184c{{end}}\""\n+  ],\n+  \""properties\"": {\n+    \""prefix\"": \"" \\uE7AD \""\n+  }\n+}\n+```\n+\n+The logic is as follows: when `background_templates` contains an array, we will check every template line until there's\n+one that returns a non-empty string. So, when the contents of `.Profile` contain the word `default`, the first template\n+returns `#FFA400` and that's the color that will be used. If it contains `jan`, it returns `#f1184c`. When none of the\n+templates returns a value, the foreground value `#ffffff` is used.\n+\n+## Background\n+\n+[Color][colors] to use as the segment text background color. Also supports transparency using the `transparent` keyword.\n+\n+## Background Templates\n+\n+Same as [Foreground Templates][fg-templ] but for the background color.\n+\n+## Properties\n+\n+An array of **Properties** with a value. This is used inside of the segment logic to tweak what the output of the segment\n+will be. Segments have the ability to define their own Properties, but there are some general ones being used by the\n+engine which allow you to customize the output even more.\n+\n+### General-purpose properties\n+\n+You can use these on any segment, the engine is responsible for adding them correctly.\n+\n+- prefix: `string`\n+- postfix: `string`\n+- include_folders: `[]string`\n+- exclude_folders: `[]string`\n+\n+#### Prefix\n+\n+The string content will be put in front of the segment's output text. Useful for symbols, text or other customizations.\n+If this is not set, it will be an empty space in `plain` mode. If you want to remove the space before the segment,\n+specify this as `''`.\n+\n+#### Postfix\n+\n+The string content will be put after the segment's output text. Useful for symbols, text or other customizations.\n+If this is not set, it will default to an empty space in `plain` mode. If you want to remove the space after the segment,\n+specify this as `''`.\n+\n+#### Include / Exclude Folders\n+\n+Sometimes you might want to have a segment only rendered in certain folders. If `include_folders` is specified,\n+the segment will only be rendered when in one of those locations. If `exclude_folders` is specified, the segment\n+will not be rendered when in one of the excluded locations.\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects\""\n+]\n+```\n+\n+```json\n+\""exclude_folders\"": [\n+  \""/Users/posh/Projects\""\n+]\n+```\n+\n+The strings specified in these properties are evaluated as [regular expressions][regex]. You\n+can use any valid regular expression construct, but the regular expression must match the entire directory\n+name. The following will match `/Users/posh/Projects/Foo` but not `/home/Users/posh/Projects/Foo`.\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects.*\""\n+]\n+```\n+\n+You can also combine these properties:\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects.*\""\n+],\n+\""exclude_folders\"": [\n+  \""/Users/posh/Projects/secret-project.*\""\n+]\n+```\n+\n+#### Notes\n+\n+- Oh My Posh will accept both `/` and `\\` as path separators for a folder and will match regardless of which\n+is used by the current operating system.\n+- Because the strings are evaluated as regular expressions, if you want to use a `\\` in a Windows\n+directory name, you need to specify it as `\\\\\\\\`.\n+- The character `~` at the start of a specified folder will match the user's home directory.\n+- The comparison is case-insensitive on Windows and macOS, but case-sensitive on other operating systems.\n+\n+This means that for user Bill, who has a user account `Bill` on Windows and `bill` on Linux,  `~/Foo` might match\n+`C:\\Users\\Bill\\Foo` or `C:\\Users\\Bill\\foo` on Windows but only `/home/bill/Foo` on Linux.\n+\n+[segments]: /docs/battery\n+[colors]: /docs/config-colors\n+[go-text-template]: https://golang.org/pkg/text/template/\n+[sprig]: https://masterminds.github.io/sprig/\n+[fg-templ]: /docs/config-overview#foreground-templates\n+[regex]: https://www.regular-expressions.info/tutorial.html\n+[aws]: /docs/aws\ndiff --git a/docs/docs/segment-environment.md b/docs/docs/segment-environment.md\nindex f35bc87..982a0a5 100644\n--- a/docs/docs/segment-environment.md\n+++ b/docs/docs/segment-environment.md\n@@ -34,7 +34,7 @@ New-Alias -Name 'Set-PoshContext' -Value 'Set-EnvVar' -Scope Global -Force\n \n The segment will show when the value of the environment variable isn't empty.\n \n-## Sample Configuration\n+## Sample *Configuration*\n \n ```json\n {\ndiff --git a/docs/sidebars.js b/docs/sidebars.js\nindex a75163e..8f151a2 100644\n--- a/docs/sidebars.js\n+++ b/docs/sidebars.js\n@@ -20,6 +20,9 @@ module.exports = {\n       label: \""\u2699\ufe0f Configuration\"",\n       items: [\n         \""config-overview\"",\n+        \""config-block\"",\n+        \""config-segment\"",\n+        \""config-sample\"",\n         \""config-title\"",\n         \""config-colors\"",\n         \""config-text-style\"",\n""]",1,"[""cb1f48b56ae0de93acb72e48726c7d610a1d538e""]","[""docs""]"
"initialize threejs objects in defaultRef, to fix undefined type errors","[""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n""]",1,"[""2561f4ade46fc9d59f289f328cc77733a6443697""]","[""fix""]"
use `regexp_instr != 0` instead of `REGEXP` keyword,"[""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n""]",1,"[""06e2be4e2019b6fa714e1fcb34485860ef1ede79""]","[""fix""]"
"cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.","[""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n""]",1,"[""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7""]","[""refactor""]"
fix build ordering,"[""diff --git a/scripts/build.mjs b/scripts/build.mjs\nindex 204854f..b3cf067 100644\n--- a/scripts/build.mjs\n+++ b/scripts/build.mjs\n@@ -3,8 +3,8 @@ import { write } from 'fsxx';\n import { info, success } from './helpers.mjs';\n \n await $`rm -rf dist/*`;\n-await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n await $`unbuild`;\n+await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n \n const packages = [\n   'jsx-runtime',\n""]",1,"[""c323d59c607cabc91f17a78528d998f376f30b10""]","[""build""]"
"remove deprecated settings

Removes deprecated ZEEBE_HOST environment variable, and removes
unnecessary log level environment variable, since it's already the
default in the log file","[""diff --git a/Dockerfile b/Dockerfile\nindex 6762a39..7f380cd 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -34,7 +34,6 @@ RUN wget -O - https://github.com/jvm-profiling-tools/async-profiler/releases/dow\n FROM ${APP_ENV} as app\n \n ENV ZB_HOME=/usr/local/zeebe \\\n-    ZEEBE_LOG_LEVEL=info \\\n     ZEEBE_BROKER_GATEWAY_NETWORK_HOST=0.0.0.0 \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \""${ZB_HOME}/bin:${PATH}\""\ndiff --git a/docker/utils/startup.sh b/docker/utils/startup.sh\nindex bc8d2fc..0fcde2b 100755\n--- a/docker/utils/startup.sh\n+++ b/docker/utils/startup.sh\n@@ -1,17 +1,14 @@\n #!/bin/bash -xeu\n \n-# legacy support\n-# This environment variable was used to set the gatewway cluster host in standalone and embedded mode.\n-# Now, there are two dedicated environment variables for the two different deployment scenarios.\n-export ZEEBE_HOST=${ZEEBE_HOST:-$(hostname -i)}\n-# Legacy support\n+HOST=$(hostname -i)\n \n if [ \""$ZEEBE_STANDALONE_GATEWAY\"" = \""true\"" ]; then\n-    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_GATEWAY_NETWORK_HOST=${ZEEBE_GATEWAY_NETWORK_HOST:-${HOST}}\n+    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${HOST}}\n \n     exec /usr/local/zeebe/bin/gateway\n else\n-    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${HOST}}\n     export ZEEBE_BROKER_GATEWAY_CLUSTER_HOST=${ZEEBE_BROKER_GATEWAY_CLUSTER_HOST:-${ZEEBE_BROKER_NETWORK_HOST}}\n \n     exec /usr/local/zeebe/bin/broker\n""]",1,"[""e4a11fd5c34942ba12737f1c8c084489428ee274""]","[""build""]"
add fallible peek_last_token(),"[""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n""]",1,"[""63eab619e6166eb6cab948028a7b89bf059dd878""]","[""refactor""]"
licensing,"[""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n""]",1,"[""a52a585d74894b3b4eeb8c784fa089ff95cddad0""]","[""docs""]"
detach ViewControllers when not active,"[""diff --git a/ionic/components/nav/nav-controller.ts b/ionic/components/nav/nav-controller.ts\nindex becdd99..1cc3c31 100644\n--- a/ionic/components/nav/nav-controller.ts\n+++ b/ionic/components/nav/nav-controller.ts\n@@ -1410,6 +1410,9 @@ export class NavController extends Ion {\n       // set the ComponentRef's instance to this ViewController\n       view.setInstance(component);\n \n+      // remember the ChangeDetectorRef for this ViewController\n+      view.setChangeDetector(hostViewRef.changeDetectorRef);\n+\n       // remember the ElementRef to the ion-page elementRef that was just created\n       view.setPageRef(pageElementRef);\n \ndiff --git a/ionic/components/nav/view-controller.ts b/ionic/components/nav/view-controller.ts\nindex 3207fa2..069c74d 100644\n--- a/ionic/components/nav/view-controller.ts\n+++ b/ionic/components/nav/view-controller.ts\n@@ -1,4 +1,4 @@\n-import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer} from 'angular2/core';\n+import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer, ChangeDetectorRef} from 'angular2/core';\n \n import {Navbar} from '../navbar/navbar';\n import {NavController, NavOptions} from './nav-controller';\n@@ -33,6 +33,7 @@ export class ViewController {\n   private _nbVwRef: ViewContainerRef;\n   private _onDismiss: Function = null;\n   private _pgRef: ElementRef;\n+  private _cd: ChangeDetectorRef;\n   protected _nav: NavController;\n \n   /**\n@@ -166,6 +167,13 @@ export class ViewController {\n   /**\n    * @private\n    */\n+  setChangeDetector(cd: ChangeDetectorRef) {\n+    this._cd = cd;\n+  }\n+\n+  /**\n+   * @private\n+   */\n   setInstance(instance: any) {\n     this.instance = instance;\n   }\n@@ -467,6 +475,14 @@ export class ViewController {\n    * The view is about to enter and become the active view.\n    */\n   willEnter() {\n+    if (this._cd) {\n+      // ensure this has been re-attached to the change detector\n+      this._cd.reattach();\n+\n+      // detect changes before we run any user code\n+      this._cd.detectChanges();\n+    }\n+\n     ctrlFn(this, 'onPageWillEnter');\n   }\n \n@@ -496,6 +512,10 @@ export class ViewController {\n    */\n   didLeave() {\n     ctrlFn(this, 'onPageDidLeave');\n+\n+    // when this is not the active page\n+    // we no longer need to detect changes\n+    this._cd && this._cd.detach();\n   }\n \n   /**\n""]",1,"[""b282e90e2cbb74559aab79eee8443a4d7c85502a""]","[""feat""]"
"Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>","[""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n""]",1,"[""f823cf28652987d43c8324b4f5b203240032383a""]","[""feat""]"
allow disabling dynamic queue,"[""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n""]",1,"[""9ef5c0d14193a9abb09b39856f58477d1f4b0d77""]","[""fix""]"
"enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>","[""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n""]",1,"[""fd8e563cc19ca4684885d4692acee6bebcca4ada""]","[""feat""]"
run pyspark tests in parallel,"[""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex e23088e..9708157 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -202,11 +202,11 @@ jobs:\n         run: poetry install --without dev --without docs --extras ${{ matrix.backend.name }} --extras geospatial\n \n       - name: \""run parallel tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name != 'pyspark' && matrix.backend.name != 'impala'\n+        if: matrix.backend.name != 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }} --numprocesses auto --dist=loadgroup\n \n       - name: \""run serial tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name == 'pyspark' || matrix.backend.name == 'impala'\n+        if: matrix.backend.name == 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }}\n         env:\n           IBIS_TEST_NN_HOST: localhost\n""]",1,"[""4cbbd2552ba0de273e1dfe7d453c5b3efed751a3""]","[""cicd""]"
add riscv64gc-unknown-linux-gnu,"[""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n""]",1,"[""173553c0372e66e03bdab19e0e6c2dd44daa14a0""]","[""cicd""]"
split release docs build into separate workflow,"[""diff --git a/.github/workflows/ibis-docs-lint.yml b/.github/workflows/ibis-docs-lint.yml\nindex 753d57d..3e0aa15 100644\n--- a/.github/workflows/ibis-docs-lint.yml\n+++ b/.github/workflows/ibis-docs-lint.yml\n@@ -88,14 +88,14 @@ jobs:\n         run: poetry run pytest --benchmark-only --benchmark-json .benchmarks/output.json ibis/tests/benchmarks\n \n       - uses: tibdex/github-app-token@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         id: generate-token\n         with:\n           app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}\n           private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}\n \n       - uses: benchmark-action/github-action-benchmark@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         with:\n           tool: pytest\n           github-token: ${{ steps.generate-token.outputs.token }}\n@@ -107,6 +107,7 @@ jobs:\n \n   docs:\n     runs-on: ubuntu-latest\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n     needs:\n       # wait on benchmarks to prevent a race condition when pushing to the\n       # gh-pages branch\n@@ -124,51 +125,25 @@ jobs:\n           authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n           extraPullNames: nix-community,poetry2nix\n \n-      - name: Generate a GitHub token\n-        if: ${{ github.event_name == 'push' }}\n-        uses: tibdex/github-app-token@v1\n-        id: generate_token\n-        with:\n-          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n-          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n-\n-      - name: checkout\n-        if: ${{ github.event_name == 'push' }}\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          token: ${{ steps.generate_token.outputs.token }}\n-\n       - name: checkout\n-        if: ${{ github.event_name != 'push' }}\n         uses: actions/checkout@v3\n \n-      - name: Configure git info\n-        if: ${{ github.event_name == 'push' }}\n-        run: |\n-          set -euo pipefail\n-\n-          git config user.name 'ibis-docs-bot[bot]'\n-          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n-\n       - name: build docs\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c mkdocs build\n \n       - name: verify internal links\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c just checklinks --offline --no-progress\n \n-      - name: Pull gh-pages changes\n+      - name: Configure git info\n         if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n-          git fetch origin gh-pages\n-          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n \n       - name: build and push dev docs\n-        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/') }}\n+        if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n@@ -180,19 +155,6 @@ jobs:\n               --message 'docs(dev): ibis@${{ github.sha }}' \\\n                 dev\n \n-      - name: build and push docs on tag\n-        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}\n-        run: |\n-          set -euo pipefail\n-\n-          nix develop -f shell.nix --keep-going -c \\\n-            mic deploy \\\n-              --push \\\n-              --rebase \\\n-              --prefix docs \\\n-              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n-              \""${GITHUB_REF_NAME}\"" latest\n-\n   simulate_release:\n     runs-on: ubuntu-latest\n     steps:\ndiff --git a/.github/workflows/ibis-docs-release.yml b/.github/workflows/ibis-docs-release.yml\nnew file mode 100644\nindex 0000000..da7ee49\n--- /dev/null\n+++ b/.github/workflows/ibis-docs-release.yml\n@@ -0,0 +1,63 @@\n+# vim: filetype=yaml\n+name: Docs Release Build\n+\n+on:\n+  release:\n+    types:\n+      - published\n+jobs:\n+  docs:\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: install nix\n+        uses: cachix/install-nix-action@v17\n+        with:\n+          nix_path: nixpkgs=channel:nixos-unstable-small\n+\n+      - name: setup cachix\n+        uses: cachix/cachix-action@v10\n+        with:\n+          name: ibis\n+          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n+          extraPullNames: nix-community,poetry2nix\n+\n+      - name: Generate a GitHub token\n+        uses: tibdex/github-app-token@v1\n+        id: generate_token\n+        with:\n+          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n+          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n+\n+      - name: checkout\n+        uses: actions/checkout@v3\n+        with:\n+          fetch-depth: 0\n+          token: ${{ steps.generate_token.outputs.token }}\n+\n+      - name: Configure git info\n+        run: |\n+          set -euo pipefail\n+\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n+\n+      - name: Pull gh-pages changes\n+        run: |\n+          set -euo pipefail\n+\n+          git fetch origin gh-pages\n+          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+\n+      - name: build and push docs on tag\n+        run: |\n+          set -euo pipefail\n+\n+          nix develop -f shell.nix --keep-going -c \\\n+            mic deploy \\\n+              --push \\\n+              --rebase \\\n+              --update-aliases \\\n+              --prefix docs \\\n+              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n+              \""${GITHUB_REF_NAME}\"" latest\n""]",1,"[""32845e1bbd1efb5dbc16f671049509a409ba25ce""]","[""cicd""]"
setup jest and add m.ts tests,"[""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n""]",1,"[""229b53a632ea97d47c4be11f096bdd828fb415d8""]","[""test""]"
added suported tuple types,"[""diff --git a/src/List/Tuple.ts b/src/List/Tuple.ts\nindex 4c59caa..6e45503 100644\n--- a/src/List/Tuple.ts\n+++ b/src/List/Tuple.ts\n@@ -1,15 +1,17 @@\n-/** A [[Tuple]]\n+import {NonNullable} from '../Object/NonNullable'\n+\n+/** A [[Tuple]] (supported)\n  * @param A its type\n- * @returns **`any[]`**\n+ * @returns **`A[]`**\n  * @example\n  * ```ts\n- * type list0 = [1, 2, 3]\n- * type list1 = number[]\n+ * type tuple0 = [1, 20, 42]\n+ * type tuple1 = ['at', 420]\n  * ```\n  */\n-export type Tuple = [\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-]\n+export type Tuple<A = any> = NonNullable<[\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+]>\n""]",1,"[""2954a0955ce9af6acb345ed1e8328e145ad30475""]","[""refactor""]"
"small error msg improvement

refs #1005","[""diff --git a/internal/pipe/git/errors.go b/internal/pipe/git/errors.go\nindex a8c15d5..13dfb56 100644\n--- a/internal/pipe/git/errors.go\n+++ b/internal/pipe/git/errors.go\n@@ -11,7 +11,7 @@ type ErrDirty struct {\n }\n \n func (e ErrDirty) Error() string {\n-\treturn fmt.Sprintf(\""git is currently in a dirty state:\\n%v\"", e.status)\n+\treturn fmt.Sprintf(\""git is currently in a dirty state, please check in your pipeline what can be changing the following files:\\n%v\"", e.status)\n }\n \n // ErrWrongRef happens when the HEAD reference is different from the tag being built\n""]",1,"[""a62314d9bb632be6af026686615d14b912250512""]","[""refactor""]"
"get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.","[""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n""]",1,"[""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c""]","[""refactor""]"
xfail on to_parquet and to_csv that use pyarrow write options,"[""diff --git a/ibis/backends/tests/test_export.py b/ibis/backends/tests/test_export.py\nindex 4d536d7..5bb9775 100644\n--- a/ibis/backends/tests/test_export.py\n+++ b/ibis/backends/tests/test_export.py\n@@ -222,18 +222,23 @@ def test_table_to_parquet(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\""), [({\""version\"": \""1.0\""}), ({\""version\"": \""2.6\""})])\n-def test_table_to_parquet_writer_kwargs(kwargs, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.NotSupportedError,\n+)\n+@pytest.mark.parametrize(\""version\"", [\""1.0\"", \""2.6\""])\n+def test_table_to_parquet_writer_kwargs(version, tmp_path, backend, awards_players):\n     outparquet = tmp_path / \""out.parquet\""\n-    awards_players.to_parquet(outparquet, **kwargs)\n+    awards_players.to_parquet(outparquet, version=version)\n \n     df = pd.read_parquet(outparquet)\n \n     backend.assert_frame_equal(awards_players.to_pandas(), df)\n \n-    file = pa.parquet.ParquetFile(outparquet)\n+    md = pa.parquet.read_metadata(outparquet)\n \n-    assert file.metadata.format_version == kwargs[\""version\""]\n+    assert md.format_version == version\n \n \n @pytest.mark.notimpl(\n@@ -316,14 +321,20 @@ def test_table_to_csv(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\"", \""delimiter\""), [({\""write_options\"": pcsv.WriteOptions(delimiter=\"";\"")}, \"";\""), ({\""write_options\"": pcsv.WriteOptions(delimiter=\""\\t\"")}, \""\\t\"")])\n-def test_table_to_csv_writer_kwargs(kwargs, delimiter, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.ProgrammingError,\n+)\n+@pytest.mark.parametrize(\""delimiter\"", [\"";\"", \""\\t\""], ids=[\""semicolon\"", \""tab\""])\n+def test_table_to_csv_writer_kwargs(delimiter, tmp_path, awards_players):\n     outcsv = tmp_path / \""out.csv\""\n     # avoid pandas NaNonense\n     awards_players = awards_players.select(\""playerID\"", \""awardID\"", \""yearID\"", \""lgID\"")\n \n-    awards_players.to_csv(outcsv, **kwargs)\n-    pd.read_csv(outcsv, delimiter=delimiter)\n+    awards_players.to_csv(outcsv, write_options=pcsv.WriteOptions(delimiter=delimiter))\n+    df = pd.read_csv(outcsv, delimiter=delimiter, nrows=1)\n+    assert len(df) == 1\n \n \n @pytest.mark.parametrize(\n""]",1,"[""bedc7950b24c37809e36a585b7985d5aa5e3e458""]","[""test""]"
add props to get color and label from a route,"[""diff --git a/src/components/BottomNavigation.js b/src/components/BottomNavigation.js\nindex 1b72302..7d8ea75 100644\n--- a/src/components/BottomNavigation.js\n+++ b/src/components/BottomNavigation.js\n@@ -24,8 +24,8 @@ const AnimatedPaper = Animated.createAnimatedComponent(Paper);\n \n type Route = {\n   key: string,\n-  title: string,\n-  icon: IconSource,\n+  title?: string,\n+  icon?: IconSource,\n   color?: string,\n };\n \n@@ -51,7 +51,7 @@ type Props<T> = {\n    * - `key`: a unique key to identify the route\n    * - `title`: title of the route to use as the tab label\n    * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n-   * - `color`: color to use as background color for shifting bottom navigation (optional)\n+   * - `color`: color to use as background color for shifting bottom navigation\n    *\n    * Example:\n    *\n@@ -115,11 +115,27 @@ type Props<T> = {\n   /**\n    * Callback which returns a React Element to be used as tab icon.\n    */\n-  renderIcon?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderIcon?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n   /**\n    * Callback which React Element to be used as tab label.\n    */\n-  renderLabel?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderLabel?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n+  /**\n+   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n+   */\n+  getLabelText?: (props: { route: T }) => string,\n+  /**\n+   * Get color for the tab, uses `route.color` by default.\n+   */\n+  getColor?: (props: { route: T }) => string,\n   /**\n    * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n    */\n@@ -159,6 +175,10 @@ type State = {\n    */\n   ripple: Animated.Value,\n   /**\n+   * Animation for the touch feedback, used to determine it's scale and opacity.\n+   */\n+  touch: Animated.Value,\n+  /**\n    * Layout of the tab bar. The width is used to determine the size and position of the ripple.\n    */\n   layout: { height: number, width: number, measured: boolean },\n@@ -173,7 +193,7 @@ const MIN_SHIFT_AMOUNT = 10;\n const MIN_TAB_WIDTH = 96;\n const MAX_TAB_WIDTH = 168;\n const BAR_HEIGHT = 56;\n-const SMALL_RIPPLE_SIZE = 72;\n+const SMALL_RIPPLE_SIZE = 96;\n const ACTIVE_LABEL_SIZE = 14;\n const INACTIVE_LABEL_SIZE = 12;\n \n@@ -251,6 +271,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ),\n       index: new Animated.Value(index),\n       ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n+      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n       layout: { height: 0, width: 0, measured: false },\n       previous: 0,\n     };\n@@ -349,6 +370,15 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n   _handleTabPress = (index: number) => {\n     const { navigationState } = this.props;\n \n+    this.state.touch.setValue(MIN_RIPPLE_SCALE);\n+\n+    Animated.timing(this.state.touch, {\n+      toValue: 1,\n+      duration: 300,\n+      easing: Easing.in(Easing.sin),\n+      useNativeDriver: true,\n+    }).start();\n+\n     if (index !== navigationState.index) {\n       this.props.onIndexChange(index);\n     }\n@@ -376,6 +406,8 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       renderScene,\n       renderIcon,\n       renderLabel,\n+      getLabelText = ({ route }) => route.title,\n+      getColor = ({ route }) => route.color,\n       barStyle,\n       style,\n       theme,\n@@ -400,7 +432,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ? this.state.index.interpolate({\n           inputRange: routes.map((_, i) => i),\n           outputRange: routes.map(\n-            route => route.color || approxBackgroundColor\n+            route => getColor({ route }) || approxBackgroundColor\n           ),\n         })\n       : approxBackgroundColor;\n@@ -416,7 +448,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n           .rgb()\n           .string();\n \n-    const rippleColor = color(textColor)\n+    const touchColor = color(textColor)\n       .alpha(0.12)\n       .rgb()\n       .string();\n@@ -430,22 +462,10 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n \n     // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n     // We need to move it from the left to the active tab and also account for how much that tab has shifted.\n-    const rippleShift =\n-      navigationState.index * tabWidth +\n-      tabWidth / 2 +\n-      this._calculateShift(\n-        this.state.previous,\n-        navigationState.index,\n-        routes.length\n-      );\n \n     return (\n       <View\n-        style={[\n-          styles.container,\n-          { backgroundColor: theme.dark ? white : black },\n-          style,\n-        ]}\n+        style={[styles.container, style]}\n         onLayout={this._handleLayout}\n         pointerEvents={layout.measured ? 'auto' : 'none'}\n       >\n@@ -485,25 +505,30 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n             style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n           >\n             {shifting ? (\n-              // Large ripple with the backround color\n               <Animated.View\n                 pointerEvents=\""none\""\n                 style={[\n                   styles.ripple,\n                   {\n                     // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - layout.width / 2,\n-                    left: rippleShift - layout.width / 2,\n-                    height: layout.width,\n-                    width: layout.width,\n+                    top: BAR_HEIGHT / 2 - layout.width / 8,\n+                    left:\n+                      navigationState.index * tabWidth +\n+                      tabWidth / 2 -\n+                      layout.width / 8,\n+                    height: layout.width / 4,\n+                    width: layout.width / 4,\n                     borderRadius: layout.width / 2,\n-                    backgroundColor: routes[navigationState.index].color,\n+                    backgroundColor: getColor({\n+                      route: routes[navigationState.index],\n+                    }),\n                     transform: [\n+                      { translateX: this.state.shifts[navigationState.index] },\n                       {\n                         // Scale to twice the size  to ensure it covers the whole tab bar\n                         scale: this.state.ripple.interpolate({\n                           inputRange: [0, 1],\n-                          outputRange: [0, 2],\n+                          outputRange: [0, 8],\n                         }),\n                       },\n                     ],\n@@ -515,36 +540,36 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                 ]}\n               />\n             ) : null}\n-            {shifting ? (\n-              // Small subtle ripple on touch\n-              <Animated.View\n-                pointerEvents=\""none\""\n-                style={[\n-                  styles.ripple,\n-                  {\n-                    // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n-                    left: rippleShift - SMALL_RIPPLE_SIZE / 2,\n-                    height: SMALL_RIPPLE_SIZE,\n-                    width: SMALL_RIPPLE_SIZE,\n-                    borderRadius: SMALL_RIPPLE_SIZE / 2,\n-                    backgroundColor: rippleColor,\n-                    transform: [\n-                      {\n-                        scale: this.state.ripple.interpolate({\n-                          inputRange: [0, 0.5, 1],\n-                          outputRange: [0, 1, 1],\n-                        }),\n-                      },\n-                    ],\n-                    opacity: this.state.ripple.interpolate({\n-                      inputRange: [0, MIN_RIPPLE_SCALE, 0.25, 0.5],\n-                      outputRange: [0, 0, 1, 0],\n-                    }),\n-                  },\n-                ]}\n-              />\n-            ) : null}\n+            <Animated.View\n+              pointerEvents=\""none\""\n+              style={[\n+                styles.ripple,\n+                {\n+                  // Set top and left values so that the ripple's center is same as the tab's center\n+                  top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n+                  left:\n+                    navigationState.index * tabWidth +\n+                    tabWidth / 2 -\n+                    SMALL_RIPPLE_SIZE / 2,\n+                  height: SMALL_RIPPLE_SIZE,\n+                  width: SMALL_RIPPLE_SIZE,\n+                  borderRadius: SMALL_RIPPLE_SIZE / 2,\n+                  backgroundColor: touchColor,\n+                  transform: [\n+                    {\n+                      translateX: shifting\n+                        ? this.state.shifts[navigationState.index]\n+                        : 0,\n+                    },\n+                    { scale: this.state.touch },\n+                  ],\n+                  opacity: this.state.touch.interpolate({\n+                    inputRange: [0, 0.5, 1],\n+                    outputRange: [0, 1, 0],\n+                  }),\n+                },\n+              ]}\n+            />\n             {routes.map((route, index) => {\n               const shift = this.state.shifts[index];\n               const focused = this.state.tabs[index];\n@@ -607,7 +632,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderIcon ? (\n-                          renderIcon({ route, focused: true })\n+                          renderIcon({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <Icon\n                             style={styles.icon}\n@@ -625,7 +654,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderIcon ? (\n-                            renderIcon({ route, focused: false })\n+                            renderIcon({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <Icon\n                               style={styles.icon}\n@@ -652,7 +685,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderLabel ? (\n-                          renderLabel({ route, focused: true })\n+                          renderLabel({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <AnimatedText\n                             style={[\n@@ -662,7 +699,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                               },\n                             ]}\n                           >\n-                            {route.title}\n+                            {getLabelText({ route })}\n                           </AnimatedText>\n                         )}\n                       </Animated.View>\n@@ -674,7 +711,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderLabel ? (\n-                            renderLabel({ route, focused: false })\n+                            renderLabel({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <AnimatedText\n                               style={[\n@@ -684,7 +725,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                                 },\n                               ]}\n                             >\n-                              {route.title}\n+                              {getLabelText({ route })}\n                             </AnimatedText>\n                           )}\n                         </Animated.View>\n""]",1,"[""ded26d768ff432ad3bde3c0aa1e95ce50726100a""]","[""feat""]"
add benchmark for known-slow table expression,"[""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n""]",1,"[""e9617f0854030e70365eb264bcb3b58078e79e9e""]","[""test""]"
"buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23","[""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n""]",1,"[""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d""]","[""feat""]"
"nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>","[""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n""]",1,"[""e12d9e77a6fd531a22325337838a841b1c67f00d""]","[""docs""]"
"enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>,cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.","[""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n"", ""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n""]",2,"[""fd8e563cc19ca4684885d4692acee6bebcca4ada"", ""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7""]","[""feat"", ""refactor""]"
"do not use scripts and binaries from the libcc repo,[gn win] link comctl32.lib to fix component build","[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n""]",2,"[""45837af24a33308a70a3454f0f650f9fe728e272"", ""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0""]","[""cicd"", ""build""]"
"export a modal transition preset,add spacing in comment fix lint (#8555)","[""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n"", ""diff --git a/src/components/nav/test/basic/app-module.ts b/src/components/nav/test/basic/app-module.ts\nindex 467917a..375e662 100644\n--- a/src/components/nav/test/basic/app-module.ts\n+++ b/src/components/nav/test/basic/app-module.ts\n@@ -633,7 +633,7 @@ export class Tab3 {\n   }\n \n   presentModal() {\n-    //this.modalCtrl.create(MyModal).present();\n+    // this.modalCtrl.create(MyModal).present();\n   }\n \n   selectPrevious() {\n""]",2,"[""535708ae50aecb452560a23356fd396f99ef13a2"", ""af880ac5b4fecbc6c4f3d1eee0d95f326e8bd9d1""]","[""refactor"", ""docs""]"
"add hardware back button

Closes #5071,add fallible peek_last_token()","[""diff --git a/ionic/components/app/app.ts b/ionic/components/app/app.ts\nindex 04d8c57..08aab92 100644\n--- a/ionic/components/app/app.ts\n+++ b/ionic/components/app/app.ts\n@@ -3,8 +3,7 @@ import {Title} from 'angular2/platform/browser';\n \n import {Config} from '../../config/config';\n import {ClickBlock} from '../../util/click-block';\n-import {Nav} from '../nav/nav';\n-import {Tabs} from '../tabs/tabs';\n+import {Platform} from '../../platform/platform';\n \n \n /**\n@@ -23,8 +22,20 @@ export class IonicApp {\n \n   constructor(\n     private _config: Config,\n-    private _clickBlock: ClickBlock\n-  ) {}\n+    private _clickBlock: ClickBlock,\n+    platform: Platform\n+  ) {\n+    platform.backButton.subscribe(() => {\n+      let activeNav = this.getActiveNav();\n+      if (activeNav) {\n+        if (activeNav.length() === 1) {\n+          platform.exitApp();\n+        } else {\n+          activeNav.pop();\n+        }\n+      }\n+    });\n+  }\n \n   /**\n    * Sets the document title.\n@@ -102,7 +113,7 @@ export class IonicApp {\n   /**\n    * @private\n    */\n-  getActiveNav(): Nav | Tabs {\n+  getActiveNav(): any {\n     var nav = this._rootNav || null;\n     var activeChildNav;\n \n"", ""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n""]",2,"[""68278b00450f2679761a2999500f6d87a579376b"", ""63eab619e6166eb6cab948028a7b89bf059dd878""]","[""feat"", ""refactor""]"
"only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.","[""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n""]",2,"[""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3""]","[""cicd"", ""test""]"
"skip flaky test,add a branch name to Slack notifications (#14793)","[""diff --git a/test/browser-pool/browser-pool.test.ts b/test/browser-pool/browser-pool.test.ts\nindex 9f21322..7a011b5 100644\n--- a/test/browser-pool/browser-pool.test.ts\n+++ b/test/browser-pool/browser-pool.test.ts\n@@ -128,7 +128,8 @@ describe.each([\n             expect(page.close).toBeDefined();\n         });\n \n-        test('should allow early aborting in case of outer timeout', async () => {\n+        // TODO: this test is very flaky in the CI\n+        test.skip('should allow early aborting in case of outer timeout', async () => {\n             const timeout = browserPool.operationTimeoutMillis;\n             browserPool.operationTimeoutMillis = 500;\n             // @ts-expect-error mocking private method\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n""]",2,"[""e2e8ad25854bd1e7cdbc7f50b50bbd99e04ad47d"", ""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da""]","[""test"", ""cicd""]"
"do not use scripts and binaries from the libcc repo,assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>","[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n""]",2,"[""45837af24a33308a70a3454f0f650f9fe728e272"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3""]","[""cicd"", ""build""]"
"terminated tasks linger for a bit

Signed-off-by: Eliza Weisman <eliza@buoyant.io>,Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.","[""diff --git a/console/src/main.rs b/console/src/main.rs\nindex ebfa315..5328d96 100644\n--- a/console/src/main.rs\n+++ b/console/src/main.rs\n@@ -69,6 +69,7 @@ async fn main() -> Result<(), Box<dyn std::error::Error>> {\n                 .wrap(Wrap { trim: true });\n             f.render_widget(header, chunks[0]);\n             tasks.render(f, chunks[1]);\n+            tasks.retain_active();\n         })?;\n     }\n \ndiff --git a/console/src/tasks.rs b/console/src/tasks.rs\nindex 7be39a4..eb41495 100644\n--- a/console/src/tasks.rs\n+++ b/console/src/tasks.rs\n@@ -19,6 +19,7 @@ struct Task {\n     fields: String,\n     kind: &'static str,\n     stats: Stats,\n+    completed_for: usize,\n }\n \n #[derive(Default, Debug)]\n@@ -28,10 +29,15 @@ struct Stats {\n     idle: Duration,\n     total: Duration,\n }\n+\n impl State {\n+    // How many updates to retain completed tasks for\n+    const RETAIN_COMPLETED_FOR: usize = 6;\n+\n     pub(crate) fn len(&self) -> usize {\n         self.tasks.len()\n     }\n+\n     pub(crate) fn update(&mut self, update: proto::tasks::TaskUpdate) {\n         let new_tasks = update.new_tasks.into_iter().filter_map(|task| {\n             if task.id.is_none() {\n@@ -48,6 +54,7 @@ impl State {\n                 fields: task.string_fields,\n                 kind,\n                 stats: Default::default(),\n+                completed_for: 0,\n             };\n             Some((id, task))\n         });\n@@ -60,7 +67,10 @@ impl State {\n         }\n \n         for proto::SpanId { id } in update.completed {\n-            if self.tasks.remove(&id).is_none() {\n+            if let Some(task) = self.tasks.get_mut(&id) {\n+                task.kind = \""!\"";\n+                task.completed_for = 1;\n+            } else {\n                 tracing::warn!(?id, \""tried to complete a task that didn't exist\"");\n             }\n         }\n@@ -79,7 +89,7 @@ impl State {\n         const DUR_PRECISION: usize = 4;\n         const POLLS_LEN: usize = 5;\n         let rows = self.tasks.values().map(|task| {\n-            let row = Row::new(vec![\n+            let mut row = Row::new(vec![\n                 Cell::from(task.id_hex.as_str()),\n                 // TODO(eliza): is there a way to write a `fmt::Debug` impl\n                 // directly to tui without doing an allocation?\n@@ -105,6 +115,9 @@ impl State {\n                 Cell::from(format!(\""{:>width$}\"", task.stats.polls, width = POLLS_LEN)),\n                 Cell::from(task.fields.as_str()),\n             ]);\n+            if task.completed_for > 0 {\n+                row = row.style(Style::default().add_modifier(style::Modifier::DIM));\n+            }\n             row\n         });\n         let t = Table::new(rows)\n@@ -126,6 +139,16 @@ impl State {\n \n         frame.render_widget(t, area)\n     }\n+\n+    pub(crate) fn retain_active(&mut self) {\n+        self.tasks.retain(|_, task| {\n+            if task.completed_for == 0 {\n+                return true;\n+            }\n+            task.completed_for += 1;\n+            task.completed_for <= Self::RETAIN_COMPLETED_FOR\n+        })\n+    }\n }\n \n impl From<proto::tasks::Stats> for Stats {\n"", ""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n""]",2,"[""1bcf88670b50155b50071e707f98f30cea0b7a24"", ""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3""]","[""feat"", ""test""]"
"fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.,update `cargo-make` for `v0.35.3`","[""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n"", ""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n""]",2,"[""9be725fa3906323d4bc9788f54eccf74109d632b"", ""0cfc5633d37ea06f645649138323f1820e18bdee""]","[""fix"", ""docs""]"
"fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.,add remote [skip ci]","[""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n"", ""diff --git a/.github/workflows/ibis-rebase-nightly.yml b/.github/workflows/ibis-rebase-nightly.yml\nindex 06c9003..e19c703 100644\n--- a/.github/workflows/ibis-rebase-nightly.yml\n+++ b/.github/workflows/ibis-rebase-nightly.yml\n@@ -47,7 +47,10 @@ jobs:\n           git config --global user.email 'ibis-squawk-bot[bot]@users.noreply.github.com'\n \n       - name: fetch and rebase on top of upstream\n-        run: git pull --rebase -X ours https://github.com/ibis-project/ibis master\n+        run: |\n+          git remote add upstream https://github.com/ibis-project/ibis\n+          git fetch upstream\n+          git rebase -X ours upstream/master\n \n       - uses: tibdex/github-app-token@v1\n         id: generate_pr_token\n""]",2,"[""9be725fa3906323d4bc9788f54eccf74109d632b"", ""e96487ad7ce90b141219d9032fa2bed68d5dae6a""]","[""fix"", ""cicd""]"
"assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,update wrapping tests for v7","[""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n"", ""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n""]",2,"[""1269431c8a3e7549f10fcbbb4b88ff625c8898b3"", ""317f4eefecddfb1392ca71d551840f446feee302""]","[""build"", ""test""]"
"only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,update `cargo-make` for `v0.35.3`","[""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n""]",2,"[""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""0cfc5633d37ea06f645649138323f1820e18bdee""]","[""cicd"", ""docs""]"
"restructure ClusterTopology to track completed change,upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.","[""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n"", ""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n""]",2,"[""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2"", ""454003841aabeb74396d73541378bfa59c75b5db""]","[""refactor"", ""build""]"
"initialize threejs objects in defaultRef, to fix undefined type errors,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.","[""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n""]",2,"[""2561f4ade46fc9d59f289f328cc77733a6443697"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c""]","[""fix"", ""refactor""]"
"[gn] fix include_dirs ordering error,only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>","[""diff --git a/BUILD.gn b/BUILD.gn\nindex 11adaa7..ed64b17 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -240,6 +240,14 @@ static_library(\""electron_lib\"") {\n     \""brightray\"",\n     \""build/node\"",\n   ]\n+  include_dirs = [\n+    \""chromium_src\"",\n+    \"".\"",\n+    \""$target_gen_dir\"",\n+    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n+    # API of blink, then delete this include dir.\n+    \""//third_party/WebKit/Source\"",\n+  ]\n   if (enable_desktop_capturer) {\n     deps += [ \""//third_party/webrtc/modules/desktop_capture\"" ]\n   }\n@@ -275,14 +283,6 @@ static_library(\""electron_lib\"") {\n     # Disable warnings for g_settings_list_schemas.\n     \""GLIB_DISABLE_DEPRECATION_WARNINGS\"",\n   ]\n-  include_dirs = [\n-    \""chromium_src\"",\n-    \"".\"",\n-    \""$target_gen_dir\"",\n-    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n-    # API of blink, then delete this include dir.\n-    \""//third_party/WebKit/Source\"",\n-  ]\n   if (is_component_build) {\n     defines += [\n       # Import V8 symbols from shared library (node.dll / libnode.so)\n"", ""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n""]",2,"[""c44cf88a6ec54e5ddd99d8348bcc57b301ec7945"", ""dbb537a26e388a8d7d17faf131abc30c2f7a84e6""]","[""build"", ""cicd""]"
"updated react demo parcel command,add fallible peek_last_token()","[""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n"", ""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n""]",2,"[""32b92cfa0b74a6c25990e32ac6aab12b8496794c"", ""63eab619e6166eb6cab948028a7b89bf059dd878""]","[""build"", ""refactor""]"
"add getter for protocol id,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>","[""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n""]",2,"[""dc5238b2bda98a7c4f2fe9584fc3b0191a408109"", ""e12d9e77a6fd531a22325337838a841b1c67f00d""]","[""feat"", ""docs""]"
"split release docs build into separate workflow,Fix typo","[""diff --git a/.github/workflows/ibis-docs-lint.yml b/.github/workflows/ibis-docs-lint.yml\nindex 753d57d..3e0aa15 100644\n--- a/.github/workflows/ibis-docs-lint.yml\n+++ b/.github/workflows/ibis-docs-lint.yml\n@@ -88,14 +88,14 @@ jobs:\n         run: poetry run pytest --benchmark-only --benchmark-json .benchmarks/output.json ibis/tests/benchmarks\n \n       - uses: tibdex/github-app-token@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         id: generate-token\n         with:\n           app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}\n           private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}\n \n       - uses: benchmark-action/github-action-benchmark@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         with:\n           tool: pytest\n           github-token: ${{ steps.generate-token.outputs.token }}\n@@ -107,6 +107,7 @@ jobs:\n \n   docs:\n     runs-on: ubuntu-latest\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n     needs:\n       # wait on benchmarks to prevent a race condition when pushing to the\n       # gh-pages branch\n@@ -124,51 +125,25 @@ jobs:\n           authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n           extraPullNames: nix-community,poetry2nix\n \n-      - name: Generate a GitHub token\n-        if: ${{ github.event_name == 'push' }}\n-        uses: tibdex/github-app-token@v1\n-        id: generate_token\n-        with:\n-          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n-          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n-\n-      - name: checkout\n-        if: ${{ github.event_name == 'push' }}\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          token: ${{ steps.generate_token.outputs.token }}\n-\n       - name: checkout\n-        if: ${{ github.event_name != 'push' }}\n         uses: actions/checkout@v3\n \n-      - name: Configure git info\n-        if: ${{ github.event_name == 'push' }}\n-        run: |\n-          set -euo pipefail\n-\n-          git config user.name 'ibis-docs-bot[bot]'\n-          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n-\n       - name: build docs\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c mkdocs build\n \n       - name: verify internal links\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c just checklinks --offline --no-progress\n \n-      - name: Pull gh-pages changes\n+      - name: Configure git info\n         if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n-          git fetch origin gh-pages\n-          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n \n       - name: build and push dev docs\n-        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/') }}\n+        if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n@@ -180,19 +155,6 @@ jobs:\n               --message 'docs(dev): ibis@${{ github.sha }}' \\\n                 dev\n \n-      - name: build and push docs on tag\n-        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}\n-        run: |\n-          set -euo pipefail\n-\n-          nix develop -f shell.nix --keep-going -c \\\n-            mic deploy \\\n-              --push \\\n-              --rebase \\\n-              --prefix docs \\\n-              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n-              \""${GITHUB_REF_NAME}\"" latest\n-\n   simulate_release:\n     runs-on: ubuntu-latest\n     steps:\ndiff --git a/.github/workflows/ibis-docs-release.yml b/.github/workflows/ibis-docs-release.yml\nnew file mode 100644\nindex 0000000..da7ee49\n--- /dev/null\n+++ b/.github/workflows/ibis-docs-release.yml\n@@ -0,0 +1,63 @@\n+# vim: filetype=yaml\n+name: Docs Release Build\n+\n+on:\n+  release:\n+    types:\n+      - published\n+jobs:\n+  docs:\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: install nix\n+        uses: cachix/install-nix-action@v17\n+        with:\n+          nix_path: nixpkgs=channel:nixos-unstable-small\n+\n+      - name: setup cachix\n+        uses: cachix/cachix-action@v10\n+        with:\n+          name: ibis\n+          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n+          extraPullNames: nix-community,poetry2nix\n+\n+      - name: Generate a GitHub token\n+        uses: tibdex/github-app-token@v1\n+        id: generate_token\n+        with:\n+          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n+          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n+\n+      - name: checkout\n+        uses: actions/checkout@v3\n+        with:\n+          fetch-depth: 0\n+          token: ${{ steps.generate_token.outputs.token }}\n+\n+      - name: Configure git info\n+        run: |\n+          set -euo pipefail\n+\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n+\n+      - name: Pull gh-pages changes\n+        run: |\n+          set -euo pipefail\n+\n+          git fetch origin gh-pages\n+          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+\n+      - name: build and push docs on tag\n+        run: |\n+          set -euo pipefail\n+\n+          nix develop -f shell.nix --keep-going -c \\\n+            mic deploy \\\n+              --push \\\n+              --rebase \\\n+              --update-aliases \\\n+              --prefix docs \\\n+              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n+              \""${GITHUB_REF_NAME}\"" latest\n"", ""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n""]",2,"[""32845e1bbd1efb5dbc16f671049509a409ba25ce"", ""bf83c9155e9bee6925aa7102fab53fb803d52533""]","[""cicd"", ""docs""]"
"print errors without stacktrace,buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23","[""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n""]",2,"[""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d""]","[""fix"", ""feat""]"
"terminated tasks linger for a bit

Signed-off-by: Eliza Weisman <eliza@buoyant.io>,remove ubuntu-latest from job title where that is the only os","[""diff --git a/console/src/main.rs b/console/src/main.rs\nindex ebfa315..5328d96 100644\n--- a/console/src/main.rs\n+++ b/console/src/main.rs\n@@ -69,6 +69,7 @@ async fn main() -> Result<(), Box<dyn std::error::Error>> {\n                 .wrap(Wrap { trim: true });\n             f.render_widget(header, chunks[0]);\n             tasks.render(f, chunks[1]);\n+            tasks.retain_active();\n         })?;\n     }\n \ndiff --git a/console/src/tasks.rs b/console/src/tasks.rs\nindex 7be39a4..eb41495 100644\n--- a/console/src/tasks.rs\n+++ b/console/src/tasks.rs\n@@ -19,6 +19,7 @@ struct Task {\n     fields: String,\n     kind: &'static str,\n     stats: Stats,\n+    completed_for: usize,\n }\n \n #[derive(Default, Debug)]\n@@ -28,10 +29,15 @@ struct Stats {\n     idle: Duration,\n     total: Duration,\n }\n+\n impl State {\n+    // How many updates to retain completed tasks for\n+    const RETAIN_COMPLETED_FOR: usize = 6;\n+\n     pub(crate) fn len(&self) -> usize {\n         self.tasks.len()\n     }\n+\n     pub(crate) fn update(&mut self, update: proto::tasks::TaskUpdate) {\n         let new_tasks = update.new_tasks.into_iter().filter_map(|task| {\n             if task.id.is_none() {\n@@ -48,6 +54,7 @@ impl State {\n                 fields: task.string_fields,\n                 kind,\n                 stats: Default::default(),\n+                completed_for: 0,\n             };\n             Some((id, task))\n         });\n@@ -60,7 +67,10 @@ impl State {\n         }\n \n         for proto::SpanId { id } in update.completed {\n-            if self.tasks.remove(&id).is_none() {\n+            if let Some(task) = self.tasks.get_mut(&id) {\n+                task.kind = \""!\"";\n+                task.completed_for = 1;\n+            } else {\n                 tracing::warn!(?id, \""tried to complete a task that didn't exist\"");\n             }\n         }\n@@ -79,7 +89,7 @@ impl State {\n         const DUR_PRECISION: usize = 4;\n         const POLLS_LEN: usize = 5;\n         let rows = self.tasks.values().map(|task| {\n-            let row = Row::new(vec![\n+            let mut row = Row::new(vec![\n                 Cell::from(task.id_hex.as_str()),\n                 // TODO(eliza): is there a way to write a `fmt::Debug` impl\n                 // directly to tui without doing an allocation?\n@@ -105,6 +115,9 @@ impl State {\n                 Cell::from(format!(\""{:>width$}\"", task.stats.polls, width = POLLS_LEN)),\n                 Cell::from(task.fields.as_str()),\n             ]);\n+            if task.completed_for > 0 {\n+                row = row.style(Style::default().add_modifier(style::Modifier::DIM));\n+            }\n             row\n         });\n         let t = Table::new(rows)\n@@ -126,6 +139,16 @@ impl State {\n \n         frame.render_widget(t, area)\n     }\n+\n+    pub(crate) fn retain_active(&mut self) {\n+        self.tasks.retain(|_, task| {\n+            if task.completed_for == 0 {\n+                return true;\n+            }\n+            task.completed_for += 1;\n+            task.completed_for <= Self::RETAIN_COMPLETED_FOR\n+        })\n+    }\n }\n \n impl From<proto::tasks::Stats> for Stats {\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n""]",2,"[""1bcf88670b50155b50071e707f98f30cea0b7a24"", ""74e9de5ec97dc013a52aa063dff0f40ac74c407b""]","[""feat"", ""cicd""]"
"add comments for the Handler,run pyspark tests in parallel","[""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex e23088e..9708157 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -202,11 +202,11 @@ jobs:\n         run: poetry install --without dev --without docs --extras ${{ matrix.backend.name }} --extras geospatial\n \n       - name: \""run parallel tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name != 'pyspark' && matrix.backend.name != 'impala'\n+        if: matrix.backend.name != 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }} --numprocesses auto --dist=loadgroup\n \n       - name: \""run serial tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name == 'pyspark' || matrix.backend.name == 'impala'\n+        if: matrix.backend.name == 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }}\n         env:\n           IBIS_TEST_NN_HOST: localhost\n""]",2,"[""036a0ff49a7dade0e04c9c07071a1ff49133ee24"", ""4cbbd2552ba0de273e1dfe7d453c5b3efed751a3""]","[""docs"", ""cicd""]"
"add benchmark for known-slow table expression,better layout for block and segment","[""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n"", ""diff --git a/docs/docs/config-block.md b/docs/docs/config-block.md\nnew file mode 100644\nindex 0000000..df1ee54\n--- /dev/null\n+++ b/docs/docs/config-block.md\n@@ -0,0 +1,60 @@\n+---\n+id: config-block\n+title: Block\n+sidebar_label: Block\n+---\n+\n+Let's take a closer look at what defines a block.\n+\n+```json\n+{\n+  \""$schema\"": \""https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json\"",\n+  ...\n+  \""blocks\"": [\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""left\"",\n+      \""segments\"": [\n+        ...\n+      ]\n+    }\n+  ]\n+}\n+```\n+\n+- type: `prompt` | `rprompt`\n+- newline: `boolean`\n+- alignment: `left` | `right`\n+- vertical_offset: `int`\n+- horizontal_offset: `int`\n+- segments: `array` of one or more `segments`\n+\n+### Type\n+\n+Tells the engine what to do with the block. There are three options:\n+\n+- `prompt` renders one or more segments\n+- `rprompt` renders one or more segments aligned to the right of the cursor. Only one `rprompt` block is permitted.\n+Supported on [ZSH][rprompt], Bash and Powershell.\n+\n+### Newline\n+\n+Start the block on a new line. Defaults to `false`.\n+\n+### Alignment\n+\n+Tell the engine if the block should be left or right-aligned.\n+\n+### Vertical offset\n+\n+Move the block up or down x lines. For example, `vertical_offset: 1` moves the prompt down one line, `vertical_offset: -1`\n+moves it up one line.\n+\n+### Horizontal offset\n+\n+Moves the segment to the left or the right to have it exactly where you want it to be. Works like `vertical_offset`\n+but on a horizontal level where a negative number moves the block left and a positive number right.\n+\n+### Segments\n+\n+Array of one or more segments.\ndiff --git a/docs/docs/config-example.md b/docs/docs/config-example.md\nnew file mode 100644\nindex 0000000..c180c4f\n--- /dev/null\n+++ b/docs/docs/config-example.md\n@@ -0,0 +1,96 @@\n+---\n+id: config-sample\n+title: Sample\n+sidebar_label: Sample\n+---\n+\n+```json\n+{\n+  \""final_space\"": true,\n+  \""blocks\"": [\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""right\"",\n+      \""vertical_offset\"": -1,\n+      \""segments\"": [\n+        {\n+          \""type\"": \""time\"",\n+          \""style\"": \""plain\"",\n+          \""foreground\"": \""#007ACC\"",\n+          \""properties\"": {\n+            \""time_format\"": \""15:04:05\""\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""left\"",\n+      \""newline\"": true,\n+      \""segments\"": [\n+        {\n+          \""type\"": \""session\"",\n+          \""style\"": \""diamond\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#ffb300\"",\n+          \""leading_diamond\"": \""\\uE0B6\"",\n+          \""trailing_diamond\"": \""\\uE0B0\"",\n+          \""properties\"": {\n+            \""postfix\"": \"" \""\n+          }\n+        },\n+        {\n+          \""type\"": \""path\"",\n+          \""style\"": \""powerline\"",\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#61AFEF\"",\n+          \""properties\"": {\n+            \""prefix\"": \"" \\uE5FF \"",\n+            \""style\"": \""folder\"",\n+            \""exclude_folders\"": [\n+              \""/super/secret/project\""\n+            ],\n+            \""enable_hyperlink\"": false\n+          }\n+        },\n+        {\n+          \""type\"": \""git\"",\n+          \""style\"": \""powerline\"",\n+          \""foreground\"": \""#193549\"",\n+          \""foreground_templates\"": [\n+            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#ffffff{{ end }}\""\n+          ],\n+          \""background\"": \""#2e9599\"",\n+          \""background_templates\"": [\n+            \""{{ if or (.Working.Changed) (.Staging.Changed) }}#f36943{{ end }}\"",\n+            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#a8216b{{ end }}\"",\n+            \""{{ if gt .Ahead 0 }}#35b5ff{{ end }}\"",\n+            \""{{ if gt .Behind 0 }}#f89cfa{{ end }}\""\n+          ],\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""properties\"": {\n+            \""fetch_status\"": true,\n+            \""branch_max_length\"": 25,\n+            \""template\"": \""{{ .HEAD }}{{ .BranchStatus }}\""\n+          }\n+        },\n+        {\n+          \""type\"": \""exit\"",\n+          \""style\"": \""diamond\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#00897b\"",\n+          \""background_templates\"": [\""{{ if gt .Code 0 }}#e91e63{{ end }}\""],\n+          \""leading_diamond\"": \""\"",\n+          \""trailing_diamond\"": \""\\uE0B4\"",\n+          \""properties\"": {\n+            \""always_enabled\"": true,\n+            \""template\"": \""\\uE23A\"",\n+            \""prefix\"": \""<parentBackground>\\uE0B0</> \""\n+          }\n+        }\n+      ]\n+    }\n+  ]\n+}\n+```\ndiff --git a/docs/docs/config-overview.md b/docs/docs/config-overview.md\nindex 1fdbcba..b554869 100644\n--- a/docs/docs/config-overview.md\n+++ b/docs/docs/config-overview.md\n@@ -1,7 +1,7 @@\n ---\n id: config-overview\n-title: Overview\n-sidebar_label: Overview\n+title: General\n+sidebar_label: General\n ---\n \n Oh My Posh renders your prompt based on the definition of _blocks_ (like Lego) which contain one or more _segments_.\n@@ -64,332 +64,7 @@ boxes with question marks, set up your terminal to use a [supported font][font] \n - terminal_background: `string` [color][colors] - terminal background color, set to your terminal's background color when\n you notice black elements in Windows Terminal or the Visual Studio Code integrated terminal\n \n-## Block\n-\n-Let's take a closer look at what defines a block.\n-\n-- type: `prompt` | `rprompt`\n-- newline: `boolean`\n-- alignment: `left` | `right`\n-- vertical_offset: `int`\n-- horizontal_offset: `int`\n-- segments: `array` of one or more `segments`\n-\n-### Type\n-\n-Tells the engine what to do with the block. There are three options:\n-\n-- `prompt` renders one or more segments\n-- `rprompt` renders one or more segments aligned to the right of the cursor. Only one `rprompt` block is permitted.\n-Supported on [ZSH][rprompt], Bash and Powershell.\n-\n-### Newline\n-\n-Start the block on a new line. Defaults to `false`.\n-\n-### Alignment\n-\n-Tell the engine if the block should be left or right-aligned.\n-\n-### Vertical offset\n-\n-Move the block up or down x lines. For example, `vertical_offset: 1` moves the prompt down one line, `vertical_offset: -1`\n-moves it up one line.\n-\n-### Horizontal offset\n-\n-Moves the segment to the left or the right to have it exactly where you want it to be. Works like `vertical_offset`\n-but on a horizontal level where a negative number moves the block left and a positive number right.\n-\n-### Segments\n-\n-Array of one or more segments.\n-\n-## Segment\n-\n-A segment is a part of the prompt with a certain context. There are different types available out-of-the-box, if you're\n-looking for what's included, feel free to skip this part and browse through the [segments][segments]. Keep reading to\n-understand how to configure a segment.\n-\n-- type: `string` any of the included [segments][segments]\n-- style: `powerline` | `plain` | `diamond`\n-- powerline_symbol: `string`\n-- invert_powerline: `boolean`\n-- leading_diamond: `string`\n-- trailing_diamond: `string`\n-- foreground: `string` [color][colors]\n-- foreground_templates: `array` of `string` values\n-- background: `string` [color][colors]\n-- background_templates: `array` of `string` values\n-- properties: `array` of `Property`: `string`\n-\n-### Type\n-\n-Takes the `string` value referencing which segment logic it needs to run (see [segments][segments] for possible values).\n-\n-### Style\n-\n-Oh Hi! You made it to a really interesting part, great! Style defines how a prompt is rendered. Looking at the most prompt\n-themes out there, we identified 3 types. All of these require a different configuration and depending on the look\n-you want to achieve you might need to understand/use them all.\n-\n-#### Powerline\n-\n-What started it all for us. Makes use of a single symbol (`powerline_symbol`) to separate the segments. It takes the\n-background color of the previous segment (or transparent if none) and the foreground of the current one (or transparent\n-if we're at the last segment). Expects segments to have a colored background, else there little use for this one.\n-\n-#### Plain\n-\n-Simple. Colored text on a transparent background. Make sure to set `foreground` for maximum enjoyment.\n-Segments will be separated by empty spaces unless you specify `''` for the `prefix` and `postfix` settings for the segment.\n-\n-#### Diamond\n-\n-While Powerline works great with a single symbol, sometimes you want a segment to have a different start and end symbol.\n-Just like a diamond: `< my segment text >`. The difference between this and plain is that the diamond symbols take the\n-segment background as their foreground color.\n-\n-### Powerline symbol\n-\n-Text character to use when `\""style\"": \""powerline\""`.\n-\n-### Invert Powerline\n-\n-If `true` this swaps the foreground and background colors. Can be useful when the character you want does not exist\n-in the perfectly mirrored variant for example.\n-\n-### Leading diamond\n-\n-Text character to use at the start of the segment. Will take the background color of the segment as\n-its foreground color.\n-\n-### Trailing diamond\n-\n-Text character to use at the end of the segment. Will take the background color of the segment as its foreground color.\n-\n-### Foreground\n-\n-[Color][colors] to use as the segment text foreground color. Also supports transparency using the `transparent` keyword.\n-\n-### Foreground Templates\n-\n-Array if string templates to define the foreground color for the given Segment based on the Segment's Template Properties.\n-Under the hood this uses go's [text/template][go-text-template] feature extended with [sprig][sprig] and\n-offers a few standard properties to work with. For supported Segments, look for the **Template Properties** section in\n-the documentation.\n-\n-The following sample is based on the [AWS Segment][aws].\n-\n-```json\n-{\n-  \""type\"": \""aws\"",\n-  \""style\"": \""powerline\"",\n-  \""powerline_symbol\"": \""\\uE0B0\"",\n-  \""foreground\"": \""#ffffff\"",\n-  \""background\"": \""#111111\"",\n-  \""foreground_templates\"": [\n-    \""{{if contains \\\""default\\\"" .Profile}}#FFA400{{end}}\"",\n-    \""{{if contains \\\""jan\\\"" .Profile}}#f1184c{{end}}\""\n-  ],\n-  \""properties\"": {\n-    \""prefix\"": \"" \\uE7AD \""\n-  }\n-}\n-```\n-\n-The logic is as follows: when `background_templates` contains an array, we will check every template line until there's\n-one that returns a non-empty string. So, when the contents of `.Profile` contain the word `default`, the first template\n-returns `#FFA400` and that's the color that will be used. If it contains `jan`, it returns `#f1184c`. When none of the\n-templates returns a value, the foreground value `#ffffff` is used.\n-\n-### Background\n-\n-[Color][colors] to use as the segment text background color. Also supports transparency using the `transparent` keyword.\n-\n-### Background Templates\n-\n-Same as [Foreground Templates][fg-templ] but for the background color.\n-\n-### Properties\n-\n-An array of **Properties** with a value. This is used inside of the segment logic to tweak what the output of the segment\n-will be. Segments have the ability to define their own Properties, but there are some general ones being used by the\n-engine which allow you to customize the output even more.\n-\n-#### General-purpose properties\n-\n-You can use these on any segment, the engine is responsible for adding them correctly.\n-\n-- prefix: `string`\n-- postfix: `string`\n-- include_folders: `[]string`\n-- exclude_folders: `[]string`\n-\n-##### Prefix\n-\n-The string content will be put in front of the segment's output text. Useful for symbols, text or other customizations.\n-If this is not set, it will be an empty space in `plain` mode. If you want to remove the space before the segment,\n-specify this as `''`.\n-\n-##### Postfix\n-\n-The string content will be put after the segment's output text. Useful for symbols, text or other customizations.\n-If this is not set, it will default to an empty space in `plain` mode. If you want to remove the space after the segment,\n-specify this as `''`.\n-\n-##### Include / Exclude Folders\n-\n-Sometimes you might want to have a segment only rendered in certain folders. If `include_folders` is specified,\n-the segment will only be rendered when in one of those locations. If `exclude_folders` is specified, the segment\n-will not be rendered when in one of the excluded locations.\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects\""\n-]\n-```\n-\n-```json\n-\""exclude_folders\"": [\n-  \""/Users/posh/Projects\""\n-]\n-```\n-\n-The strings specified in these properties are evaluated as [regular expressions][regex]. You\n-can use any valid regular expression construct, but the regular expression must match the entire directory\n-name. The following will match `/Users/posh/Projects/Foo` but not `/home/Users/posh/Projects/Foo`.\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects.*\""\n-]\n-```\n-\n-You can also combine these properties:\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects.*\""\n-],\n-\""exclude_folders\"": [\n-  \""/Users/posh/Projects/secret-project.*\""\n-]\n-```\n-\n-##### Notes\n-\n-- Oh My Posh will accept both `/` and `\\` as path separators for a folder and will match regardless of which\n-is used by the current operating system.\n-- Because the strings are evaluated as regular expressions, if you want to use a `\\` in a Windows\n-directory name, you need to specify it as `\\\\\\\\`.\n-- The character `~` at the start of a specified folder will match the user's home directory.\n-- The comparison is case-insensitive on Windows and macOS, but case-sensitive on other operating systems.\n-\n-This means that for user Bill, who has a user account `Bill` on Windows and `bill` on Linux,  `~/Foo` might match\n-`C:\\Users\\Bill\\Foo` or `C:\\Users\\Bill\\foo` on Windows but only `/home/bill/Foo` on Linux.\n-\n-## Full Sample\n-\n-```json\n-{\n-  \""final_space\"": true,\n-  \""blocks\"": [\n-    {\n-      \""type\"": \""prompt\"",\n-      \""alignment\"": \""right\"",\n-      \""vertical_offset\"": -1,\n-      \""segments\"": [\n-        {\n-          \""type\"": \""time\"",\n-          \""style\"": \""plain\"",\n-          \""foreground\"": \""#007ACC\"",\n-          \""properties\"": {\n-            \""time_format\"": \""15:04:05\""\n-          }\n-        }\n-      ]\n-    },\n-    {\n-      \""type\"": \""prompt\"",\n-      \""alignment\"": \""left\"",\n-      \""newline\"": true,\n-      \""segments\"": [\n-        {\n-          \""type\"": \""session\"",\n-          \""style\"": \""diamond\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#ffb300\"",\n-          \""leading_diamond\"": \""\\uE0B6\"",\n-          \""trailing_diamond\"": \""\\uE0B0\"",\n-          \""properties\"": {\n-            \""postfix\"": \"" \""\n-          }\n-        },\n-        {\n-          \""type\"": \""path\"",\n-          \""style\"": \""powerline\"",\n-          \""powerline_symbol\"": \""\\uE0B0\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#61AFEF\"",\n-          \""properties\"": {\n-            \""prefix\"": \"" \\uE5FF \"",\n-            \""style\"": \""folder\"",\n-            \""exclude_folders\"": [\n-              \""/super/secret/project\""\n-            ],\n-            \""enable_hyperlink\"": false\n-          }\n-        },\n-        {\n-          \""type\"": \""git\"",\n-          \""style\"": \""powerline\"",\n-          \""foreground\"": \""#193549\"",\n-          \""foreground_templates\"": [\n-            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#ffffff{{ end }}\""\n-          ],\n-          \""background\"": \""#2e9599\"",\n-          \""background_templates\"": [\n-            \""{{ if or (.Working.Changed) (.Staging.Changed) }}#f36943{{ end }}\"",\n-            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#a8216b{{ end }}\"",\n-            \""{{ if gt .Ahead 0 }}#35b5ff{{ end }}\"",\n-            \""{{ if gt .Behind 0 }}#f89cfa{{ end }}\""\n-          ],\n-          \""powerline_symbol\"": \""\\uE0B0\"",\n-          \""properties\"": {\n-            \""fetch_status\"": true,\n-            \""branch_max_length\"": 25,\n-            \""template\"": \""{{ .HEAD }}{{ .BranchStatus }}\""\n-          }\n-        },\n-        {\n-          \""type\"": \""exit\"",\n-          \""style\"": \""diamond\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#00897b\"",\n-          \""background_templates\"": [\""{{ if gt .Code 0 }}#e91e63{{ end }}\""],\n-          \""leading_diamond\"": \""\"",\n-          \""trailing_diamond\"": \""\\uE0B4\"",\n-          \""properties\"": {\n-            \""always_enabled\"": true,\n-            \""template\"": \""\\uE23A\"",\n-            \""prefix\"": \""<parentBackground>\\uE0B0</> \""\n-          }\n-        }\n-      ]\n-    }\n-  ]\n-}\n-```\n-\n [releases]: https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest\n [font]: /docs/config-fonts\n [schema]: https://github.com/JanDeDobbeleer/oh-my-posh/blob/main/themes/schema.json\n [themes]: https://github.com/JanDeDobbeleer/oh-my-posh/tree/main/themes\n-[segments]: /docs/battery\n-[colors]: /docs/config-colors\n-[go-text-template]: https://golang.org/pkg/text/template/\n-[sprig]: https://masterminds.github.io/sprig/\n-[fg-templ]: /docs/config-overview#foreground-templates\n-[regex]: https://www.regular-expressions.info/tutorial.html\n-[aws]: /docs/aws\ndiff --git a/docs/docs/config-segment.md b/docs/docs/config-segment.md\nnew file mode 100644\nindex 0000000..08a66e4\n--- /dev/null\n+++ b/docs/docs/config-segment.md\n@@ -0,0 +1,219 @@\n+---\n+id: config-segment\n+title: Segment\n+sidebar_label: Segment\n+---\n+\n+A segment is a part of the prompt with a certain context. There are different types available out-of-the-box, if you're\n+looking for what's included, feel free to skip this part and browse through the [segments][segments]. Keep reading to\n+understand how to configure a segment.\n+\n+```json\n+{\n+  \""$schema\"": \""https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json\"",\n+  ...\n+  \""blocks\"": [\n+    {\n+      ...\n+      \""segments\"": [\n+        {\n+          \""type\"": \""path\"",\n+          \""style\"": \""powerline\"",\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#61AFEF\"",\n+          \""properties\"": {\n+            ...\n+          }\n+        }\n+      ]\n+    }\n+  ]\n+}\n+```\n+\n+- type: `string` any of the included [segments][segments]\n+- style: `powerline` | `plain` | `diamond`\n+- powerline_symbol: `string`\n+- invert_powerline: `boolean`\n+- leading_diamond: `string`\n+- trailing_diamond: `string`\n+- foreground: `string` [color][colors]\n+- foreground_templates: `array` of `string` values\n+- background: `string` [color][colors]\n+- background_templates: `array` of `string` values\n+- properties: `array` of `Property`: `string`\n+\n+## Type\n+\n+Takes the `string` value referencing which segment logic it needs to run (see [segments][segments] for possible values).\n+\n+## Style\n+\n+Oh Hi! You made it to a really interesting part, great! Style defines how a prompt is rendered. Looking at the most prompt\n+themes out there, we identified 3 types. All of these require a different configuration and depending on the look\n+you want to achieve you might need to understand/use them all.\n+\n+### Powerline\n+\n+What started it all for us. Makes use of a single symbol (`powerline_symbol`) to separate the segments. It takes the\n+background color of the previous segment (or transparent if none) and the foreground of the current one (or transparent\n+if we're at the last segment). Expects segments to have a colored background, else there little use for this one.\n+\n+### Plain\n+\n+Simple. Colored text on a transparent background. Make sure to set `foreground` for maximum enjoyment.\n+Segments will be separated by empty spaces unless you specify `''` for the `prefix` and `postfix` settings for the segment.\n+\n+### Diamond\n+\n+While Powerline works great with a single symbol, sometimes you want a segment to have a different start and end symbol.\n+Just like a diamond: `< my segment text >`. The difference between this and plain is that the diamond symbols take the\n+segment background as their foreground color.\n+\n+## Powerline symbol\n+\n+Text character to use when `\""style\"": \""powerline\""`.\n+\n+## Invert Powerline\n+\n+If `true` this swaps the foreground and background colors. Can be useful when the character you want does not exist\n+in the perfectly mirrored variant for example.\n+\n+## Leading diamond\n+\n+Text character to use at the start of the segment. Will take the background color of the segment as\n+its foreground color.\n+\n+## Trailing diamond\n+\n+Text character to use at the end of the segment. Will take the background color of the segment as its foreground color.\n+\n+## Foreground\n+\n+[Color][colors] to use as the segment text foreground color. Also supports transparency using the `transparent` keyword.\n+\n+## Foreground Templates\n+\n+Array if string templates to define the foreground color for the given Segment based on the Segment's Template Properties.\n+Under the hood this uses go's [text/template][go-text-template] feature extended with [sprig][sprig] and\n+offers a few standard properties to work with. For supported Segments, look for the **Template Properties** section in\n+the documentation.\n+\n+The following sample is based on the [AWS Segment][aws].\n+\n+```json\n+{\n+  \""type\"": \""aws\"",\n+  \""style\"": \""powerline\"",\n+  \""powerline_symbol\"": \""\\uE0B0\"",\n+  \""foreground\"": \""#ffffff\"",\n+  \""background\"": \""#111111\"",\n+  \""foreground_templates\"": [\n+    \""{{if contains \\\""default\\\"" .Profile}}#FFA400{{end}}\"",\n+    \""{{if contains \\\""jan\\\"" .Profile}}#f1184c{{end}}\""\n+  ],\n+  \""properties\"": {\n+    \""prefix\"": \"" \\uE7AD \""\n+  }\n+}\n+```\n+\n+The logic is as follows: when `background_templates` contains an array, we will check every template line until there's\n+one that returns a non-empty string. So, when the contents of `.Profile` contain the word `default`, the first template\n+returns `#FFA400` and that's the color that will be used. If it contains `jan`, it returns `#f1184c`. When none of the\n+templates returns a value, the foreground value `#ffffff` is used.\n+\n+## Background\n+\n+[Color][colors] to use as the segment text background color. Also supports transparency using the `transparent` keyword.\n+\n+## Background Templates\n+\n+Same as [Foreground Templates][fg-templ] but for the background color.\n+\n+## Properties\n+\n+An array of **Properties** with a value. This is used inside of the segment logic to tweak what the output of the segment\n+will be. Segments have the ability to define their own Properties, but there are some general ones being used by the\n+engine which allow you to customize the output even more.\n+\n+### General-purpose properties\n+\n+You can use these on any segment, the engine is responsible for adding them correctly.\n+\n+- prefix: `string`\n+- postfix: `string`\n+- include_folders: `[]string`\n+- exclude_folders: `[]string`\n+\n+#### Prefix\n+\n+The string content will be put in front of the segment's output text. Useful for symbols, text or other customizations.\n+If this is not set, it will be an empty space in `plain` mode. If you want to remove the space before the segment,\n+specify this as `''`.\n+\n+#### Postfix\n+\n+The string content will be put after the segment's output text. Useful for symbols, text or other customizations.\n+If this is not set, it will default to an empty space in `plain` mode. If you want to remove the space after the segment,\n+specify this as `''`.\n+\n+#### Include / Exclude Folders\n+\n+Sometimes you might want to have a segment only rendered in certain folders. If `include_folders` is specified,\n+the segment will only be rendered when in one of those locations. If `exclude_folders` is specified, the segment\n+will not be rendered when in one of the excluded locations.\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects\""\n+]\n+```\n+\n+```json\n+\""exclude_folders\"": [\n+  \""/Users/posh/Projects\""\n+]\n+```\n+\n+The strings specified in these properties are evaluated as [regular expressions][regex]. You\n+can use any valid regular expression construct, but the regular expression must match the entire directory\n+name. The following will match `/Users/posh/Projects/Foo` but not `/home/Users/posh/Projects/Foo`.\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects.*\""\n+]\n+```\n+\n+You can also combine these properties:\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects.*\""\n+],\n+\""exclude_folders\"": [\n+  \""/Users/posh/Projects/secret-project.*\""\n+]\n+```\n+\n+#### Notes\n+\n+- Oh My Posh will accept both `/` and `\\` as path separators for a folder and will match regardless of which\n+is used by the current operating system.\n+- Because the strings are evaluated as regular expressions, if you want to use a `\\` in a Windows\n+directory name, you need to specify it as `\\\\\\\\`.\n+- The character `~` at the start of a specified folder will match the user's home directory.\n+- The comparison is case-insensitive on Windows and macOS, but case-sensitive on other operating systems.\n+\n+This means that for user Bill, who has a user account `Bill` on Windows and `bill` on Linux,  `~/Foo` might match\n+`C:\\Users\\Bill\\Foo` or `C:\\Users\\Bill\\foo` on Windows but only `/home/bill/Foo` on Linux.\n+\n+[segments]: /docs/battery\n+[colors]: /docs/config-colors\n+[go-text-template]: https://golang.org/pkg/text/template/\n+[sprig]: https://masterminds.github.io/sprig/\n+[fg-templ]: /docs/config-overview#foreground-templates\n+[regex]: https://www.regular-expressions.info/tutorial.html\n+[aws]: /docs/aws\ndiff --git a/docs/docs/segment-environment.md b/docs/docs/segment-environment.md\nindex f35bc87..982a0a5 100644\n--- a/docs/docs/segment-environment.md\n+++ b/docs/docs/segment-environment.md\n@@ -34,7 +34,7 @@ New-Alias -Name 'Set-PoshContext' -Value 'Set-EnvVar' -Scope Global -Force\n \n The segment will show when the value of the environment variable isn't empty.\n \n-## Sample Configuration\n+## Sample *Configuration*\n \n ```json\n {\ndiff --git a/docs/sidebars.js b/docs/sidebars.js\nindex a75163e..8f151a2 100644\n--- a/docs/sidebars.js\n+++ b/docs/sidebars.js\n@@ -20,6 +20,9 @@ module.exports = {\n       label: \""\u2699\ufe0f Configuration\"",\n       items: [\n         \""config-overview\"",\n+        \""config-block\"",\n+        \""config-segment\"",\n+        \""config-sample\"",\n         \""config-title\"",\n         \""config-colors\"",\n         \""config-text-style\"",\n""]",2,"[""e9617f0854030e70365eb264bcb3b58078e79e9e"", ""cb1f48b56ae0de93acb72e48726c7d610a1d538e""]","[""test"", ""docs""]"
"added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>","[""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n""]",2,"[""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""f823cf28652987d43c8324b4f5b203240032383a""]","[""docs"", ""feat""]"
"remove appear css animation,use `regexp_instr != 0` instead of `REGEXP` keyword","[""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n"", ""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n""]",2,"[""47ef9104e4a89e80d7cc6c1950bc080841da4a7b"", ""06e2be4e2019b6fa714e1fcb34485860ef1ede79""]","[""refactor"", ""fix""]"
"[gn win] link comctl32.lib to fix component build,only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>","[""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n""]",2,"[""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""dbb537a26e388a8d7d17faf131abc30c2f7a84e6""]","[""build"", ""cicd""]"
"[gn win] link comctl32.lib to fix component build,cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.","[""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n""]",2,"[""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7""]","[""build"", ""refactor""]"
"allow disabling dynamic queue,ensure checksum persist flushes to disk","[""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n"", ""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n""]",2,"[""9ef5c0d14193a9abb09b39856f58477d1f4b0d77"", ""b7ce2894fd1794064bd6db4ed730bb6cb7728739""]","[""fix"", ""test""]"
"fix build ordering,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909","[""diff --git a/scripts/build.mjs b/scripts/build.mjs\nindex 204854f..b3cf067 100644\n--- a/scripts/build.mjs\n+++ b/scripts/build.mjs\n@@ -3,8 +3,8 @@ import { write } from 'fsxx';\n import { info, success } from './helpers.mjs';\n \n await $`rm -rf dist/*`;\n-await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n await $`unbuild`;\n+await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n \n const packages = [\n   'jsx-runtime',\n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n""]",2,"[""c323d59c607cabc91f17a78528d998f376f30b10"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119""]","[""build"", ""docs""]"
"fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.,only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>","[""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n"", ""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n""]",2,"[""9be725fa3906323d4bc9788f54eccf74109d632b"", ""dbb537a26e388a8d7d17faf131abc30c2f7a84e6""]","[""fix"", ""cicd""]"
"fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.,increment failing test retries","[""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n"", ""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n""]",2,"[""9be725fa3906323d4bc9788f54eccf74109d632b"", ""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57""]","[""fix"", ""cicd""]"
"update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.","[""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n""]",2,"[""c2ee5cd5e709afd15c5565ee009a0d204403a119"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c""]","[""docs"", ""refactor""]"
"update flushed index before truncating,support use meta key select multiple element","[""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n""]",2,"[""933ab6bb86372913c992567cf9660009900911a7"", ""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8""]","[""fix"", ""feat""]"
"fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.,[gn] fix include_dirs ordering error","[""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 11adaa7..ed64b17 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -240,6 +240,14 @@ static_library(\""electron_lib\"") {\n     \""brightray\"",\n     \""build/node\"",\n   ]\n+  include_dirs = [\n+    \""chromium_src\"",\n+    \"".\"",\n+    \""$target_gen_dir\"",\n+    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n+    # API of blink, then delete this include dir.\n+    \""//third_party/WebKit/Source\"",\n+  ]\n   if (enable_desktop_capturer) {\n     deps += [ \""//third_party/webrtc/modules/desktop_capture\"" ]\n   }\n@@ -275,14 +283,6 @@ static_library(\""electron_lib\"") {\n     # Disable warnings for g_settings_list_schemas.\n     \""GLIB_DISABLE_DEPRECATION_WARNINGS\"",\n   ]\n-  include_dirs = [\n-    \""chromium_src\"",\n-    \"".\"",\n-    \""$target_gen_dir\"",\n-    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n-    # API of blink, then delete this include dir.\n-    \""//third_party/WebKit/Source\"",\n-  ]\n   if (is_component_build) {\n     defines += [\n       # Import V8 symbols from shared library (node.dll / libnode.so)\n""]",2,"[""9be725fa3906323d4bc9788f54eccf74109d632b"", ""c44cf88a6ec54e5ddd99d8348bcc57b301ec7945""]","[""fix"", ""build""]"
"add riscv64gc-unknown-linux-gnu,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>","[""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n""]",2,"[""173553c0372e66e03bdab19e0e6c2dd44daa14a0"", ""e12d9e77a6fd531a22325337838a841b1c67f00d""]","[""cicd"", ""docs""]"
"publish sdks after docs/build,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>","[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n""]",2,"[""6c9cb638cb4d1ecc42632fcf389c24898c5b3244"", ""f823cf28652987d43c8324b4f5b203240032383a""]","[""cicd"", ""feat""]"
"remove ubuntu-latest from job title where that is the only os,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909","[""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n""]",2,"[""74e9de5ec97dc013a52aa063dff0f40ac74c407b"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119""]","[""cicd"", ""docs""]"
"update wrapping tests for v7,[gn win] link comctl32.lib to fix component build","[""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n""]",2,"[""317f4eefecddfb1392ca71d551840f446feee302"", ""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0""]","[""test"", ""build""]"
"licensing,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>","[""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n""]",2,"[""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""f823cf28652987d43c8324b4f5b203240032383a""]","[""docs"", ""feat""]"
"remove appear css animation,[gn win] link comctl32.lib to fix component build","[""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n""]",2,"[""47ef9104e4a89e80d7cc6c1950bc080841da4a7b"", ""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0""]","[""refactor"", ""build""]"
"support use meta key select multiple element,make it mode less","[""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n"", ""diff --git a/core/src/components/slides/slides.tsx b/core/src/components/slides/slides.tsx\nindex 48fd53f..d5c2f75 100644\n--- a/core/src/components/slides/slides.tsx\n+++ b/core/src/components/slides/slides.tsx\n@@ -1,7 +1,6 @@\n import { Component, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n \n import { Mode } from '../../interface.js';\n-import { createThemedClasses } from '../../utils/theme.js';\n \n import { Swiper } from './vendor/swiper.js';\n \n@@ -15,6 +14,7 @@ import { Swiper } from './vendor/swiper.js';\n   shadow: true\n })\n export class Slides {\n+\n   private container!: HTMLElement;\n   private swiper: any;\n \n@@ -391,12 +391,6 @@ export class Slides {\n     return { ...swiperOptions, ...this.options, ...eventOptions };\n   }\n \n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'slides')\n-    };\n-  }\n-\n   render() {\n     return (\n       <div class=\""swiper-container\"" ref={el => this.container = el as HTMLElement }>\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.scss b/core/src/components/thumbnail/thumbnail.ios.scss\ndeleted file mode 100644\nindex e3add45..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.ios.vars\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-ios-width};\n-  --border-radius: #{$thumbnail-ios-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.vars.scss b/core/src/components/thumbnail/thumbnail.ios.vars.scss\ndeleted file mode 100644\nindex 85d53e5..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.ios\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-ios-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-ios-height:                  $thumbnail-ios-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-ios-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.md.scss b/core/src/components/thumbnail/thumbnail.md.scss\ndeleted file mode 100644\nindex 0fbb2ca..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.md.vars\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-md-width};\n-  --border-radius: #{$thumbnail-md-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.md.vars.scss b/core/src/components/thumbnail/thumbnail.md.vars.scss\ndeleted file mode 100644\nindex 94e48b2..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.md\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-md-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-md-height:                  $thumbnail-md-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-md-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.scss b/core/src/components/thumbnail/thumbnail.scss\nindex 8ac3a22..8af268d 100644\n--- a/core/src/components/thumbnail/thumbnail.scss\n+++ b/core/src/components/thumbnail/thumbnail.scss\n@@ -9,6 +9,8 @@\n    * @prop --border-radius: Border radius of the thumbnail\n    * @prop --size: Size of the thumbnail\n    */\n+  --size: 48px;\n+  --border-radius: 0;\n \n   @include border-radius(var(--border-radius));\n \ndiff --git a/core/src/components/thumbnail/thumbnail.tsx b/core/src/components/thumbnail/thumbnail.tsx\nindex 50ff2c2..de76593 100644\n--- a/core/src/components/thumbnail/thumbnail.tsx\n+++ b/core/src/components/thumbnail/thumbnail.tsx\n@@ -1,25 +1,11 @@\n import { Component } from '@stencil/core';\n \n-import { Mode } from '../../interface';\n-import { createThemedClasses } from '../../utils/theme';\n-\n @Component({\n   tag: 'ion-thumbnail',\n-  styleUrls: {\n-    ios: 'thumbnail.ios.scss',\n-    md: 'thumbnail.md.scss'\n-  },\n+  styleUrl: 'thumbnail.scss',\n   shadow: true\n })\n export class Thumbnail {\n-  mode!: Mode;\n-\n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'thumbnail')\n-    };\n-  }\n-\n   render() {\n     return <slot></slot>;\n   }\n""]",2,"[""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8"", ""771857b1df9470ebc15357e8879118a72c649d5b""]","[""feat"", ""refactor""]"
"buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23,wrong icon reference

Signed-off-by: Pranav C <pranavxc@gmail.com>","[""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n"", ""diff --git a/packages/nc-gui/components.d.ts b/packages/nc-gui/components.d.ts\nindex b7e6585..bb86478 100644\n--- a/packages/nc-gui/components.d.ts\n+++ b/packages/nc-gui/components.d.ts\n@@ -81,7 +81,6 @@ declare module '@vue/runtime-core' {\n     ClaritySuccessLine: typeof import('~icons/clarity/success-line')['default']\n     EvaEmailOutline: typeof import('~icons/eva/email-outline')['default']\n     IcBaselineMoreVert: typeof import('~icons/ic/baseline-more-vert')['default']\n-    Icon: typeof import('~icons/ic/on')['default']\n     IcOutlineInsertDriveFile: typeof import('~icons/ic/outline-insert-drive-file')['default']\n     IcRoundEdit: typeof import('~icons/ic/round-edit')['default']\n     IcRoundKeyboardArrowDown: typeof import('~icons/ic/round-keyboard-arrow-down')['default']\n""]",2,"[""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d"", ""d1d55e787b7d07f763852602b9939a5394607fd9""]","[""feat"", ""fix""]"
"fix build ordering,update `cargo-make` for `v0.35.3`","[""diff --git a/scripts/build.mjs b/scripts/build.mjs\nindex 204854f..b3cf067 100644\n--- a/scripts/build.mjs\n+++ b/scripts/build.mjs\n@@ -3,8 +3,8 @@ import { write } from 'fsxx';\n import { info, success } from './helpers.mjs';\n \n await $`rm -rf dist/*`;\n-await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n await $`unbuild`;\n+await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n \n const packages = [\n   'jsx-runtime',\n"", ""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n""]",2,"[""c323d59c607cabc91f17a78528d998f376f30b10"", ""0cfc5633d37ea06f645649138323f1820e18bdee""]","[""build"", ""docs""]"
"add tests,added suported tuple types","[""diff --git a/Cargo.lock b/Cargo.lock\nindex 84d5d07..6ad05da 100644\n--- a/Cargo.lock\n+++ b/Cargo.lock\n@@ -293,6 +293,7 @@ version = \""0.1.0\""\n dependencies = [\n  \""git-cliff-core\"",\n  \""log\"",\n+ \""pretty_assertions\"",\n  \""pretty_env_logger\"",\n  \""structopt\"",\n ]\ndiff --git a/git-cliff-core/src/lib.rs b/git-cliff-core/src/lib.rs\nindex 3b18ba0..a560c94 100644\n--- a/git-cliff-core/src/lib.rs\n+++ b/git-cliff-core/src/lib.rs\n@@ -1,6 +1,8 @@\n //! Highly customizable Changelog Generator\n #![warn(missing_docs, clippy::unwrap_used)]\n \n+/// Export regex crate.\n+pub use regex;\n /// Git commit.\n pub mod commit;\n /// Config file parser.\ndiff --git a/git-cliff/Cargo.toml b/git-cliff/Cargo.toml\nindex 41eb2e9..cc64b37 100644\n--- a/git-cliff/Cargo.toml\n+++ b/git-cliff/Cargo.toml\n@@ -20,3 +20,6 @@ log = \""0.4.14\""\n version = \""0.3\""\n default-features = false\n features = [\""suggestions\"", \""color\"", \""wrap_help\""]\n+\n+[dev-dependencies]\n+pretty_assertions = \""0.7\""\ndiff --git a/git-cliff/src/changelog.rs b/git-cliff/src/changelog.rs\nindex 3f9e994..23ea186 100644\n--- a/git-cliff/src/changelog.rs\n+++ b/git-cliff/src/changelog.rs\n@@ -115,3 +115,171 @@ impl<'a> Changelog<'a> {\n \t\tOk(())\n \t}\n }\n+\n+#[cfg(test)]\n+mod test {\n+\tuse super::*;\n+\tuse git_cliff_core::config::{\n+\t\tChangelogConfig,\n+\t\tCommitParser,\n+\t\tGitConfig,\n+\t};\n+\tuse git_cliff_core::regex::Regex;\n+\tuse pretty_assertions::assert_eq;\n+\tuse std::str;\n+\t#[test]\n+\tfn changelog_generator() -> Result<()> {\n+\t\tlet config = Config {\n+\t\t\tchangelog: ChangelogConfig {\n+\t\t\t\theader: Some(String::from(\""# Changelog\"")),\n+\t\t\t\tbody:   String::from(\n+\t\t\t\t\tr#\""{% if version %}\n+\t\t\t\t## Release [{{ version }}] - {{ timestamp | date(format=\""%Y-%m-%d\"") }}\n+\t\t\t\t({{ commit_id }}){% else %}\n+\t\t\t\t## Unreleased{% endif %}\n+\t\t\t\t{% for group, commits in commits | group_by(attribute=\""group\"") %}\n+\t\t\t\t### {{ group }}{% for group, commits in commits | group_by(attribute=\""scope\"") %}\n+\t\t\t\t#### {{ group }}{% for commit in commits %}\n+\t\t\t\t- {{ commit.message }}{% endfor %}\n+\t\t\t\t{% endfor %}{% endfor %}\""#,\n+\t\t\t\t)\n+\t\t\t\t.replace(\""\t\t\t\t\"", \""\""),\n+\t\t\t\tfooter: Some(String::from(\""------------\"")),\n+\t\t\t},\n+\t\t\tgit:       GitConfig {\n+\t\t\t\tconventional_commits: true,\n+\t\t\t\tcommit_parsers:       Some(vec![\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""feat*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""New features\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""fix*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Bug Fixes\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\"".*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Other\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t]),\n+\t\t\t\tfilter_commits:       Some(false),\n+\t\t\t\ttag_pattern:          String::new(),\n+\t\t\t\tskip_tags:            Regex::new(\""v3.*\"").ok(),\n+\t\t\t},\n+\t\t};\n+\t\tlet test_release = Release {\n+\t\t\tversion:   Some(String::from(\""v1.0.0\"")),\n+\t\t\tcommits:   vec![\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0bc123\""),\n+\t\t\t\t\tString::from(\""feat(app): add cool features\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0werty\""),\n+\t\t\t\t\tString::from(\""style(ui): make good stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0w3rty\""),\n+\t\t\t\t\tString::from(\""fix(ui): fix more stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0jkl12\""),\n+\t\t\t\t\tString::from(\""chore(app): do nothing\""),\n+\t\t\t\t),\n+\t\t\t],\n+\t\t\tcommit_id: Some(String::from(\""0bc123\"")),\n+\t\t\ttimestamp: 50000000,\n+\t\t\tprevious:  None,\n+\t\t};\n+\t\tlet releases = vec![\n+\t\t\ttest_release.clone(),\n+\t\t\tRelease {\n+\t\t\t\tversion: Some(String::from(\""v3.0.0\"")),\n+\t\t\t\tcommits: vec![Commit::new(\n+\t\t\t\t\tString::from(\""n0thin\""),\n+\t\t\t\t\tString::from(\""feat(xyz): skip commit\""),\n+\t\t\t\t)],\n+\t\t\t\t..Release::default()\n+\t\t\t},\n+\t\t\tRelease {\n+\t\t\t\tversion:   None,\n+\t\t\t\tcommits:   vec![\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc123\""),\n+\t\t\t\t\t\tString::from(\""feat(app): add xyz\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc124\""),\n+\t\t\t\t\t\tString::from(\""docs(app): document zyx\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(String::from(\""def789\""), String::from(\""merge #4\"")),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""qwerty\""),\n+\t\t\t\t\t\tString::from(\""fix(app): fix abc\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""hjkl12\""),\n+\t\t\t\t\t\tString::from(\""chore(ui): do boring stuff\""),\n+\t\t\t\t\t),\n+\t\t\t\t],\n+\t\t\t\tcommit_id: None,\n+\t\t\t\ttimestamp: 1000,\n+\t\t\t\tprevious:  Some(Box::new(test_release)),\n+\t\t\t},\n+\t\t];\n+\t\tlet changelog = Changelog::new(releases, &config)?;\n+\t\tlet mut out = Vec::new();\n+\t\tchangelog.generate(&mut out)?;\n+\t\tassert_eq!(\n+\t\t\tString::from(\n+\t\t\t\tr#\""# Changelog\n+\n+\t\t\t## Unreleased\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### app\n+\t\t\t- fix abc\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add xyz\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- document zyx\n+\n+\t\t\t#### ui\n+\t\t\t- do boring stuff\n+\n+\t\t\t## Release [v1.0.0] - 1971-08-02\n+\t\t\t(0bc123)\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### ui\n+\t\t\t- fix more stuff\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add cool features\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- do nothing\n+\n+\t\t\t#### ui\n+\t\t\t- make good stuff\n+\t\t\t------------\n+\t\t\t\""#\n+\t\t\t)\n+\t\t\t.replace(\""\t\t\t\"", \""\""),\n+\t\t\tstr::from_utf8(&out).unwrap()\n+\t\t);\n+\t\tOk(())\n+\t}\n+}\n"", ""diff --git a/src/List/Tuple.ts b/src/List/Tuple.ts\nindex 4c59caa..6e45503 100644\n--- a/src/List/Tuple.ts\n+++ b/src/List/Tuple.ts\n@@ -1,15 +1,17 @@\n-/** A [[Tuple]]\n+import {NonNullable} from '../Object/NonNullable'\n+\n+/** A [[Tuple]] (supported)\n  * @param A its type\n- * @returns **`any[]`**\n+ * @returns **`A[]`**\n  * @example\n  * ```ts\n- * type list0 = [1, 2, 3]\n- * type list1 = number[]\n+ * type tuple0 = [1, 20, 42]\n+ * type tuple1 = ['at', 420]\n  * ```\n  */\n-export type Tuple = [\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-]\n+export type Tuple<A = any> = NonNullable<[\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+]>\n""]",2,"[""8ee0611fbf0cd89abe7ae588f22e6ecb843598ea"", ""2954a0955ce9af6acb345ed1e8328e145ad30475""]","[""test"", ""refactor""]"
"cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.,never call ""onStart"" prop when idle","[""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n"", ""diff --git a/packages/core/src/SpringValue.ts b/packages/core/src/SpringValue.ts\nindex 18494a8..cbc4f27 100644\n--- a/packages/core/src/SpringValue.ts\n+++ b/packages/core/src/SpringValue.ts\n@@ -596,11 +596,11 @@ export class SpringValue<T = any> extends AnimationValue<T> {\n   /** Notify change observers */\n   protected _onChange(value: T, idle = false) {\n     const anim = this.animation\n-    if (!anim.changed) {\n+    if (!anim.changed && !idle) {\n       anim.changed = true\n       // The \""onStart\"" prop is called on the first change after entering the\n       // frameloop, but never for immediate animations.\n-      if (anim.onStart && !anim.immediate) {\n+      if (anim.onStart) {\n         anim.onStart(this)\n       }\n     }\n""]",2,"[""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7"", ""c8e0ae8612df3d6f2831acc004aaac332f6105e4""]","[""refactor"", ""fix""]"
"remove deprecated settings

Removes deprecated ZEEBE_HOST environment variable, and removes
unnecessary log level environment variable, since it's already the
default in the log file,add riscv64gc-unknown-linux-gnu","[""diff --git a/Dockerfile b/Dockerfile\nindex 6762a39..7f380cd 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -34,7 +34,6 @@ RUN wget -O - https://github.com/jvm-profiling-tools/async-profiler/releases/dow\n FROM ${APP_ENV} as app\n \n ENV ZB_HOME=/usr/local/zeebe \\\n-    ZEEBE_LOG_LEVEL=info \\\n     ZEEBE_BROKER_GATEWAY_NETWORK_HOST=0.0.0.0 \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \""${ZB_HOME}/bin:${PATH}\""\ndiff --git a/docker/utils/startup.sh b/docker/utils/startup.sh\nindex bc8d2fc..0fcde2b 100755\n--- a/docker/utils/startup.sh\n+++ b/docker/utils/startup.sh\n@@ -1,17 +1,14 @@\n #!/bin/bash -xeu\n \n-# legacy support\n-# This environment variable was used to set the gatewway cluster host in standalone and embedded mode.\n-# Now, there are two dedicated environment variables for the two different deployment scenarios.\n-export ZEEBE_HOST=${ZEEBE_HOST:-$(hostname -i)}\n-# Legacy support\n+HOST=$(hostname -i)\n \n if [ \""$ZEEBE_STANDALONE_GATEWAY\"" = \""true\"" ]; then\n-    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_GATEWAY_NETWORK_HOST=${ZEEBE_GATEWAY_NETWORK_HOST:-${HOST}}\n+    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${HOST}}\n \n     exec /usr/local/zeebe/bin/gateway\n else\n-    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${HOST}}\n     export ZEEBE_BROKER_GATEWAY_CLUSTER_HOST=${ZEEBE_BROKER_GATEWAY_CLUSTER_HOST:-${ZEEBE_BROKER_NETWORK_HOST}}\n \n     exec /usr/local/zeebe/bin/broker\n"", ""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n""]",2,"[""e4a11fd5c34942ba12737f1c8c084489428ee274"", ""173553c0372e66e03bdab19e0e6c2dd44daa14a0""]","[""build"", ""cicd""]"
"never call ""onStart"" prop when idle,add numberOfLines prop to DataTableTitle (#863)

Closes #848","[""diff --git a/packages/core/src/SpringValue.ts b/packages/core/src/SpringValue.ts\nindex 18494a8..cbc4f27 100644\n--- a/packages/core/src/SpringValue.ts\n+++ b/packages/core/src/SpringValue.ts\n@@ -596,11 +596,11 @@ export class SpringValue<T = any> extends AnimationValue<T> {\n   /** Notify change observers */\n   protected _onChange(value: T, idle = false) {\n     const anim = this.animation\n-    if (!anim.changed) {\n+    if (!anim.changed && !idle) {\n       anim.changed = true\n       // The \""onStart\"" prop is called on the first change after entering the\n       // frameloop, but never for immediate animations.\n-      if (anim.onStart && !anim.immediate) {\n+      if (anim.onStart) {\n         anim.onStart(this)\n       }\n     }\n"", ""diff --git a/src/components/DataTable/DataTableTitle.js b/src/components/DataTable/DataTableTitle.js\nindex bfcf07e..d764fd5 100644\n--- a/src/components/DataTable/DataTableTitle.js\n+++ b/src/components/DataTable/DataTableTitle.js\n@@ -27,6 +27,10 @@ type Props = React.ElementConfig<typeof TouchableWithoutFeedback> & {|\n    */\n   sortDirection?: 'ascending' | 'descending',\n   /**\n+   * The number of lines to show.\n+   */\n+  numberOfLines?: number,\n+  /**\n    * Function to execute on press.\n    */\n   onPress?: () => mixed,\n@@ -44,6 +48,10 @@ type State = {\n class DataTableTitle extends React.Component<Props, State> {\n   static displayName = 'DataTable.Title';\n \n+  static defaultProps = {\n+    numberOfLines: 1,\n+  };\n+\n   state = {\n     spinAnim: new Animated.Value(\n       this.props.sortDirection === 'ascending' ? 0 : 1\n@@ -70,6 +78,7 @@ class DataTableTitle extends React.Component<Props, State> {\n       sortDirection,\n       theme,\n       style,\n+      numberOfLines,\n       ...rest\n     } = this.props;\n \n@@ -99,7 +108,7 @@ class DataTableTitle extends React.Component<Props, State> {\n               styles.cell,\n               sortDirection ? styles.sorted : { color: textColor },\n             ]}\n-            numberOfLines={1}\n+            numberOfLines={numberOfLines}\n           >\n             {children}\n           </Text>\n""]",2,"[""c8e0ae8612df3d6f2831acc004aaac332f6105e4"", ""f9a094918b62534614c47aa8a13f33aec751a1e0""]","[""fix"", ""feat""]"
"make it mode less,update `cargo-make` for `v0.35.3`","[""diff --git a/core/src/components/slides/slides.tsx b/core/src/components/slides/slides.tsx\nindex 48fd53f..d5c2f75 100644\n--- a/core/src/components/slides/slides.tsx\n+++ b/core/src/components/slides/slides.tsx\n@@ -1,7 +1,6 @@\n import { Component, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n \n import { Mode } from '../../interface.js';\n-import { createThemedClasses } from '../../utils/theme.js';\n \n import { Swiper } from './vendor/swiper.js';\n \n@@ -15,6 +14,7 @@ import { Swiper } from './vendor/swiper.js';\n   shadow: true\n })\n export class Slides {\n+\n   private container!: HTMLElement;\n   private swiper: any;\n \n@@ -391,12 +391,6 @@ export class Slides {\n     return { ...swiperOptions, ...this.options, ...eventOptions };\n   }\n \n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'slides')\n-    };\n-  }\n-\n   render() {\n     return (\n       <div class=\""swiper-container\"" ref={el => this.container = el as HTMLElement }>\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.scss b/core/src/components/thumbnail/thumbnail.ios.scss\ndeleted file mode 100644\nindex e3add45..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.ios.vars\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-ios-width};\n-  --border-radius: #{$thumbnail-ios-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.vars.scss b/core/src/components/thumbnail/thumbnail.ios.vars.scss\ndeleted file mode 100644\nindex 85d53e5..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.ios\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-ios-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-ios-height:                  $thumbnail-ios-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-ios-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.md.scss b/core/src/components/thumbnail/thumbnail.md.scss\ndeleted file mode 100644\nindex 0fbb2ca..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.md.vars\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-md-width};\n-  --border-radius: #{$thumbnail-md-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.md.vars.scss b/core/src/components/thumbnail/thumbnail.md.vars.scss\ndeleted file mode 100644\nindex 94e48b2..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.md\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-md-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-md-height:                  $thumbnail-md-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-md-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.scss b/core/src/components/thumbnail/thumbnail.scss\nindex 8ac3a22..8af268d 100644\n--- a/core/src/components/thumbnail/thumbnail.scss\n+++ b/core/src/components/thumbnail/thumbnail.scss\n@@ -9,6 +9,8 @@\n    * @prop --border-radius: Border radius of the thumbnail\n    * @prop --size: Size of the thumbnail\n    */\n+  --size: 48px;\n+  --border-radius: 0;\n \n   @include border-radius(var(--border-radius));\n \ndiff --git a/core/src/components/thumbnail/thumbnail.tsx b/core/src/components/thumbnail/thumbnail.tsx\nindex 50ff2c2..de76593 100644\n--- a/core/src/components/thumbnail/thumbnail.tsx\n+++ b/core/src/components/thumbnail/thumbnail.tsx\n@@ -1,25 +1,11 @@\n import { Component } from '@stencil/core';\n \n-import { Mode } from '../../interface';\n-import { createThemedClasses } from '../../utils/theme';\n-\n @Component({\n   tag: 'ion-thumbnail',\n-  styleUrls: {\n-    ios: 'thumbnail.ios.scss',\n-    md: 'thumbnail.md.scss'\n-  },\n+  styleUrl: 'thumbnail.scss',\n   shadow: true\n })\n export class Thumbnail {\n-  mode!: Mode;\n-\n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'thumbnail')\n-    };\n-  }\n-\n   render() {\n     return <slot></slot>;\n   }\n"", ""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n""]",2,"[""771857b1df9470ebc15357e8879118a72c649d5b"", ""0cfc5633d37ea06f645649138323f1820e18bdee""]","[""refactor"", ""docs""]"
"buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23,repository creation","[""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n"", ""diff --git a/server/src/services/repository.service.ts b/server/src/services/repository.service.ts\nindex 3869c98..d675b30 100644\n--- a/server/src/services/repository.service.ts\n+++ b/server/src/services/repository.service.ts\n@@ -19,6 +19,8 @@ export class RepositoryService {\n       return;\n     }\n \n+    await this.createTeam(this.github, this.getTeamName(course), course.id);\n+\n     const studentRepo = getCustomRepository(StudentRepository);\n     const students = await studentRepo.findActiveByCourseId(this.courseId);\n \n@@ -31,8 +33,8 @@ export class RepositoryService {\n         if (mentorGithubId) {\n           await this.inviteMentor(mentorGithubId, course);\n         }\n-        await this.addTeamToRepository(this.github, course, student.githubId);\n       }\n+      await this.addTeamToRepository(this.github, course, student.githubId);\n       if (record?.repository) {\n         result.push({ repository: record.repository });\n       }\n""]",2,"[""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d"", ""87d5d4e55ab7149b593d29410f1fe426ba2447d4""]","[""feat"", ""fix""]"
"convert `run_tag_values_test_case` to a function,setup jest and add m.ts tests","[""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n""]",2,"[""1db13ec43727aca872a0f3836e4023ed85db665e"", ""229b53a632ea97d47c4be11f096bdd828fb415d8""]","[""refactor"", ""test""]"
"update wrapping tests for v7,add fallible peek_last_token()","[""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n""]",2,"[""317f4eefecddfb1392ca71d551840f446feee302"", ""63eab619e6166eb6cab948028a7b89bf059dd878""]","[""test"", ""refactor""]"
"nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,[gn] fix include_dirs ordering error","[""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 11adaa7..ed64b17 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -240,6 +240,14 @@ static_library(\""electron_lib\"") {\n     \""brightray\"",\n     \""build/node\"",\n   ]\n+  include_dirs = [\n+    \""chromium_src\"",\n+    \"".\"",\n+    \""$target_gen_dir\"",\n+    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n+    # API of blink, then delete this include dir.\n+    \""//third_party/WebKit/Source\"",\n+  ]\n   if (enable_desktop_capturer) {\n     deps += [ \""//third_party/webrtc/modules/desktop_capture\"" ]\n   }\n@@ -275,14 +283,6 @@ static_library(\""electron_lib\"") {\n     # Disable warnings for g_settings_list_schemas.\n     \""GLIB_DISABLE_DEPRECATION_WARNINGS\"",\n   ]\n-  include_dirs = [\n-    \""chromium_src\"",\n-    \"".\"",\n-    \""$target_gen_dir\"",\n-    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n-    # API of blink, then delete this include dir.\n-    \""//third_party/WebKit/Source\"",\n-  ]\n   if (is_component_build) {\n     defines += [\n       # Import V8 symbols from shared library (node.dll / libnode.so)\n""]",2,"[""e12d9e77a6fd531a22325337838a841b1c67f00d"", ""c44cf88a6ec54e5ddd99d8348bcc57b301ec7945""]","[""docs"", ""build""]"
"convert `run_tag_values_test_case` to a function,updated react demo parcel command","[""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n"", ""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n""]",2,"[""1db13ec43727aca872a0f3836e4023ed85db665e"", ""32b92cfa0b74a6c25990e32ac6aab12b8496794c""]","[""refactor"", ""build""]"
"update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909,autostart feature fixed","[""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n""]",2,"[""c2ee5cd5e709afd15c5565ee009a0d204403a119"", ""bed78248c941d57ad4cc20a455147e186e97c7a1""]","[""docs"", ""fix""]"
"Fix typo,add riscv64gc-unknown-linux-gnu","[""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n""]",2,"[""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""173553c0372e66e03bdab19e0e6c2dd44daa14a0""]","[""docs"", ""cicd""]"
"cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.,remove ubuntu-latest from job title where that is the only os","[""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n""]",2,"[""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7"", ""74e9de5ec97dc013a52aa063dff0f40ac74c407b""]","[""refactor"", ""cicd""]"
"add benchmark for known-slow table expression,repository creation","[""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n"", ""diff --git a/server/src/services/repository.service.ts b/server/src/services/repository.service.ts\nindex 3869c98..d675b30 100644\n--- a/server/src/services/repository.service.ts\n+++ b/server/src/services/repository.service.ts\n@@ -19,6 +19,8 @@ export class RepositoryService {\n       return;\n     }\n \n+    await this.createTeam(this.github, this.getTeamName(course), course.id);\n+\n     const studentRepo = getCustomRepository(StudentRepository);\n     const students = await studentRepo.findActiveByCourseId(this.courseId);\n \n@@ -31,8 +33,8 @@ export class RepositoryService {\n         if (mentorGithubId) {\n           await this.inviteMentor(mentorGithubId, course);\n         }\n-        await this.addTeamToRepository(this.github, course, student.githubId);\n       }\n+      await this.addTeamToRepository(this.github, course, student.githubId);\n       if (record?.repository) {\n         result.push({ repository: record.repository });\n       }\n""]",2,"[""e9617f0854030e70365eb264bcb3b58078e79e9e"", ""87d5d4e55ab7149b593d29410f1fe426ba2447d4""]","[""test"", ""fix""]"
"support use meta key select multiple element,remove appear css animation","[""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n"", ""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n""]",2,"[""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8"", ""47ef9104e4a89e80d7cc6c1950bc080841da4a7b""]","[""feat"", ""refactor""]"
"initialize threejs objects in defaultRef, to fix undefined type errors,remove ubuntu-latest from job title where that is the only os","[""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n""]",2,"[""2561f4ade46fc9d59f289f328cc77733a6443697"", ""74e9de5ec97dc013a52aa063dff0f40ac74c407b""]","[""fix"", ""cicd""]"
"[gn win] link comctl32.lib to fix component build,add remote [skip ci]","[""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/.github/workflows/ibis-rebase-nightly.yml b/.github/workflows/ibis-rebase-nightly.yml\nindex 06c9003..e19c703 100644\n--- a/.github/workflows/ibis-rebase-nightly.yml\n+++ b/.github/workflows/ibis-rebase-nightly.yml\n@@ -47,7 +47,10 @@ jobs:\n           git config --global user.email 'ibis-squawk-bot[bot]@users.noreply.github.com'\n \n       - name: fetch and rebase on top of upstream\n-        run: git pull --rebase -X ours https://github.com/ibis-project/ibis master\n+        run: |\n+          git remote add upstream https://github.com/ibis-project/ibis\n+          git fetch upstream\n+          git rebase -X ours upstream/master\n \n       - uses: tibdex/github-app-token@v1\n         id: generate_pr_token\n""]",2,"[""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""e96487ad7ce90b141219d9032fa2bed68d5dae6a""]","[""build"", ""cicd""]"
"updated react demo parcel command,add tests","[""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n"", ""diff --git a/Cargo.lock b/Cargo.lock\nindex 84d5d07..6ad05da 100644\n--- a/Cargo.lock\n+++ b/Cargo.lock\n@@ -293,6 +293,7 @@ version = \""0.1.0\""\n dependencies = [\n  \""git-cliff-core\"",\n  \""log\"",\n+ \""pretty_assertions\"",\n  \""pretty_env_logger\"",\n  \""structopt\"",\n ]\ndiff --git a/git-cliff-core/src/lib.rs b/git-cliff-core/src/lib.rs\nindex 3b18ba0..a560c94 100644\n--- a/git-cliff-core/src/lib.rs\n+++ b/git-cliff-core/src/lib.rs\n@@ -1,6 +1,8 @@\n //! Highly customizable Changelog Generator\n #![warn(missing_docs, clippy::unwrap_used)]\n \n+/// Export regex crate.\n+pub use regex;\n /// Git commit.\n pub mod commit;\n /// Config file parser.\ndiff --git a/git-cliff/Cargo.toml b/git-cliff/Cargo.toml\nindex 41eb2e9..cc64b37 100644\n--- a/git-cliff/Cargo.toml\n+++ b/git-cliff/Cargo.toml\n@@ -20,3 +20,6 @@ log = \""0.4.14\""\n version = \""0.3\""\n default-features = false\n features = [\""suggestions\"", \""color\"", \""wrap_help\""]\n+\n+[dev-dependencies]\n+pretty_assertions = \""0.7\""\ndiff --git a/git-cliff/src/changelog.rs b/git-cliff/src/changelog.rs\nindex 3f9e994..23ea186 100644\n--- a/git-cliff/src/changelog.rs\n+++ b/git-cliff/src/changelog.rs\n@@ -115,3 +115,171 @@ impl<'a> Changelog<'a> {\n \t\tOk(())\n \t}\n }\n+\n+#[cfg(test)]\n+mod test {\n+\tuse super::*;\n+\tuse git_cliff_core::config::{\n+\t\tChangelogConfig,\n+\t\tCommitParser,\n+\t\tGitConfig,\n+\t};\n+\tuse git_cliff_core::regex::Regex;\n+\tuse pretty_assertions::assert_eq;\n+\tuse std::str;\n+\t#[test]\n+\tfn changelog_generator() -> Result<()> {\n+\t\tlet config = Config {\n+\t\t\tchangelog: ChangelogConfig {\n+\t\t\t\theader: Some(String::from(\""# Changelog\"")),\n+\t\t\t\tbody:   String::from(\n+\t\t\t\t\tr#\""{% if version %}\n+\t\t\t\t## Release [{{ version }}] - {{ timestamp | date(format=\""%Y-%m-%d\"") }}\n+\t\t\t\t({{ commit_id }}){% else %}\n+\t\t\t\t## Unreleased{% endif %}\n+\t\t\t\t{% for group, commits in commits | group_by(attribute=\""group\"") %}\n+\t\t\t\t### {{ group }}{% for group, commits in commits | group_by(attribute=\""scope\"") %}\n+\t\t\t\t#### {{ group }}{% for commit in commits %}\n+\t\t\t\t- {{ commit.message }}{% endfor %}\n+\t\t\t\t{% endfor %}{% endfor %}\""#,\n+\t\t\t\t)\n+\t\t\t\t.replace(\""\t\t\t\t\"", \""\""),\n+\t\t\t\tfooter: Some(String::from(\""------------\"")),\n+\t\t\t},\n+\t\t\tgit:       GitConfig {\n+\t\t\t\tconventional_commits: true,\n+\t\t\t\tcommit_parsers:       Some(vec![\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""feat*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""New features\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""fix*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Bug Fixes\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\"".*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Other\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t]),\n+\t\t\t\tfilter_commits:       Some(false),\n+\t\t\t\ttag_pattern:          String::new(),\n+\t\t\t\tskip_tags:            Regex::new(\""v3.*\"").ok(),\n+\t\t\t},\n+\t\t};\n+\t\tlet test_release = Release {\n+\t\t\tversion:   Some(String::from(\""v1.0.0\"")),\n+\t\t\tcommits:   vec![\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0bc123\""),\n+\t\t\t\t\tString::from(\""feat(app): add cool features\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0werty\""),\n+\t\t\t\t\tString::from(\""style(ui): make good stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0w3rty\""),\n+\t\t\t\t\tString::from(\""fix(ui): fix more stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0jkl12\""),\n+\t\t\t\t\tString::from(\""chore(app): do nothing\""),\n+\t\t\t\t),\n+\t\t\t],\n+\t\t\tcommit_id: Some(String::from(\""0bc123\"")),\n+\t\t\ttimestamp: 50000000,\n+\t\t\tprevious:  None,\n+\t\t};\n+\t\tlet releases = vec![\n+\t\t\ttest_release.clone(),\n+\t\t\tRelease {\n+\t\t\t\tversion: Some(String::from(\""v3.0.0\"")),\n+\t\t\t\tcommits: vec![Commit::new(\n+\t\t\t\t\tString::from(\""n0thin\""),\n+\t\t\t\t\tString::from(\""feat(xyz): skip commit\""),\n+\t\t\t\t)],\n+\t\t\t\t..Release::default()\n+\t\t\t},\n+\t\t\tRelease {\n+\t\t\t\tversion:   None,\n+\t\t\t\tcommits:   vec![\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc123\""),\n+\t\t\t\t\t\tString::from(\""feat(app): add xyz\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc124\""),\n+\t\t\t\t\t\tString::from(\""docs(app): document zyx\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(String::from(\""def789\""), String::from(\""merge #4\"")),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""qwerty\""),\n+\t\t\t\t\t\tString::from(\""fix(app): fix abc\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""hjkl12\""),\n+\t\t\t\t\t\tString::from(\""chore(ui): do boring stuff\""),\n+\t\t\t\t\t),\n+\t\t\t\t],\n+\t\t\t\tcommit_id: None,\n+\t\t\t\ttimestamp: 1000,\n+\t\t\t\tprevious:  Some(Box::new(test_release)),\n+\t\t\t},\n+\t\t];\n+\t\tlet changelog = Changelog::new(releases, &config)?;\n+\t\tlet mut out = Vec::new();\n+\t\tchangelog.generate(&mut out)?;\n+\t\tassert_eq!(\n+\t\t\tString::from(\n+\t\t\t\tr#\""# Changelog\n+\n+\t\t\t## Unreleased\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### app\n+\t\t\t- fix abc\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add xyz\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- document zyx\n+\n+\t\t\t#### ui\n+\t\t\t- do boring stuff\n+\n+\t\t\t## Release [v1.0.0] - 1971-08-02\n+\t\t\t(0bc123)\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### ui\n+\t\t\t- fix more stuff\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add cool features\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- do nothing\n+\n+\t\t\t#### ui\n+\t\t\t- make good stuff\n+\t\t\t------------\n+\t\t\t\""#\n+\t\t\t)\n+\t\t\t.replace(\""\t\t\t\"", \""\""),\n+\t\t\tstr::from_utf8(&out).unwrap()\n+\t\t);\n+\t\tOk(())\n+\t}\n+}\n""]",2,"[""32b92cfa0b74a6c25990e32ac6aab12b8496794c"", ""8ee0611fbf0cd89abe7ae588f22e6ecb843598ea""]","[""build"", ""test""]"
"convert `run_tag_values_test_case` to a function,remove ubuntu-latest from job title where that is the only os","[""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n""]",2,"[""1db13ec43727aca872a0f3836e4023ed85db665e"", ""74e9de5ec97dc013a52aa063dff0f40ac74c407b""]","[""refactor"", ""cicd""]"
"initialize threejs objects in defaultRef, to fix undefined type errors,spring version, core version","[""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n"", ""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n""]",2,"[""2561f4ade46fc9d59f289f328cc77733a6443697"", ""c55591ba157298a9c5816693c102a89dfd058830""]","[""fix"", ""build""]"
"[gn win] link comctl32.lib to fix component build,convert `run_tag_values_test_case` to a function","[""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n""]",2,"[""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""1db13ec43727aca872a0f3836e4023ed85db665e""]","[""build"", ""refactor""]"
"add tests,add remote [skip ci]","[""diff --git a/Cargo.lock b/Cargo.lock\nindex 84d5d07..6ad05da 100644\n--- a/Cargo.lock\n+++ b/Cargo.lock\n@@ -293,6 +293,7 @@ version = \""0.1.0\""\n dependencies = [\n  \""git-cliff-core\"",\n  \""log\"",\n+ \""pretty_assertions\"",\n  \""pretty_env_logger\"",\n  \""structopt\"",\n ]\ndiff --git a/git-cliff-core/src/lib.rs b/git-cliff-core/src/lib.rs\nindex 3b18ba0..a560c94 100644\n--- a/git-cliff-core/src/lib.rs\n+++ b/git-cliff-core/src/lib.rs\n@@ -1,6 +1,8 @@\n //! Highly customizable Changelog Generator\n #![warn(missing_docs, clippy::unwrap_used)]\n \n+/// Export regex crate.\n+pub use regex;\n /// Git commit.\n pub mod commit;\n /// Config file parser.\ndiff --git a/git-cliff/Cargo.toml b/git-cliff/Cargo.toml\nindex 41eb2e9..cc64b37 100644\n--- a/git-cliff/Cargo.toml\n+++ b/git-cliff/Cargo.toml\n@@ -20,3 +20,6 @@ log = \""0.4.14\""\n version = \""0.3\""\n default-features = false\n features = [\""suggestions\"", \""color\"", \""wrap_help\""]\n+\n+[dev-dependencies]\n+pretty_assertions = \""0.7\""\ndiff --git a/git-cliff/src/changelog.rs b/git-cliff/src/changelog.rs\nindex 3f9e994..23ea186 100644\n--- a/git-cliff/src/changelog.rs\n+++ b/git-cliff/src/changelog.rs\n@@ -115,3 +115,171 @@ impl<'a> Changelog<'a> {\n \t\tOk(())\n \t}\n }\n+\n+#[cfg(test)]\n+mod test {\n+\tuse super::*;\n+\tuse git_cliff_core::config::{\n+\t\tChangelogConfig,\n+\t\tCommitParser,\n+\t\tGitConfig,\n+\t};\n+\tuse git_cliff_core::regex::Regex;\n+\tuse pretty_assertions::assert_eq;\n+\tuse std::str;\n+\t#[test]\n+\tfn changelog_generator() -> Result<()> {\n+\t\tlet config = Config {\n+\t\t\tchangelog: ChangelogConfig {\n+\t\t\t\theader: Some(String::from(\""# Changelog\"")),\n+\t\t\t\tbody:   String::from(\n+\t\t\t\t\tr#\""{% if version %}\n+\t\t\t\t## Release [{{ version }}] - {{ timestamp | date(format=\""%Y-%m-%d\"") }}\n+\t\t\t\t({{ commit_id }}){% else %}\n+\t\t\t\t## Unreleased{% endif %}\n+\t\t\t\t{% for group, commits in commits | group_by(attribute=\""group\"") %}\n+\t\t\t\t### {{ group }}{% for group, commits in commits | group_by(attribute=\""scope\"") %}\n+\t\t\t\t#### {{ group }}{% for commit in commits %}\n+\t\t\t\t- {{ commit.message }}{% endfor %}\n+\t\t\t\t{% endfor %}{% endfor %}\""#,\n+\t\t\t\t)\n+\t\t\t\t.replace(\""\t\t\t\t\"", \""\""),\n+\t\t\t\tfooter: Some(String::from(\""------------\"")),\n+\t\t\t},\n+\t\t\tgit:       GitConfig {\n+\t\t\t\tconventional_commits: true,\n+\t\t\t\tcommit_parsers:       Some(vec![\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""feat*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""New features\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""fix*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Bug Fixes\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\"".*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Other\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t]),\n+\t\t\t\tfilter_commits:       Some(false),\n+\t\t\t\ttag_pattern:          String::new(),\n+\t\t\t\tskip_tags:            Regex::new(\""v3.*\"").ok(),\n+\t\t\t},\n+\t\t};\n+\t\tlet test_release = Release {\n+\t\t\tversion:   Some(String::from(\""v1.0.0\"")),\n+\t\t\tcommits:   vec![\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0bc123\""),\n+\t\t\t\t\tString::from(\""feat(app): add cool features\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0werty\""),\n+\t\t\t\t\tString::from(\""style(ui): make good stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0w3rty\""),\n+\t\t\t\t\tString::from(\""fix(ui): fix more stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0jkl12\""),\n+\t\t\t\t\tString::from(\""chore(app): do nothing\""),\n+\t\t\t\t),\n+\t\t\t],\n+\t\t\tcommit_id: Some(String::from(\""0bc123\"")),\n+\t\t\ttimestamp: 50000000,\n+\t\t\tprevious:  None,\n+\t\t};\n+\t\tlet releases = vec![\n+\t\t\ttest_release.clone(),\n+\t\t\tRelease {\n+\t\t\t\tversion: Some(String::from(\""v3.0.0\"")),\n+\t\t\t\tcommits: vec![Commit::new(\n+\t\t\t\t\tString::from(\""n0thin\""),\n+\t\t\t\t\tString::from(\""feat(xyz): skip commit\""),\n+\t\t\t\t)],\n+\t\t\t\t..Release::default()\n+\t\t\t},\n+\t\t\tRelease {\n+\t\t\t\tversion:   None,\n+\t\t\t\tcommits:   vec![\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc123\""),\n+\t\t\t\t\t\tString::from(\""feat(app): add xyz\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc124\""),\n+\t\t\t\t\t\tString::from(\""docs(app): document zyx\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(String::from(\""def789\""), String::from(\""merge #4\"")),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""qwerty\""),\n+\t\t\t\t\t\tString::from(\""fix(app): fix abc\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""hjkl12\""),\n+\t\t\t\t\t\tString::from(\""chore(ui): do boring stuff\""),\n+\t\t\t\t\t),\n+\t\t\t\t],\n+\t\t\t\tcommit_id: None,\n+\t\t\t\ttimestamp: 1000,\n+\t\t\t\tprevious:  Some(Box::new(test_release)),\n+\t\t\t},\n+\t\t];\n+\t\tlet changelog = Changelog::new(releases, &config)?;\n+\t\tlet mut out = Vec::new();\n+\t\tchangelog.generate(&mut out)?;\n+\t\tassert_eq!(\n+\t\t\tString::from(\n+\t\t\t\tr#\""# Changelog\n+\n+\t\t\t## Unreleased\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### app\n+\t\t\t- fix abc\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add xyz\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- document zyx\n+\n+\t\t\t#### ui\n+\t\t\t- do boring stuff\n+\n+\t\t\t## Release [v1.0.0] - 1971-08-02\n+\t\t\t(0bc123)\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### ui\n+\t\t\t- fix more stuff\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add cool features\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- do nothing\n+\n+\t\t\t#### ui\n+\t\t\t- make good stuff\n+\t\t\t------------\n+\t\t\t\""#\n+\t\t\t)\n+\t\t\t.replace(\""\t\t\t\"", \""\""),\n+\t\t\tstr::from_utf8(&out).unwrap()\n+\t\t);\n+\t\tOk(())\n+\t}\n+}\n"", ""diff --git a/.github/workflows/ibis-rebase-nightly.yml b/.github/workflows/ibis-rebase-nightly.yml\nindex 06c9003..e19c703 100644\n--- a/.github/workflows/ibis-rebase-nightly.yml\n+++ b/.github/workflows/ibis-rebase-nightly.yml\n@@ -47,7 +47,10 @@ jobs:\n           git config --global user.email 'ibis-squawk-bot[bot]@users.noreply.github.com'\n \n       - name: fetch and rebase on top of upstream\n-        run: git pull --rebase -X ours https://github.com/ibis-project/ibis master\n+        run: |\n+          git remote add upstream https://github.com/ibis-project/ibis\n+          git fetch upstream\n+          git rebase -X ours upstream/master\n \n       - uses: tibdex/github-app-token@v1\n         id: generate_pr_token\n""]",2,"[""8ee0611fbf0cd89abe7ae588f22e6ecb843598ea"", ""e96487ad7ce90b141219d9032fa2bed68d5dae6a""]","[""test"", ""cicd""]"
"xfail on to_parquet and to_csv that use pyarrow write options,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.","[""diff --git a/ibis/backends/tests/test_export.py b/ibis/backends/tests/test_export.py\nindex 4d536d7..5bb9775 100644\n--- a/ibis/backends/tests/test_export.py\n+++ b/ibis/backends/tests/test_export.py\n@@ -222,18 +222,23 @@ def test_table_to_parquet(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\""), [({\""version\"": \""1.0\""}), ({\""version\"": \""2.6\""})])\n-def test_table_to_parquet_writer_kwargs(kwargs, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.NotSupportedError,\n+)\n+@pytest.mark.parametrize(\""version\"", [\""1.0\"", \""2.6\""])\n+def test_table_to_parquet_writer_kwargs(version, tmp_path, backend, awards_players):\n     outparquet = tmp_path / \""out.parquet\""\n-    awards_players.to_parquet(outparquet, **kwargs)\n+    awards_players.to_parquet(outparquet, version=version)\n \n     df = pd.read_parquet(outparquet)\n \n     backend.assert_frame_equal(awards_players.to_pandas(), df)\n \n-    file = pa.parquet.ParquetFile(outparquet)\n+    md = pa.parquet.read_metadata(outparquet)\n \n-    assert file.metadata.format_version == kwargs[\""version\""]\n+    assert md.format_version == version\n \n \n @pytest.mark.notimpl(\n@@ -316,14 +321,20 @@ def test_table_to_csv(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\"", \""delimiter\""), [({\""write_options\"": pcsv.WriteOptions(delimiter=\"";\"")}, \"";\""), ({\""write_options\"": pcsv.WriteOptions(delimiter=\""\\t\"")}, \""\\t\"")])\n-def test_table_to_csv_writer_kwargs(kwargs, delimiter, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.ProgrammingError,\n+)\n+@pytest.mark.parametrize(\""delimiter\"", [\"";\"", \""\\t\""], ids=[\""semicolon\"", \""tab\""])\n+def test_table_to_csv_writer_kwargs(delimiter, tmp_path, awards_players):\n     outcsv = tmp_path / \""out.csv\""\n     # avoid pandas NaNonense\n     awards_players = awards_players.select(\""playerID\"", \""awardID\"", \""yearID\"", \""lgID\"")\n \n-    awards_players.to_csv(outcsv, **kwargs)\n-    pd.read_csv(outcsv, delimiter=delimiter)\n+    awards_players.to_csv(outcsv, write_options=pcsv.WriteOptions(delimiter=delimiter))\n+    df = pd.read_csv(outcsv, delimiter=delimiter, nrows=1)\n+    assert len(df) == 1\n \n \n @pytest.mark.parametrize(\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n""]",2,"[""bedc7950b24c37809e36a585b7985d5aa5e3e458"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c""]","[""test"", ""refactor""]"
"remove ubuntu-latest from job title where that is the only os,add fallible peek_last_token()","[""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n"", ""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n""]",2,"[""74e9de5ec97dc013a52aa063dff0f40ac74c407b"", ""63eab619e6166eb6cab948028a7b89bf059dd878""]","[""cicd"", ""refactor""]"
"update wrapping tests for v7,add spacing in comment fix lint (#8555)","[""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/src/components/nav/test/basic/app-module.ts b/src/components/nav/test/basic/app-module.ts\nindex 467917a..375e662 100644\n--- a/src/components/nav/test/basic/app-module.ts\n+++ b/src/components/nav/test/basic/app-module.ts\n@@ -633,7 +633,7 @@ export class Tab3 {\n   }\n \n   presentModal() {\n-    //this.modalCtrl.create(MyModal).present();\n+    // this.modalCtrl.create(MyModal).present();\n   }\n \n   selectPrevious() {\n""]",2,"[""317f4eefecddfb1392ca71d551840f446feee302"", ""af880ac5b4fecbc6c4f3d1eee0d95f326e8bd9d1""]","[""test"", ""docs""]"
"add getter for protocol id,allow disabling dynamic queue","[""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n"", ""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n""]",2,"[""dc5238b2bda98a7c4f2fe9584fc3b0191a408109"", ""9ef5c0d14193a9abb09b39856f58477d1f4b0d77""]","[""feat"", ""fix""]"
"remove deprecated settings

Removes deprecated ZEEBE_HOST environment variable, and removes
unnecessary log level environment variable, since it's already the
default in the log file,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>","[""diff --git a/Dockerfile b/Dockerfile\nindex 6762a39..7f380cd 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -34,7 +34,6 @@ RUN wget -O - https://github.com/jvm-profiling-tools/async-profiler/releases/dow\n FROM ${APP_ENV} as app\n \n ENV ZB_HOME=/usr/local/zeebe \\\n-    ZEEBE_LOG_LEVEL=info \\\n     ZEEBE_BROKER_GATEWAY_NETWORK_HOST=0.0.0.0 \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \""${ZB_HOME}/bin:${PATH}\""\ndiff --git a/docker/utils/startup.sh b/docker/utils/startup.sh\nindex bc8d2fc..0fcde2b 100755\n--- a/docker/utils/startup.sh\n+++ b/docker/utils/startup.sh\n@@ -1,17 +1,14 @@\n #!/bin/bash -xeu\n \n-# legacy support\n-# This environment variable was used to set the gatewway cluster host in standalone and embedded mode.\n-# Now, there are two dedicated environment variables for the two different deployment scenarios.\n-export ZEEBE_HOST=${ZEEBE_HOST:-$(hostname -i)}\n-# Legacy support\n+HOST=$(hostname -i)\n \n if [ \""$ZEEBE_STANDALONE_GATEWAY\"" = \""true\"" ]; then\n-    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_GATEWAY_NETWORK_HOST=${ZEEBE_GATEWAY_NETWORK_HOST:-${HOST}}\n+    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${HOST}}\n \n     exec /usr/local/zeebe/bin/gateway\n else\n-    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${HOST}}\n     export ZEEBE_BROKER_GATEWAY_CLUSTER_HOST=${ZEEBE_BROKER_GATEWAY_CLUSTER_HOST:-${ZEEBE_BROKER_NETWORK_HOST}}\n \n     exec /usr/local/zeebe/bin/broker\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n""]",2,"[""e4a11fd5c34942ba12737f1c8c084489428ee274"", ""e12d9e77a6fd531a22325337838a841b1c67f00d""]","[""build"", ""docs""]"
"buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23,add fallible peek_last_token()","[""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n"", ""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n""]",2,"[""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d"", ""63eab619e6166eb6cab948028a7b89bf059dd878""]","[""feat"", ""refactor""]"
"only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,print errors without stacktrace,better layout for block and segment","[""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/docs/docs/config-block.md b/docs/docs/config-block.md\nnew file mode 100644\nindex 0000000..df1ee54\n--- /dev/null\n+++ b/docs/docs/config-block.md\n@@ -0,0 +1,60 @@\n+---\n+id: config-block\n+title: Block\n+sidebar_label: Block\n+---\n+\n+Let's take a closer look at what defines a block.\n+\n+```json\n+{\n+  \""$schema\"": \""https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json\"",\n+  ...\n+  \""blocks\"": [\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""left\"",\n+      \""segments\"": [\n+        ...\n+      ]\n+    }\n+  ]\n+}\n+```\n+\n+- type: `prompt` | `rprompt`\n+- newline: `boolean`\n+- alignment: `left` | `right`\n+- vertical_offset: `int`\n+- horizontal_offset: `int`\n+- segments: `array` of one or more `segments`\n+\n+### Type\n+\n+Tells the engine what to do with the block. There are three options:\n+\n+- `prompt` renders one or more segments\n+- `rprompt` renders one or more segments aligned to the right of the cursor. Only one `rprompt` block is permitted.\n+Supported on [ZSH][rprompt], Bash and Powershell.\n+\n+### Newline\n+\n+Start the block on a new line. Defaults to `false`.\n+\n+### Alignment\n+\n+Tell the engine if the block should be left or right-aligned.\n+\n+### Vertical offset\n+\n+Move the block up or down x lines. For example, `vertical_offset: 1` moves the prompt down one line, `vertical_offset: -1`\n+moves it up one line.\n+\n+### Horizontal offset\n+\n+Moves the segment to the left or the right to have it exactly where you want it to be. Works like `vertical_offset`\n+but on a horizontal level where a negative number moves the block left and a positive number right.\n+\n+### Segments\n+\n+Array of one or more segments.\ndiff --git a/docs/docs/config-example.md b/docs/docs/config-example.md\nnew file mode 100644\nindex 0000000..c180c4f\n--- /dev/null\n+++ b/docs/docs/config-example.md\n@@ -0,0 +1,96 @@\n+---\n+id: config-sample\n+title: Sample\n+sidebar_label: Sample\n+---\n+\n+```json\n+{\n+  \""final_space\"": true,\n+  \""blocks\"": [\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""right\"",\n+      \""vertical_offset\"": -1,\n+      \""segments\"": [\n+        {\n+          \""type\"": \""time\"",\n+          \""style\"": \""plain\"",\n+          \""foreground\"": \""#007ACC\"",\n+          \""properties\"": {\n+            \""time_format\"": \""15:04:05\""\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""left\"",\n+      \""newline\"": true,\n+      \""segments\"": [\n+        {\n+          \""type\"": \""session\"",\n+          \""style\"": \""diamond\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#ffb300\"",\n+          \""leading_diamond\"": \""\\uE0B6\"",\n+          \""trailing_diamond\"": \""\\uE0B0\"",\n+          \""properties\"": {\n+            \""postfix\"": \"" \""\n+          }\n+        },\n+        {\n+          \""type\"": \""path\"",\n+          \""style\"": \""powerline\"",\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#61AFEF\"",\n+          \""properties\"": {\n+            \""prefix\"": \"" \\uE5FF \"",\n+            \""style\"": \""folder\"",\n+            \""exclude_folders\"": [\n+              \""/super/secret/project\""\n+            ],\n+            \""enable_hyperlink\"": false\n+          }\n+        },\n+        {\n+          \""type\"": \""git\"",\n+          \""style\"": \""powerline\"",\n+          \""foreground\"": \""#193549\"",\n+          \""foreground_templates\"": [\n+            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#ffffff{{ end }}\""\n+          ],\n+          \""background\"": \""#2e9599\"",\n+          \""background_templates\"": [\n+            \""{{ if or (.Working.Changed) (.Staging.Changed) }}#f36943{{ end }}\"",\n+            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#a8216b{{ end }}\"",\n+            \""{{ if gt .Ahead 0 }}#35b5ff{{ end }}\"",\n+            \""{{ if gt .Behind 0 }}#f89cfa{{ end }}\""\n+          ],\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""properties\"": {\n+            \""fetch_status\"": true,\n+            \""branch_max_length\"": 25,\n+            \""template\"": \""{{ .HEAD }}{{ .BranchStatus }}\""\n+          }\n+        },\n+        {\n+          \""type\"": \""exit\"",\n+          \""style\"": \""diamond\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#00897b\"",\n+          \""background_templates\"": [\""{{ if gt .Code 0 }}#e91e63{{ end }}\""],\n+          \""leading_diamond\"": \""\"",\n+          \""trailing_diamond\"": \""\\uE0B4\"",\n+          \""properties\"": {\n+            \""always_enabled\"": true,\n+            \""template\"": \""\\uE23A\"",\n+            \""prefix\"": \""<parentBackground>\\uE0B0</> \""\n+          }\n+        }\n+      ]\n+    }\n+  ]\n+}\n+```\ndiff --git a/docs/docs/config-overview.md b/docs/docs/config-overview.md\nindex 1fdbcba..b554869 100644\n--- a/docs/docs/config-overview.md\n+++ b/docs/docs/config-overview.md\n@@ -1,7 +1,7 @@\n ---\n id: config-overview\n-title: Overview\n-sidebar_label: Overview\n+title: General\n+sidebar_label: General\n ---\n \n Oh My Posh renders your prompt based on the definition of _blocks_ (like Lego) which contain one or more _segments_.\n@@ -64,332 +64,7 @@ boxes with question marks, set up your terminal to use a [supported font][font] \n - terminal_background: `string` [color][colors] - terminal background color, set to your terminal's background color when\n you notice black elements in Windows Terminal or the Visual Studio Code integrated terminal\n \n-## Block\n-\n-Let's take a closer look at what defines a block.\n-\n-- type: `prompt` | `rprompt`\n-- newline: `boolean`\n-- alignment: `left` | `right`\n-- vertical_offset: `int`\n-- horizontal_offset: `int`\n-- segments: `array` of one or more `segments`\n-\n-### Type\n-\n-Tells the engine what to do with the block. There are three options:\n-\n-- `prompt` renders one or more segments\n-- `rprompt` renders one or more segments aligned to the right of the cursor. Only one `rprompt` block is permitted.\n-Supported on [ZSH][rprompt], Bash and Powershell.\n-\n-### Newline\n-\n-Start the block on a new line. Defaults to `false`.\n-\n-### Alignment\n-\n-Tell the engine if the block should be left or right-aligned.\n-\n-### Vertical offset\n-\n-Move the block up or down x lines. For example, `vertical_offset: 1` moves the prompt down one line, `vertical_offset: -1`\n-moves it up one line.\n-\n-### Horizontal offset\n-\n-Moves the segment to the left or the right to have it exactly where you want it to be. Works like `vertical_offset`\n-but on a horizontal level where a negative number moves the block left and a positive number right.\n-\n-### Segments\n-\n-Array of one or more segments.\n-\n-## Segment\n-\n-A segment is a part of the prompt with a certain context. There are different types available out-of-the-box, if you're\n-looking for what's included, feel free to skip this part and browse through the [segments][segments]. Keep reading to\n-understand how to configure a segment.\n-\n-- type: `string` any of the included [segments][segments]\n-- style: `powerline` | `plain` | `diamond`\n-- powerline_symbol: `string`\n-- invert_powerline: `boolean`\n-- leading_diamond: `string`\n-- trailing_diamond: `string`\n-- foreground: `string` [color][colors]\n-- foreground_templates: `array` of `string` values\n-- background: `string` [color][colors]\n-- background_templates: `array` of `string` values\n-- properties: `array` of `Property`: `string`\n-\n-### Type\n-\n-Takes the `string` value referencing which segment logic it needs to run (see [segments][segments] for possible values).\n-\n-### Style\n-\n-Oh Hi! You made it to a really interesting part, great! Style defines how a prompt is rendered. Looking at the most prompt\n-themes out there, we identified 3 types. All of these require a different configuration and depending on the look\n-you want to achieve you might need to understand/use them all.\n-\n-#### Powerline\n-\n-What started it all for us. Makes use of a single symbol (`powerline_symbol`) to separate the segments. It takes the\n-background color of the previous segment (or transparent if none) and the foreground of the current one (or transparent\n-if we're at the last segment). Expects segments to have a colored background, else there little use for this one.\n-\n-#### Plain\n-\n-Simple. Colored text on a transparent background. Make sure to set `foreground` for maximum enjoyment.\n-Segments will be separated by empty spaces unless you specify `''` for the `prefix` and `postfix` settings for the segment.\n-\n-#### Diamond\n-\n-While Powerline works great with a single symbol, sometimes you want a segment to have a different start and end symbol.\n-Just like a diamond: `< my segment text >`. The difference between this and plain is that the diamond symbols take the\n-segment background as their foreground color.\n-\n-### Powerline symbol\n-\n-Text character to use when `\""style\"": \""powerline\""`.\n-\n-### Invert Powerline\n-\n-If `true` this swaps the foreground and background colors. Can be useful when the character you want does not exist\n-in the perfectly mirrored variant for example.\n-\n-### Leading diamond\n-\n-Text character to use at the start of the segment. Will take the background color of the segment as\n-its foreground color.\n-\n-### Trailing diamond\n-\n-Text character to use at the end of the segment. Will take the background color of the segment as its foreground color.\n-\n-### Foreground\n-\n-[Color][colors] to use as the segment text foreground color. Also supports transparency using the `transparent` keyword.\n-\n-### Foreground Templates\n-\n-Array if string templates to define the foreground color for the given Segment based on the Segment's Template Properties.\n-Under the hood this uses go's [text/template][go-text-template] feature extended with [sprig][sprig] and\n-offers a few standard properties to work with. For supported Segments, look for the **Template Properties** section in\n-the documentation.\n-\n-The following sample is based on the [AWS Segment][aws].\n-\n-```json\n-{\n-  \""type\"": \""aws\"",\n-  \""style\"": \""powerline\"",\n-  \""powerline_symbol\"": \""\\uE0B0\"",\n-  \""foreground\"": \""#ffffff\"",\n-  \""background\"": \""#111111\"",\n-  \""foreground_templates\"": [\n-    \""{{if contains \\\""default\\\"" .Profile}}#FFA400{{end}}\"",\n-    \""{{if contains \\\""jan\\\"" .Profile}}#f1184c{{end}}\""\n-  ],\n-  \""properties\"": {\n-    \""prefix\"": \"" \\uE7AD \""\n-  }\n-}\n-```\n-\n-The logic is as follows: when `background_templates` contains an array, we will check every template line until there's\n-one that returns a non-empty string. So, when the contents of `.Profile` contain the word `default`, the first template\n-returns `#FFA400` and that's the color that will be used. If it contains `jan`, it returns `#f1184c`. When none of the\n-templates returns a value, the foreground value `#ffffff` is used.\n-\n-### Background\n-\n-[Color][colors] to use as the segment text background color. Also supports transparency using the `transparent` keyword.\n-\n-### Background Templates\n-\n-Same as [Foreground Templates][fg-templ] but for the background color.\n-\n-### Properties\n-\n-An array of **Properties** with a value. This is used inside of the segment logic to tweak what the output of the segment\n-will be. Segments have the ability to define their own Properties, but there are some general ones being used by the\n-engine which allow you to customize the output even more.\n-\n-#### General-purpose properties\n-\n-You can use these on any segment, the engine is responsible for adding them correctly.\n-\n-- prefix: `string`\n-- postfix: `string`\n-- include_folders: `[]string`\n-- exclude_folders: `[]string`\n-\n-##### Prefix\n-\n-The string content will be put in front of the segment's output text. Useful for symbols, text or other customizations.\n-If this is not set, it will be an empty space in `plain` mode. If you want to remove the space before the segment,\n-specify this as `''`.\n-\n-##### Postfix\n-\n-The string content will be put after the segment's output text. Useful for symbols, text or other customizations.\n-If this is not set, it will default to an empty space in `plain` mode. If you want to remove the space after the segment,\n-specify this as `''`.\n-\n-##### Include / Exclude Folders\n-\n-Sometimes you might want to have a segment only rendered in certain folders. If `include_folders` is specified,\n-the segment will only be rendered when in one of those locations. If `exclude_folders` is specified, the segment\n-will not be rendered when in one of the excluded locations.\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects\""\n-]\n-```\n-\n-```json\n-\""exclude_folders\"": [\n-  \""/Users/posh/Projects\""\n-]\n-```\n-\n-The strings specified in these properties are evaluated as [regular expressions][regex]. You\n-can use any valid regular expression construct, but the regular expression must match the entire directory\n-name. The following will match `/Users/posh/Projects/Foo` but not `/home/Users/posh/Projects/Foo`.\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects.*\""\n-]\n-```\n-\n-You can also combine these properties:\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects.*\""\n-],\n-\""exclude_folders\"": [\n-  \""/Users/posh/Projects/secret-project.*\""\n-]\n-```\n-\n-##### Notes\n-\n-- Oh My Posh will accept both `/` and `\\` as path separators for a folder and will match regardless of which\n-is used by the current operating system.\n-- Because the strings are evaluated as regular expressions, if you want to use a `\\` in a Windows\n-directory name, you need to specify it as `\\\\\\\\`.\n-- The character `~` at the start of a specified folder will match the user's home directory.\n-- The comparison is case-insensitive on Windows and macOS, but case-sensitive on other operating systems.\n-\n-This means that for user Bill, who has a user account `Bill` on Windows and `bill` on Linux,  `~/Foo` might match\n-`C:\\Users\\Bill\\Foo` or `C:\\Users\\Bill\\foo` on Windows but only `/home/bill/Foo` on Linux.\n-\n-## Full Sample\n-\n-```json\n-{\n-  \""final_space\"": true,\n-  \""blocks\"": [\n-    {\n-      \""type\"": \""prompt\"",\n-      \""alignment\"": \""right\"",\n-      \""vertical_offset\"": -1,\n-      \""segments\"": [\n-        {\n-          \""type\"": \""time\"",\n-          \""style\"": \""plain\"",\n-          \""foreground\"": \""#007ACC\"",\n-          \""properties\"": {\n-            \""time_format\"": \""15:04:05\""\n-          }\n-        }\n-      ]\n-    },\n-    {\n-      \""type\"": \""prompt\"",\n-      \""alignment\"": \""left\"",\n-      \""newline\"": true,\n-      \""segments\"": [\n-        {\n-          \""type\"": \""session\"",\n-          \""style\"": \""diamond\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#ffb300\"",\n-          \""leading_diamond\"": \""\\uE0B6\"",\n-          \""trailing_diamond\"": \""\\uE0B0\"",\n-          \""properties\"": {\n-            \""postfix\"": \"" \""\n-          }\n-        },\n-        {\n-          \""type\"": \""path\"",\n-          \""style\"": \""powerline\"",\n-          \""powerline_symbol\"": \""\\uE0B0\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#61AFEF\"",\n-          \""properties\"": {\n-            \""prefix\"": \"" \\uE5FF \"",\n-            \""style\"": \""folder\"",\n-            \""exclude_folders\"": [\n-              \""/super/secret/project\""\n-            ],\n-            \""enable_hyperlink\"": false\n-          }\n-        },\n-        {\n-          \""type\"": \""git\"",\n-          \""style\"": \""powerline\"",\n-          \""foreground\"": \""#193549\"",\n-          \""foreground_templates\"": [\n-            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#ffffff{{ end }}\""\n-          ],\n-          \""background\"": \""#2e9599\"",\n-          \""background_templates\"": [\n-            \""{{ if or (.Working.Changed) (.Staging.Changed) }}#f36943{{ end }}\"",\n-            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#a8216b{{ end }}\"",\n-            \""{{ if gt .Ahead 0 }}#35b5ff{{ end }}\"",\n-            \""{{ if gt .Behind 0 }}#f89cfa{{ end }}\""\n-          ],\n-          \""powerline_symbol\"": \""\\uE0B0\"",\n-          \""properties\"": {\n-            \""fetch_status\"": true,\n-            \""branch_max_length\"": 25,\n-            \""template\"": \""{{ .HEAD }}{{ .BranchStatus }}\""\n-          }\n-        },\n-        {\n-          \""type\"": \""exit\"",\n-          \""style\"": \""diamond\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#00897b\"",\n-          \""background_templates\"": [\""{{ if gt .Code 0 }}#e91e63{{ end }}\""],\n-          \""leading_diamond\"": \""\"",\n-          \""trailing_diamond\"": \""\\uE0B4\"",\n-          \""properties\"": {\n-            \""always_enabled\"": true,\n-            \""template\"": \""\\uE23A\"",\n-            \""prefix\"": \""<parentBackground>\\uE0B0</> \""\n-          }\n-        }\n-      ]\n-    }\n-  ]\n-}\n-```\n-\n [releases]: https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest\n [font]: /docs/config-fonts\n [schema]: https://github.com/JanDeDobbeleer/oh-my-posh/blob/main/themes/schema.json\n [themes]: https://github.com/JanDeDobbeleer/oh-my-posh/tree/main/themes\n-[segments]: /docs/battery\n-[colors]: /docs/config-colors\n-[go-text-template]: https://golang.org/pkg/text/template/\n-[sprig]: https://masterminds.github.io/sprig/\n-[fg-templ]: /docs/config-overview#foreground-templates\n-[regex]: https://www.regular-expressions.info/tutorial.html\n-[aws]: /docs/aws\ndiff --git a/docs/docs/config-segment.md b/docs/docs/config-segment.md\nnew file mode 100644\nindex 0000000..08a66e4\n--- /dev/null\n+++ b/docs/docs/config-segment.md\n@@ -0,0 +1,219 @@\n+---\n+id: config-segment\n+title: Segment\n+sidebar_label: Segment\n+---\n+\n+A segment is a part of the prompt with a certain context. There are different types available out-of-the-box, if you're\n+looking for what's included, feel free to skip this part and browse through the [segments][segments]. Keep reading to\n+understand how to configure a segment.\n+\n+```json\n+{\n+  \""$schema\"": \""https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json\"",\n+  ...\n+  \""blocks\"": [\n+    {\n+      ...\n+      \""segments\"": [\n+        {\n+          \""type\"": \""path\"",\n+          \""style\"": \""powerline\"",\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#61AFEF\"",\n+          \""properties\"": {\n+            ...\n+          }\n+        }\n+      ]\n+    }\n+  ]\n+}\n+```\n+\n+- type: `string` any of the included [segments][segments]\n+- style: `powerline` | `plain` | `diamond`\n+- powerline_symbol: `string`\n+- invert_powerline: `boolean`\n+- leading_diamond: `string`\n+- trailing_diamond: `string`\n+- foreground: `string` [color][colors]\n+- foreground_templates: `array` of `string` values\n+- background: `string` [color][colors]\n+- background_templates: `array` of `string` values\n+- properties: `array` of `Property`: `string`\n+\n+## Type\n+\n+Takes the `string` value referencing which segment logic it needs to run (see [segments][segments] for possible values).\n+\n+## Style\n+\n+Oh Hi! You made it to a really interesting part, great! Style defines how a prompt is rendered. Looking at the most prompt\n+themes out there, we identified 3 types. All of these require a different configuration and depending on the look\n+you want to achieve you might need to understand/use them all.\n+\n+### Powerline\n+\n+What started it all for us. Makes use of a single symbol (`powerline_symbol`) to separate the segments. It takes the\n+background color of the previous segment (or transparent if none) and the foreground of the current one (or transparent\n+if we're at the last segment). Expects segments to have a colored background, else there little use for this one.\n+\n+### Plain\n+\n+Simple. Colored text on a transparent background. Make sure to set `foreground` for maximum enjoyment.\n+Segments will be separated by empty spaces unless you specify `''` for the `prefix` and `postfix` settings for the segment.\n+\n+### Diamond\n+\n+While Powerline works great with a single symbol, sometimes you want a segment to have a different start and end symbol.\n+Just like a diamond: `< my segment text >`. The difference between this and plain is that the diamond symbols take the\n+segment background as their foreground color.\n+\n+## Powerline symbol\n+\n+Text character to use when `\""style\"": \""powerline\""`.\n+\n+## Invert Powerline\n+\n+If `true` this swaps the foreground and background colors. Can be useful when the character you want does not exist\n+in the perfectly mirrored variant for example.\n+\n+## Leading diamond\n+\n+Text character to use at the start of the segment. Will take the background color of the segment as\n+its foreground color.\n+\n+## Trailing diamond\n+\n+Text character to use at the end of the segment. Will take the background color of the segment as its foreground color.\n+\n+## Foreground\n+\n+[Color][colors] to use as the segment text foreground color. Also supports transparency using the `transparent` keyword.\n+\n+## Foreground Templates\n+\n+Array if string templates to define the foreground color for the given Segment based on the Segment's Template Properties.\n+Under the hood this uses go's [text/template][go-text-template] feature extended with [sprig][sprig] and\n+offers a few standard properties to work with. For supported Segments, look for the **Template Properties** section in\n+the documentation.\n+\n+The following sample is based on the [AWS Segment][aws].\n+\n+```json\n+{\n+  \""type\"": \""aws\"",\n+  \""style\"": \""powerline\"",\n+  \""powerline_symbol\"": \""\\uE0B0\"",\n+  \""foreground\"": \""#ffffff\"",\n+  \""background\"": \""#111111\"",\n+  \""foreground_templates\"": [\n+    \""{{if contains \\\""default\\\"" .Profile}}#FFA400{{end}}\"",\n+    \""{{if contains \\\""jan\\\"" .Profile}}#f1184c{{end}}\""\n+  ],\n+  \""properties\"": {\n+    \""prefix\"": \"" \\uE7AD \""\n+  }\n+}\n+```\n+\n+The logic is as follows: when `background_templates` contains an array, we will check every template line until there's\n+one that returns a non-empty string. So, when the contents of `.Profile` contain the word `default`, the first template\n+returns `#FFA400` and that's the color that will be used. If it contains `jan`, it returns `#f1184c`. When none of the\n+templates returns a value, the foreground value `#ffffff` is used.\n+\n+## Background\n+\n+[Color][colors] to use as the segment text background color. Also supports transparency using the `transparent` keyword.\n+\n+## Background Templates\n+\n+Same as [Foreground Templates][fg-templ] but for the background color.\n+\n+## Properties\n+\n+An array of **Properties** with a value. This is used inside of the segment logic to tweak what the output of the segment\n+will be. Segments have the ability to define their own Properties, but there are some general ones being used by the\n+engine which allow you to customize the output even more.\n+\n+### General-purpose properties\n+\n+You can use these on any segment, the engine is responsible for adding them correctly.\n+\n+- prefix: `string`\n+- postfix: `string`\n+- include_folders: `[]string`\n+- exclude_folders: `[]string`\n+\n+#### Prefix\n+\n+The string content will be put in front of the segment's output text. Useful for symbols, text or other customizations.\n+If this is not set, it will be an empty space in `plain` mode. If you want to remove the space before the segment,\n+specify this as `''`.\n+\n+#### Postfix\n+\n+The string content will be put after the segment's output text. Useful for symbols, text or other customizations.\n+If this is not set, it will default to an empty space in `plain` mode. If you want to remove the space after the segment,\n+specify this as `''`.\n+\n+#### Include / Exclude Folders\n+\n+Sometimes you might want to have a segment only rendered in certain folders. If `include_folders` is specified,\n+the segment will only be rendered when in one of those locations. If `exclude_folders` is specified, the segment\n+will not be rendered when in one of the excluded locations.\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects\""\n+]\n+```\n+\n+```json\n+\""exclude_folders\"": [\n+  \""/Users/posh/Projects\""\n+]\n+```\n+\n+The strings specified in these properties are evaluated as [regular expressions][regex]. You\n+can use any valid regular expression construct, but the regular expression must match the entire directory\n+name. The following will match `/Users/posh/Projects/Foo` but not `/home/Users/posh/Projects/Foo`.\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects.*\""\n+]\n+```\n+\n+You can also combine these properties:\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects.*\""\n+],\n+\""exclude_folders\"": [\n+  \""/Users/posh/Projects/secret-project.*\""\n+]\n+```\n+\n+#### Notes\n+\n+- Oh My Posh will accept both `/` and `\\` as path separators for a folder and will match regardless of which\n+is used by the current operating system.\n+- Because the strings are evaluated as regular expressions, if you want to use a `\\` in a Windows\n+directory name, you need to specify it as `\\\\\\\\`.\n+- The character `~` at the start of a specified folder will match the user's home directory.\n+- The comparison is case-insensitive on Windows and macOS, but case-sensitive on other operating systems.\n+\n+This means that for user Bill, who has a user account `Bill` on Windows and `bill` on Linux,  `~/Foo` might match\n+`C:\\Users\\Bill\\Foo` or `C:\\Users\\Bill\\foo` on Windows but only `/home/bill/Foo` on Linux.\n+\n+[segments]: /docs/battery\n+[colors]: /docs/config-colors\n+[go-text-template]: https://golang.org/pkg/text/template/\n+[sprig]: https://masterminds.github.io/sprig/\n+[fg-templ]: /docs/config-overview#foreground-templates\n+[regex]: https://www.regular-expressions.info/tutorial.html\n+[aws]: /docs/aws\ndiff --git a/docs/docs/segment-environment.md b/docs/docs/segment-environment.md\nindex f35bc87..982a0a5 100644\n--- a/docs/docs/segment-environment.md\n+++ b/docs/docs/segment-environment.md\n@@ -34,7 +34,7 @@ New-Alias -Name 'Set-PoshContext' -Value 'Set-EnvVar' -Scope Global -Force\n \n The segment will show when the value of the environment variable isn't empty.\n \n-## Sample Configuration\n+## Sample *Configuration*\n \n ```json\n {\ndiff --git a/docs/sidebars.js b/docs/sidebars.js\nindex a75163e..8f151a2 100644\n--- a/docs/sidebars.js\n+++ b/docs/sidebars.js\n@@ -20,6 +20,9 @@ module.exports = {\n       label: \""\u2699\ufe0f Configuration\"",\n       items: [\n         \""config-overview\"",\n+        \""config-block\"",\n+        \""config-segment\"",\n+        \""config-sample\"",\n         \""config-title\"",\n         \""config-colors\"",\n         \""config-text-style\"",\n""]",3,"[""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""cb1f48b56ae0de93acb72e48726c7d610a1d538e""]","[""cicd"", ""fix"", ""docs""]"
"update flushed index before truncating,restructure ClusterTopology to track completed change,buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23","[""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n"", ""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n""]",3,"[""933ab6bb86372913c992567cf9660009900911a7"", ""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2"", ""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d""]","[""fix"", ""refactor"", ""feat""]"
"[gn win] link comctl32.lib to fix component build,support use meta key select multiple element,split release docs build into separate workflow","[""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n"", ""diff --git a/.github/workflows/ibis-docs-lint.yml b/.github/workflows/ibis-docs-lint.yml\nindex 753d57d..3e0aa15 100644\n--- a/.github/workflows/ibis-docs-lint.yml\n+++ b/.github/workflows/ibis-docs-lint.yml\n@@ -88,14 +88,14 @@ jobs:\n         run: poetry run pytest --benchmark-only --benchmark-json .benchmarks/output.json ibis/tests/benchmarks\n \n       - uses: tibdex/github-app-token@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         id: generate-token\n         with:\n           app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}\n           private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}\n \n       - uses: benchmark-action/github-action-benchmark@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         with:\n           tool: pytest\n           github-token: ${{ steps.generate-token.outputs.token }}\n@@ -107,6 +107,7 @@ jobs:\n \n   docs:\n     runs-on: ubuntu-latest\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n     needs:\n       # wait on benchmarks to prevent a race condition when pushing to the\n       # gh-pages branch\n@@ -124,51 +125,25 @@ jobs:\n           authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n           extraPullNames: nix-community,poetry2nix\n \n-      - name: Generate a GitHub token\n-        if: ${{ github.event_name == 'push' }}\n-        uses: tibdex/github-app-token@v1\n-        id: generate_token\n-        with:\n-          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n-          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n-\n-      - name: checkout\n-        if: ${{ github.event_name == 'push' }}\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          token: ${{ steps.generate_token.outputs.token }}\n-\n       - name: checkout\n-        if: ${{ github.event_name != 'push' }}\n         uses: actions/checkout@v3\n \n-      - name: Configure git info\n-        if: ${{ github.event_name == 'push' }}\n-        run: |\n-          set -euo pipefail\n-\n-          git config user.name 'ibis-docs-bot[bot]'\n-          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n-\n       - name: build docs\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c mkdocs build\n \n       - name: verify internal links\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c just checklinks --offline --no-progress\n \n-      - name: Pull gh-pages changes\n+      - name: Configure git info\n         if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n-          git fetch origin gh-pages\n-          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n \n       - name: build and push dev docs\n-        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/') }}\n+        if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n@@ -180,19 +155,6 @@ jobs:\n               --message 'docs(dev): ibis@${{ github.sha }}' \\\n                 dev\n \n-      - name: build and push docs on tag\n-        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}\n-        run: |\n-          set -euo pipefail\n-\n-          nix develop -f shell.nix --keep-going -c \\\n-            mic deploy \\\n-              --push \\\n-              --rebase \\\n-              --prefix docs \\\n-              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n-              \""${GITHUB_REF_NAME}\"" latest\n-\n   simulate_release:\n     runs-on: ubuntu-latest\n     steps:\ndiff --git a/.github/workflows/ibis-docs-release.yml b/.github/workflows/ibis-docs-release.yml\nnew file mode 100644\nindex 0000000..da7ee49\n--- /dev/null\n+++ b/.github/workflows/ibis-docs-release.yml\n@@ -0,0 +1,63 @@\n+# vim: filetype=yaml\n+name: Docs Release Build\n+\n+on:\n+  release:\n+    types:\n+      - published\n+jobs:\n+  docs:\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: install nix\n+        uses: cachix/install-nix-action@v17\n+        with:\n+          nix_path: nixpkgs=channel:nixos-unstable-small\n+\n+      - name: setup cachix\n+        uses: cachix/cachix-action@v10\n+        with:\n+          name: ibis\n+          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n+          extraPullNames: nix-community,poetry2nix\n+\n+      - name: Generate a GitHub token\n+        uses: tibdex/github-app-token@v1\n+        id: generate_token\n+        with:\n+          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n+          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n+\n+      - name: checkout\n+        uses: actions/checkout@v3\n+        with:\n+          fetch-depth: 0\n+          token: ${{ steps.generate_token.outputs.token }}\n+\n+      - name: Configure git info\n+        run: |\n+          set -euo pipefail\n+\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n+\n+      - name: Pull gh-pages changes\n+        run: |\n+          set -euo pipefail\n+\n+          git fetch origin gh-pages\n+          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+\n+      - name: build and push docs on tag\n+        run: |\n+          set -euo pipefail\n+\n+          nix develop -f shell.nix --keep-going -c \\\n+            mic deploy \\\n+              --push \\\n+              --rebase \\\n+              --update-aliases \\\n+              --prefix docs \\\n+              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n+              \""${GITHUB_REF_NAME}\"" latest\n""]",3,"[""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8"", ""32845e1bbd1efb5dbc16f671049509a409ba25ce""]","[""build"", ""feat"", ""cicd""]"
"do not use scripts and binaries from the libcc repo,add .nullif() example,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>","[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n""]",3,"[""45837af24a33308a70a3454f0f650f9fe728e272"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21"", ""f823cf28652987d43c8324b4f5b203240032383a""]","[""cicd"", ""docs"", ""feat""]"
"publish sdks after docs/build,Fix typo,fix build ordering","[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n"", ""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/scripts/build.mjs b/scripts/build.mjs\nindex 204854f..b3cf067 100644\n--- a/scripts/build.mjs\n+++ b/scripts/build.mjs\n@@ -3,8 +3,8 @@ import { write } from 'fsxx';\n import { info, success } from './helpers.mjs';\n \n await $`rm -rf dist/*`;\n-await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n await $`unbuild`;\n+await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n \n const packages = [\n   'jsx-runtime',\n""]",3,"[""6c9cb638cb4d1ecc42632fcf389c24898c5b3244"", ""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""c323d59c607cabc91f17a78528d998f376f30b10""]","[""cicd"", ""docs"", ""build""]"
"setup jest and add m.ts tests,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,print errors without stacktrace","[""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n"", ""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n""]",3,"[""229b53a632ea97d47c4be11f096bdd828fb415d8"", ""e12d9e77a6fd531a22325337838a841b1c67f00d"", ""d129eaf9125a967ac86c6c7276bbae6b4d50af36""]","[""test"", ""docs"", ""fix""]"
"add hardware back button

Closes #5071,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909,export a modal transition preset","[""diff --git a/ionic/components/app/app.ts b/ionic/components/app/app.ts\nindex 04d8c57..08aab92 100644\n--- a/ionic/components/app/app.ts\n+++ b/ionic/components/app/app.ts\n@@ -3,8 +3,7 @@ import {Title} from 'angular2/platform/browser';\n \n import {Config} from '../../config/config';\n import {ClickBlock} from '../../util/click-block';\n-import {Nav} from '../nav/nav';\n-import {Tabs} from '../tabs/tabs';\n+import {Platform} from '../../platform/platform';\n \n \n /**\n@@ -23,8 +22,20 @@ export class IonicApp {\n \n   constructor(\n     private _config: Config,\n-    private _clickBlock: ClickBlock\n-  ) {}\n+    private _clickBlock: ClickBlock,\n+    platform: Platform\n+  ) {\n+    platform.backButton.subscribe(() => {\n+      let activeNav = this.getActiveNav();\n+      if (activeNav) {\n+        if (activeNav.length() === 1) {\n+          platform.exitApp();\n+        } else {\n+          activeNav.pop();\n+        }\n+      }\n+    });\n+  }\n \n   /**\n    * Sets the document title.\n@@ -102,7 +113,7 @@ export class IonicApp {\n   /**\n    * @private\n    */\n-  getActiveNav(): Nav | Tabs {\n+  getActiveNav(): any {\n     var nav = this._rootNav || null;\n     var activeChildNav;\n \n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n"", ""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n""]",3,"[""68278b00450f2679761a2999500f6d87a579376b"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119"", ""535708ae50aecb452560a23356fd396f99ef13a2""]","[""feat"", ""docs"", ""refactor""]"
"update `cargo-make` for `v0.35.3`,publish sdks after docs/build,Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.","[""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n"", ""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n""]",3,"[""0cfc5633d37ea06f645649138323f1820e18bdee"", ""6c9cb638cb4d1ecc42632fcf389c24898c5b3244"", ""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3""]","[""docs"", ""cicd"", ""test""]"
"assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,update flushed index before truncating,cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.","[""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n"", ""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n""]",3,"[""1269431c8a3e7549f10fcbbb4b88ff625c8898b3"", ""933ab6bb86372913c992567cf9660009900911a7"", ""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7""]","[""build"", ""fix"", ""refactor""]"
"fixed docker link tests,update flushed index before truncating,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909","[""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n"", ""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n""]",3,"[""c7b25726df94a2530c9b1c0d2b6a0acaa103822f"", ""933ab6bb86372913c992567cf9660009900911a7"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119""]","[""test"", ""fix"", ""docs""]"
"updated react demo parcel command,make it mode less,use `regexp_instr != 0` instead of `REGEXP` keyword","[""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n"", ""diff --git a/core/src/components/slides/slides.tsx b/core/src/components/slides/slides.tsx\nindex 48fd53f..d5c2f75 100644\n--- a/core/src/components/slides/slides.tsx\n+++ b/core/src/components/slides/slides.tsx\n@@ -1,7 +1,6 @@\n import { Component, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n \n import { Mode } from '../../interface.js';\n-import { createThemedClasses } from '../../utils/theme.js';\n \n import { Swiper } from './vendor/swiper.js';\n \n@@ -15,6 +14,7 @@ import { Swiper } from './vendor/swiper.js';\n   shadow: true\n })\n export class Slides {\n+\n   private container!: HTMLElement;\n   private swiper: any;\n \n@@ -391,12 +391,6 @@ export class Slides {\n     return { ...swiperOptions, ...this.options, ...eventOptions };\n   }\n \n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'slides')\n-    };\n-  }\n-\n   render() {\n     return (\n       <div class=\""swiper-container\"" ref={el => this.container = el as HTMLElement }>\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.scss b/core/src/components/thumbnail/thumbnail.ios.scss\ndeleted file mode 100644\nindex e3add45..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.ios.vars\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-ios-width};\n-  --border-radius: #{$thumbnail-ios-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.vars.scss b/core/src/components/thumbnail/thumbnail.ios.vars.scss\ndeleted file mode 100644\nindex 85d53e5..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.ios\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-ios-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-ios-height:                  $thumbnail-ios-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-ios-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.md.scss b/core/src/components/thumbnail/thumbnail.md.scss\ndeleted file mode 100644\nindex 0fbb2ca..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.md.vars\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-md-width};\n-  --border-radius: #{$thumbnail-md-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.md.vars.scss b/core/src/components/thumbnail/thumbnail.md.vars.scss\ndeleted file mode 100644\nindex 94e48b2..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.md\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-md-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-md-height:                  $thumbnail-md-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-md-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.scss b/core/src/components/thumbnail/thumbnail.scss\nindex 8ac3a22..8af268d 100644\n--- a/core/src/components/thumbnail/thumbnail.scss\n+++ b/core/src/components/thumbnail/thumbnail.scss\n@@ -9,6 +9,8 @@\n    * @prop --border-radius: Border radius of the thumbnail\n    * @prop --size: Size of the thumbnail\n    */\n+  --size: 48px;\n+  --border-radius: 0;\n \n   @include border-radius(var(--border-radius));\n \ndiff --git a/core/src/components/thumbnail/thumbnail.tsx b/core/src/components/thumbnail/thumbnail.tsx\nindex 50ff2c2..de76593 100644\n--- a/core/src/components/thumbnail/thumbnail.tsx\n+++ b/core/src/components/thumbnail/thumbnail.tsx\n@@ -1,25 +1,11 @@\n import { Component } from '@stencil/core';\n \n-import { Mode } from '../../interface';\n-import { createThemedClasses } from '../../utils/theme';\n-\n @Component({\n   tag: 'ion-thumbnail',\n-  styleUrls: {\n-    ios: 'thumbnail.ios.scss',\n-    md: 'thumbnail.md.scss'\n-  },\n+  styleUrl: 'thumbnail.scss',\n   shadow: true\n })\n export class Thumbnail {\n-  mode!: Mode;\n-\n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'thumbnail')\n-    };\n-  }\n-\n   render() {\n     return <slot></slot>;\n   }\n"", ""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n""]",3,"[""32b92cfa0b74a6c25990e32ac6aab12b8496794c"", ""771857b1df9470ebc15357e8879118a72c649d5b"", ""06e2be4e2019b6fa714e1fcb34485860ef1ede79""]","[""build"", ""refactor"", ""fix""]"
"Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.,add comments for the Handler,[gn] fix include_dirs ordering error","[""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n"", ""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 11adaa7..ed64b17 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -240,6 +240,14 @@ static_library(\""electron_lib\"") {\n     \""brightray\"",\n     \""build/node\"",\n   ]\n+  include_dirs = [\n+    \""chromium_src\"",\n+    \"".\"",\n+    \""$target_gen_dir\"",\n+    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n+    # API of blink, then delete this include dir.\n+    \""//third_party/WebKit/Source\"",\n+  ]\n   if (enable_desktop_capturer) {\n     deps += [ \""//third_party/webrtc/modules/desktop_capture\"" ]\n   }\n@@ -275,14 +283,6 @@ static_library(\""electron_lib\"") {\n     # Disable warnings for g_settings_list_schemas.\n     \""GLIB_DISABLE_DEPRECATION_WARNINGS\"",\n   ]\n-  include_dirs = [\n-    \""chromium_src\"",\n-    \"".\"",\n-    \""$target_gen_dir\"",\n-    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n-    # API of blink, then delete this include dir.\n-    \""//third_party/WebKit/Source\"",\n-  ]\n   if (is_component_build) {\n     defines += [\n       # Import V8 symbols from shared library (node.dll / libnode.so)\n""]",3,"[""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3"", ""036a0ff49a7dade0e04c9c07071a1ff49133ee24"", ""c44cf88a6ec54e5ddd99d8348bcc57b301ec7945""]","[""test"", ""docs"", ""build""]"
"buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23,fixed docker link tests,export a modal transition preset","[""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n"", ""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n""]",3,"[""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f"", ""535708ae50aecb452560a23356fd396f99ef13a2""]","[""feat"", ""test"", ""refactor""]"
"add .nullif() example,add props to get color and label from a route,print errors without stacktrace","[""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n"", ""diff --git a/src/components/BottomNavigation.js b/src/components/BottomNavigation.js\nindex 1b72302..7d8ea75 100644\n--- a/src/components/BottomNavigation.js\n+++ b/src/components/BottomNavigation.js\n@@ -24,8 +24,8 @@ const AnimatedPaper = Animated.createAnimatedComponent(Paper);\n \n type Route = {\n   key: string,\n-  title: string,\n-  icon: IconSource,\n+  title?: string,\n+  icon?: IconSource,\n   color?: string,\n };\n \n@@ -51,7 +51,7 @@ type Props<T> = {\n    * - `key`: a unique key to identify the route\n    * - `title`: title of the route to use as the tab label\n    * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n-   * - `color`: color to use as background color for shifting bottom navigation (optional)\n+   * - `color`: color to use as background color for shifting bottom navigation\n    *\n    * Example:\n    *\n@@ -115,11 +115,27 @@ type Props<T> = {\n   /**\n    * Callback which returns a React Element to be used as tab icon.\n    */\n-  renderIcon?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderIcon?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n   /**\n    * Callback which React Element to be used as tab label.\n    */\n-  renderLabel?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderLabel?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n+  /**\n+   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n+   */\n+  getLabelText?: (props: { route: T }) => string,\n+  /**\n+   * Get color for the tab, uses `route.color` by default.\n+   */\n+  getColor?: (props: { route: T }) => string,\n   /**\n    * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n    */\n@@ -159,6 +175,10 @@ type State = {\n    */\n   ripple: Animated.Value,\n   /**\n+   * Animation for the touch feedback, used to determine it's scale and opacity.\n+   */\n+  touch: Animated.Value,\n+  /**\n    * Layout of the tab bar. The width is used to determine the size and position of the ripple.\n    */\n   layout: { height: number, width: number, measured: boolean },\n@@ -173,7 +193,7 @@ const MIN_SHIFT_AMOUNT = 10;\n const MIN_TAB_WIDTH = 96;\n const MAX_TAB_WIDTH = 168;\n const BAR_HEIGHT = 56;\n-const SMALL_RIPPLE_SIZE = 72;\n+const SMALL_RIPPLE_SIZE = 96;\n const ACTIVE_LABEL_SIZE = 14;\n const INACTIVE_LABEL_SIZE = 12;\n \n@@ -251,6 +271,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ),\n       index: new Animated.Value(index),\n       ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n+      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n       layout: { height: 0, width: 0, measured: false },\n       previous: 0,\n     };\n@@ -349,6 +370,15 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n   _handleTabPress = (index: number) => {\n     const { navigationState } = this.props;\n \n+    this.state.touch.setValue(MIN_RIPPLE_SCALE);\n+\n+    Animated.timing(this.state.touch, {\n+      toValue: 1,\n+      duration: 300,\n+      easing: Easing.in(Easing.sin),\n+      useNativeDriver: true,\n+    }).start();\n+\n     if (index !== navigationState.index) {\n       this.props.onIndexChange(index);\n     }\n@@ -376,6 +406,8 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       renderScene,\n       renderIcon,\n       renderLabel,\n+      getLabelText = ({ route }) => route.title,\n+      getColor = ({ route }) => route.color,\n       barStyle,\n       style,\n       theme,\n@@ -400,7 +432,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ? this.state.index.interpolate({\n           inputRange: routes.map((_, i) => i),\n           outputRange: routes.map(\n-            route => route.color || approxBackgroundColor\n+            route => getColor({ route }) || approxBackgroundColor\n           ),\n         })\n       : approxBackgroundColor;\n@@ -416,7 +448,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n           .rgb()\n           .string();\n \n-    const rippleColor = color(textColor)\n+    const touchColor = color(textColor)\n       .alpha(0.12)\n       .rgb()\n       .string();\n@@ -430,22 +462,10 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n \n     // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n     // We need to move it from the left to the active tab and also account for how much that tab has shifted.\n-    const rippleShift =\n-      navigationState.index * tabWidth +\n-      tabWidth / 2 +\n-      this._calculateShift(\n-        this.state.previous,\n-        navigationState.index,\n-        routes.length\n-      );\n \n     return (\n       <View\n-        style={[\n-          styles.container,\n-          { backgroundColor: theme.dark ? white : black },\n-          style,\n-        ]}\n+        style={[styles.container, style]}\n         onLayout={this._handleLayout}\n         pointerEvents={layout.measured ? 'auto' : 'none'}\n       >\n@@ -485,25 +505,30 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n             style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n           >\n             {shifting ? (\n-              // Large ripple with the backround color\n               <Animated.View\n                 pointerEvents=\""none\""\n                 style={[\n                   styles.ripple,\n                   {\n                     // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - layout.width / 2,\n-                    left: rippleShift - layout.width / 2,\n-                    height: layout.width,\n-                    width: layout.width,\n+                    top: BAR_HEIGHT / 2 - layout.width / 8,\n+                    left:\n+                      navigationState.index * tabWidth +\n+                      tabWidth / 2 -\n+                      layout.width / 8,\n+                    height: layout.width / 4,\n+                    width: layout.width / 4,\n                     borderRadius: layout.width / 2,\n-                    backgroundColor: routes[navigationState.index].color,\n+                    backgroundColor: getColor({\n+                      route: routes[navigationState.index],\n+                    }),\n                     transform: [\n+                      { translateX: this.state.shifts[navigationState.index] },\n                       {\n                         // Scale to twice the size  to ensure it covers the whole tab bar\n                         scale: this.state.ripple.interpolate({\n                           inputRange: [0, 1],\n-                          outputRange: [0, 2],\n+                          outputRange: [0, 8],\n                         }),\n                       },\n                     ],\n@@ -515,36 +540,36 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                 ]}\n               />\n             ) : null}\n-            {shifting ? (\n-              // Small subtle ripple on touch\n-              <Animated.View\n-                pointerEvents=\""none\""\n-                style={[\n-                  styles.ripple,\n-                  {\n-                    // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n-                    left: rippleShift - SMALL_RIPPLE_SIZE / 2,\n-                    height: SMALL_RIPPLE_SIZE,\n-                    width: SMALL_RIPPLE_SIZE,\n-                    borderRadius: SMALL_RIPPLE_SIZE / 2,\n-                    backgroundColor: rippleColor,\n-                    transform: [\n-                      {\n-                        scale: this.state.ripple.interpolate({\n-                          inputRange: [0, 0.5, 1],\n-                          outputRange: [0, 1, 1],\n-                        }),\n-                      },\n-                    ],\n-                    opacity: this.state.ripple.interpolate({\n-                      inputRange: [0, MIN_RIPPLE_SCALE, 0.25, 0.5],\n-                      outputRange: [0, 0, 1, 0],\n-                    }),\n-                  },\n-                ]}\n-              />\n-            ) : null}\n+            <Animated.View\n+              pointerEvents=\""none\""\n+              style={[\n+                styles.ripple,\n+                {\n+                  // Set top and left values so that the ripple's center is same as the tab's center\n+                  top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n+                  left:\n+                    navigationState.index * tabWidth +\n+                    tabWidth / 2 -\n+                    SMALL_RIPPLE_SIZE / 2,\n+                  height: SMALL_RIPPLE_SIZE,\n+                  width: SMALL_RIPPLE_SIZE,\n+                  borderRadius: SMALL_RIPPLE_SIZE / 2,\n+                  backgroundColor: touchColor,\n+                  transform: [\n+                    {\n+                      translateX: shifting\n+                        ? this.state.shifts[navigationState.index]\n+                        : 0,\n+                    },\n+                    { scale: this.state.touch },\n+                  ],\n+                  opacity: this.state.touch.interpolate({\n+                    inputRange: [0, 0.5, 1],\n+                    outputRange: [0, 1, 0],\n+                  }),\n+                },\n+              ]}\n+            />\n             {routes.map((route, index) => {\n               const shift = this.state.shifts[index];\n               const focused = this.state.tabs[index];\n@@ -607,7 +632,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderIcon ? (\n-                          renderIcon({ route, focused: true })\n+                          renderIcon({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <Icon\n                             style={styles.icon}\n@@ -625,7 +654,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderIcon ? (\n-                            renderIcon({ route, focused: false })\n+                            renderIcon({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <Icon\n                               style={styles.icon}\n@@ -652,7 +685,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderLabel ? (\n-                          renderLabel({ route, focused: true })\n+                          renderLabel({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <AnimatedText\n                             style={[\n@@ -662,7 +699,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                               },\n                             ]}\n                           >\n-                            {route.title}\n+                            {getLabelText({ route })}\n                           </AnimatedText>\n                         )}\n                       </Animated.View>\n@@ -674,7 +711,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderLabel ? (\n-                            renderLabel({ route, focused: false })\n+                            renderLabel({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <AnimatedText\n                               style={[\n@@ -684,7 +725,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                                 },\n                               ]}\n                             >\n-                              {route.title}\n+                              {getLabelText({ route })}\n                             </AnimatedText>\n                           )}\n                         </Animated.View>\n"", ""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n""]",3,"[""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21"", ""ded26d768ff432ad3bde3c0aa1e95ce50726100a"", ""d129eaf9125a967ac86c6c7276bbae6b4d50af36""]","[""docs"", ""feat"", ""fix""]"
"increment failing test retries,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909,autostart feature fixed","[""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n""]",3,"[""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119"", ""bed78248c941d57ad4cc20a455147e186e97c7a1""]","[""cicd"", ""docs"", ""fix""]"
"remove ubuntu-latest from job title where that is the only os,added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,print errors without stacktrace","[""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n"", ""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n""]",3,"[""74e9de5ec97dc013a52aa063dff0f40ac74c407b"", ""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""d129eaf9125a967ac86c6c7276bbae6b4d50af36""]","[""cicd"", ""docs"", ""fix""]"
"fixed docker link tests,autostart feature fixed,spring version, core version","[""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n"", ""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n""]",3,"[""c7b25726df94a2530c9b1c0d2b6a0acaa103822f"", ""bed78248c941d57ad4cc20a455147e186e97c7a1"", ""c55591ba157298a9c5816693c102a89dfd058830""]","[""test"", ""fix"", ""build""]"
"licensing,increment failing test retries,autostart feature fixed","[""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n""]",3,"[""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57"", ""bed78248c941d57ad4cc20a455147e186e97c7a1""]","[""docs"", ""cicd"", ""fix""]"
"fix netty dependency

netty-bom 4.1.70 contains the changes from pull request
https://github.com/netty/netty/pull/11798, which moved the classes out
of the native modules to make sure the same classes don't end up on the
classpath multiple times. For us it means that we need to depend on both
the native and classes modules. However, since we don't use the native
module directly (only classes that were moved to this classes module),
we need to force the dependency plugin to consider the native module as
used.,publish sdks after docs/build,fixed docker link tests","[""diff --git a/atomix/cluster/pom.xml b/atomix/cluster/pom.xml\nindex a477873..b6db695 100644\n--- a/atomix/cluster/pom.xml\n+++ b/atomix/cluster/pom.xml\n@@ -69,6 +69,10 @@\n     </dependency>\n     <dependency>\n       <groupId>io.netty</groupId>\n+      <artifactId>netty-transport-classes-epoll</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.netty</groupId>\n       <artifactId>netty-transport-native-epoll</artifactId>\n       <classifier>linux-x86_64</classifier>\n     </dependency>\n@@ -278,6 +282,7 @@\n             <dependency>uk.co.real-logic:sbe-tool</dependency>\n             <dependency>net.jqwik:jqwik</dependency>\n             <dependency>io.netty:netty-tcnative-boringssl-static</dependency>\n+            <dependency>io.netty:netty-transport-native-epoll</dependency>\n           </usedDependencies>\n         </configuration>\n       </plugin>\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n""]",3,"[""f00a4d3e307b89842250358ee432e6800bb24362"", ""6c9cb638cb4d1ecc42632fcf389c24898c5b3244"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f""]","[""build"", ""cicd"", ""test""]"
"added suported tuple types,add getter for protocol id,allow disabling dynamic queue","[""diff --git a/src/List/Tuple.ts b/src/List/Tuple.ts\nindex 4c59caa..6e45503 100644\n--- a/src/List/Tuple.ts\n+++ b/src/List/Tuple.ts\n@@ -1,15 +1,17 @@\n-/** A [[Tuple]]\n+import {NonNullable} from '../Object/NonNullable'\n+\n+/** A [[Tuple]] (supported)\n  * @param A its type\n- * @returns **`any[]`**\n+ * @returns **`A[]`**\n  * @example\n  * ```ts\n- * type list0 = [1, 2, 3]\n- * type list1 = number[]\n+ * type tuple0 = [1, 20, 42]\n+ * type tuple1 = ['at', 420]\n  * ```\n  */\n-export type Tuple = [\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-]\n+export type Tuple<A = any> = NonNullable<[\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+]>\n"", ""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n"", ""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n""]",3,"[""2954a0955ce9af6acb345ed1e8328e145ad30475"", ""dc5238b2bda98a7c4f2fe9584fc3b0191a408109"", ""9ef5c0d14193a9abb09b39856f58477d1f4b0d77""]","[""refactor"", ""feat"", ""fix""]"
"run pyspark tests in parallel,Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.,use `regexp_instr != 0` instead of `REGEXP` keyword","[""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex e23088e..9708157 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -202,11 +202,11 @@ jobs:\n         run: poetry install --without dev --without docs --extras ${{ matrix.backend.name }} --extras geospatial\n \n       - name: \""run parallel tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name != 'pyspark' && matrix.backend.name != 'impala'\n+        if: matrix.backend.name != 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }} --numprocesses auto --dist=loadgroup\n \n       - name: \""run serial tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name == 'pyspark' || matrix.backend.name == 'impala'\n+        if: matrix.backend.name == 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }}\n         env:\n           IBIS_TEST_NN_HOST: localhost\n"", ""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n"", ""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n""]",3,"[""4cbbd2552ba0de273e1dfe7d453c5b3efed751a3"", ""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3"", ""06e2be4e2019b6fa714e1fcb34485860ef1ede79""]","[""cicd"", ""test"", ""fix""]"
"detach ViewControllers when not active,convert `run_tag_values_test_case` to a function,docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>","[""diff --git a/ionic/components/nav/nav-controller.ts b/ionic/components/nav/nav-controller.ts\nindex becdd99..1cc3c31 100644\n--- a/ionic/components/nav/nav-controller.ts\n+++ b/ionic/components/nav/nav-controller.ts\n@@ -1410,6 +1410,9 @@ export class NavController extends Ion {\n       // set the ComponentRef's instance to this ViewController\n       view.setInstance(component);\n \n+      // remember the ChangeDetectorRef for this ViewController\n+      view.setChangeDetector(hostViewRef.changeDetectorRef);\n+\n       // remember the ElementRef to the ion-page elementRef that was just created\n       view.setPageRef(pageElementRef);\n \ndiff --git a/ionic/components/nav/view-controller.ts b/ionic/components/nav/view-controller.ts\nindex 3207fa2..069c74d 100644\n--- a/ionic/components/nav/view-controller.ts\n+++ b/ionic/components/nav/view-controller.ts\n@@ -1,4 +1,4 @@\n-import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer} from 'angular2/core';\n+import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer, ChangeDetectorRef} from 'angular2/core';\n \n import {Navbar} from '../navbar/navbar';\n import {NavController, NavOptions} from './nav-controller';\n@@ -33,6 +33,7 @@ export class ViewController {\n   private _nbVwRef: ViewContainerRef;\n   private _onDismiss: Function = null;\n   private _pgRef: ElementRef;\n+  private _cd: ChangeDetectorRef;\n   protected _nav: NavController;\n \n   /**\n@@ -166,6 +167,13 @@ export class ViewController {\n   /**\n    * @private\n    */\n+  setChangeDetector(cd: ChangeDetectorRef) {\n+    this._cd = cd;\n+  }\n+\n+  /**\n+   * @private\n+   */\n   setInstance(instance: any) {\n     this.instance = instance;\n   }\n@@ -467,6 +475,14 @@ export class ViewController {\n    * The view is about to enter and become the active view.\n    */\n   willEnter() {\n+    if (this._cd) {\n+      // ensure this has been re-attached to the change detector\n+      this._cd.reattach();\n+\n+      // detect changes before we run any user code\n+      this._cd.detectChanges();\n+    }\n+\n     ctrlFn(this, 'onPageWillEnter');\n   }\n \n@@ -496,6 +512,10 @@ export class ViewController {\n    */\n   didLeave() {\n     ctrlFn(this, 'onPageDidLeave');\n+\n+    // when this is not the active page\n+    // we no longer need to detect changes\n+    this._cd && this._cd.detach();\n   }\n \n   /**\n"", ""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n"", ""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n""]",3,"[""b282e90e2cbb74559aab79eee8443a4d7c85502a"", ""1db13ec43727aca872a0f3836e4023ed85db665e"", ""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf""]","[""feat"", ""refactor"", ""build""]"
"print errors without stacktrace,enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>,add riscv64gc-unknown-linux-gnu","[""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n"", ""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n""]",3,"[""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""fd8e563cc19ca4684885d4692acee6bebcca4ada"", ""173553c0372e66e03bdab19e0e6c2dd44daa14a0""]","[""fix"", ""feat"", ""cicd""]"
"add comments for the Handler,add fallible peek_last_token(),setup jest and add m.ts tests","[""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n"", ""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n""]",3,"[""036a0ff49a7dade0e04c9c07071a1ff49133ee24"", ""63eab619e6166eb6cab948028a7b89bf059dd878"", ""229b53a632ea97d47c4be11f096bdd828fb415d8""]","[""docs"", ""refactor"", ""test""]"
"fixed docker link tests,split release docs build into separate workflow,detach ViewControllers when not active","[""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n"", ""diff --git a/.github/workflows/ibis-docs-lint.yml b/.github/workflows/ibis-docs-lint.yml\nindex 753d57d..3e0aa15 100644\n--- a/.github/workflows/ibis-docs-lint.yml\n+++ b/.github/workflows/ibis-docs-lint.yml\n@@ -88,14 +88,14 @@ jobs:\n         run: poetry run pytest --benchmark-only --benchmark-json .benchmarks/output.json ibis/tests/benchmarks\n \n       - uses: tibdex/github-app-token@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         id: generate-token\n         with:\n           app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}\n           private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}\n \n       - uses: benchmark-action/github-action-benchmark@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         with:\n           tool: pytest\n           github-token: ${{ steps.generate-token.outputs.token }}\n@@ -107,6 +107,7 @@ jobs:\n \n   docs:\n     runs-on: ubuntu-latest\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n     needs:\n       # wait on benchmarks to prevent a race condition when pushing to the\n       # gh-pages branch\n@@ -124,51 +125,25 @@ jobs:\n           authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n           extraPullNames: nix-community,poetry2nix\n \n-      - name: Generate a GitHub token\n-        if: ${{ github.event_name == 'push' }}\n-        uses: tibdex/github-app-token@v1\n-        id: generate_token\n-        with:\n-          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n-          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n-\n-      - name: checkout\n-        if: ${{ github.event_name == 'push' }}\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          token: ${{ steps.generate_token.outputs.token }}\n-\n       - name: checkout\n-        if: ${{ github.event_name != 'push' }}\n         uses: actions/checkout@v3\n \n-      - name: Configure git info\n-        if: ${{ github.event_name == 'push' }}\n-        run: |\n-          set -euo pipefail\n-\n-          git config user.name 'ibis-docs-bot[bot]'\n-          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n-\n       - name: build docs\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c mkdocs build\n \n       - name: verify internal links\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c just checklinks --offline --no-progress\n \n-      - name: Pull gh-pages changes\n+      - name: Configure git info\n         if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n-          git fetch origin gh-pages\n-          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n \n       - name: build and push dev docs\n-        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/') }}\n+        if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n@@ -180,19 +155,6 @@ jobs:\n               --message 'docs(dev): ibis@${{ github.sha }}' \\\n                 dev\n \n-      - name: build and push docs on tag\n-        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}\n-        run: |\n-          set -euo pipefail\n-\n-          nix develop -f shell.nix --keep-going -c \\\n-            mic deploy \\\n-              --push \\\n-              --rebase \\\n-              --prefix docs \\\n-              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n-              \""${GITHUB_REF_NAME}\"" latest\n-\n   simulate_release:\n     runs-on: ubuntu-latest\n     steps:\ndiff --git a/.github/workflows/ibis-docs-release.yml b/.github/workflows/ibis-docs-release.yml\nnew file mode 100644\nindex 0000000..da7ee49\n--- /dev/null\n+++ b/.github/workflows/ibis-docs-release.yml\n@@ -0,0 +1,63 @@\n+# vim: filetype=yaml\n+name: Docs Release Build\n+\n+on:\n+  release:\n+    types:\n+      - published\n+jobs:\n+  docs:\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: install nix\n+        uses: cachix/install-nix-action@v17\n+        with:\n+          nix_path: nixpkgs=channel:nixos-unstable-small\n+\n+      - name: setup cachix\n+        uses: cachix/cachix-action@v10\n+        with:\n+          name: ibis\n+          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n+          extraPullNames: nix-community,poetry2nix\n+\n+      - name: Generate a GitHub token\n+        uses: tibdex/github-app-token@v1\n+        id: generate_token\n+        with:\n+          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n+          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n+\n+      - name: checkout\n+        uses: actions/checkout@v3\n+        with:\n+          fetch-depth: 0\n+          token: ${{ steps.generate_token.outputs.token }}\n+\n+      - name: Configure git info\n+        run: |\n+          set -euo pipefail\n+\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n+\n+      - name: Pull gh-pages changes\n+        run: |\n+          set -euo pipefail\n+\n+          git fetch origin gh-pages\n+          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+\n+      - name: build and push docs on tag\n+        run: |\n+          set -euo pipefail\n+\n+          nix develop -f shell.nix --keep-going -c \\\n+            mic deploy \\\n+              --push \\\n+              --rebase \\\n+              --update-aliases \\\n+              --prefix docs \\\n+              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n+              \""${GITHUB_REF_NAME}\"" latest\n"", ""diff --git a/ionic/components/nav/nav-controller.ts b/ionic/components/nav/nav-controller.ts\nindex becdd99..1cc3c31 100644\n--- a/ionic/components/nav/nav-controller.ts\n+++ b/ionic/components/nav/nav-controller.ts\n@@ -1410,6 +1410,9 @@ export class NavController extends Ion {\n       // set the ComponentRef's instance to this ViewController\n       view.setInstance(component);\n \n+      // remember the ChangeDetectorRef for this ViewController\n+      view.setChangeDetector(hostViewRef.changeDetectorRef);\n+\n       // remember the ElementRef to the ion-page elementRef that was just created\n       view.setPageRef(pageElementRef);\n \ndiff --git a/ionic/components/nav/view-controller.ts b/ionic/components/nav/view-controller.ts\nindex 3207fa2..069c74d 100644\n--- a/ionic/components/nav/view-controller.ts\n+++ b/ionic/components/nav/view-controller.ts\n@@ -1,4 +1,4 @@\n-import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer} from 'angular2/core';\n+import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer, ChangeDetectorRef} from 'angular2/core';\n \n import {Navbar} from '../navbar/navbar';\n import {NavController, NavOptions} from './nav-controller';\n@@ -33,6 +33,7 @@ export class ViewController {\n   private _nbVwRef: ViewContainerRef;\n   private _onDismiss: Function = null;\n   private _pgRef: ElementRef;\n+  private _cd: ChangeDetectorRef;\n   protected _nav: NavController;\n \n   /**\n@@ -166,6 +167,13 @@ export class ViewController {\n   /**\n    * @private\n    */\n+  setChangeDetector(cd: ChangeDetectorRef) {\n+    this._cd = cd;\n+  }\n+\n+  /**\n+   * @private\n+   */\n   setInstance(instance: any) {\n     this.instance = instance;\n   }\n@@ -467,6 +475,14 @@ export class ViewController {\n    * The view is about to enter and become the active view.\n    */\n   willEnter() {\n+    if (this._cd) {\n+      // ensure this has been re-attached to the change detector\n+      this._cd.reattach();\n+\n+      // detect changes before we run any user code\n+      this._cd.detectChanges();\n+    }\n+\n     ctrlFn(this, 'onPageWillEnter');\n   }\n \n@@ -496,6 +512,10 @@ export class ViewController {\n    */\n   didLeave() {\n     ctrlFn(this, 'onPageDidLeave');\n+\n+    // when this is not the active page\n+    // we no longer need to detect changes\n+    this._cd && this._cd.detach();\n   }\n \n   /**\n""]",3,"[""c7b25726df94a2530c9b1c0d2b6a0acaa103822f"", ""32845e1bbd1efb5dbc16f671049509a409ba25ce"", ""b282e90e2cbb74559aab79eee8443a4d7c85502a""]","[""test"", ""cicd"", ""feat""]"
"add numberOfLines prop to DataTableTitle (#863)

Closes #848,[gn win] link comctl32.lib to fix component build,cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.","[""diff --git a/src/components/DataTable/DataTableTitle.js b/src/components/DataTable/DataTableTitle.js\nindex bfcf07e..d764fd5 100644\n--- a/src/components/DataTable/DataTableTitle.js\n+++ b/src/components/DataTable/DataTableTitle.js\n@@ -27,6 +27,10 @@ type Props = React.ElementConfig<typeof TouchableWithoutFeedback> & {|\n    */\n   sortDirection?: 'ascending' | 'descending',\n   /**\n+   * The number of lines to show.\n+   */\n+  numberOfLines?: number,\n+  /**\n    * Function to execute on press.\n    */\n   onPress?: () => mixed,\n@@ -44,6 +48,10 @@ type State = {\n class DataTableTitle extends React.Component<Props, State> {\n   static displayName = 'DataTable.Title';\n \n+  static defaultProps = {\n+    numberOfLines: 1,\n+  };\n+\n   state = {\n     spinAnim: new Animated.Value(\n       this.props.sortDirection === 'ascending' ? 0 : 1\n@@ -70,6 +78,7 @@ class DataTableTitle extends React.Component<Props, State> {\n       sortDirection,\n       theme,\n       style,\n+      numberOfLines,\n       ...rest\n     } = this.props;\n \n@@ -99,7 +108,7 @@ class DataTableTitle extends React.Component<Props, State> {\n               styles.cell,\n               sortDirection ? styles.sorted : { color: textColor },\n             ]}\n-            numberOfLines={1}\n+            numberOfLines={numberOfLines}\n           >\n             {children}\n           </Text>\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n""]",3,"[""f9a094918b62534614c47aa8a13f33aec751a1e0"", ""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7""]","[""feat"", ""build"", ""refactor""]"
"support use meta key select multiple element,docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>","[""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n"", ""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n""]",3,"[""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8"", ""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf"", ""e12d9e77a6fd531a22325337838a841b1c67f00d""]","[""feat"", ""build"", ""docs""]"
"fix netty dependency

netty-bom 4.1.70 contains the changes from pull request
https://github.com/netty/netty/pull/11798, which moved the classes out
of the native modules to make sure the same classes don't end up on the
classpath multiple times. For us it means that we need to depend on both
the native and classes modules. However, since we don't use the native
module directly (only classes that were moved to this classes module),
we need to force the dependency plugin to consider the native module as
used.,cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.,run pyspark tests in parallel","[""diff --git a/atomix/cluster/pom.xml b/atomix/cluster/pom.xml\nindex a477873..b6db695 100644\n--- a/atomix/cluster/pom.xml\n+++ b/atomix/cluster/pom.xml\n@@ -69,6 +69,10 @@\n     </dependency>\n     <dependency>\n       <groupId>io.netty</groupId>\n+      <artifactId>netty-transport-classes-epoll</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.netty</groupId>\n       <artifactId>netty-transport-native-epoll</artifactId>\n       <classifier>linux-x86_64</classifier>\n     </dependency>\n@@ -278,6 +282,7 @@\n             <dependency>uk.co.real-logic:sbe-tool</dependency>\n             <dependency>net.jqwik:jqwik</dependency>\n             <dependency>io.netty:netty-tcnative-boringssl-static</dependency>\n+            <dependency>io.netty:netty-transport-native-epoll</dependency>\n           </usedDependencies>\n         </configuration>\n       </plugin>\n"", ""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex e23088e..9708157 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -202,11 +202,11 @@ jobs:\n         run: poetry install --without dev --without docs --extras ${{ matrix.backend.name }} --extras geospatial\n \n       - name: \""run parallel tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name != 'pyspark' && matrix.backend.name != 'impala'\n+        if: matrix.backend.name != 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }} --numprocesses auto --dist=loadgroup\n \n       - name: \""run serial tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name == 'pyspark' || matrix.backend.name == 'impala'\n+        if: matrix.backend.name == 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }}\n         env:\n           IBIS_TEST_NN_HOST: localhost\n""]",3,"[""f00a4d3e307b89842250358ee432e6800bb24362"", ""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7"", ""4cbbd2552ba0de273e1dfe7d453c5b3efed751a3""]","[""build"", ""refactor"", ""cicd""]"
"better layout for block and segment,add remote [skip ci],upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.","[""diff --git a/docs/docs/config-block.md b/docs/docs/config-block.md\nnew file mode 100644\nindex 0000000..df1ee54\n--- /dev/null\n+++ b/docs/docs/config-block.md\n@@ -0,0 +1,60 @@\n+---\n+id: config-block\n+title: Block\n+sidebar_label: Block\n+---\n+\n+Let's take a closer look at what defines a block.\n+\n+```json\n+{\n+  \""$schema\"": \""https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json\"",\n+  ...\n+  \""blocks\"": [\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""left\"",\n+      \""segments\"": [\n+        ...\n+      ]\n+    }\n+  ]\n+}\n+```\n+\n+- type: `prompt` | `rprompt`\n+- newline: `boolean`\n+- alignment: `left` | `right`\n+- vertical_offset: `int`\n+- horizontal_offset: `int`\n+- segments: `array` of one or more `segments`\n+\n+### Type\n+\n+Tells the engine what to do with the block. There are three options:\n+\n+- `prompt` renders one or more segments\n+- `rprompt` renders one or more segments aligned to the right of the cursor. Only one `rprompt` block is permitted.\n+Supported on [ZSH][rprompt], Bash and Powershell.\n+\n+### Newline\n+\n+Start the block on a new line. Defaults to `false`.\n+\n+### Alignment\n+\n+Tell the engine if the block should be left or right-aligned.\n+\n+### Vertical offset\n+\n+Move the block up or down x lines. For example, `vertical_offset: 1` moves the prompt down one line, `vertical_offset: -1`\n+moves it up one line.\n+\n+### Horizontal offset\n+\n+Moves the segment to the left or the right to have it exactly where you want it to be. Works like `vertical_offset`\n+but on a horizontal level where a negative number moves the block left and a positive number right.\n+\n+### Segments\n+\n+Array of one or more segments.\ndiff --git a/docs/docs/config-example.md b/docs/docs/config-example.md\nnew file mode 100644\nindex 0000000..c180c4f\n--- /dev/null\n+++ b/docs/docs/config-example.md\n@@ -0,0 +1,96 @@\n+---\n+id: config-sample\n+title: Sample\n+sidebar_label: Sample\n+---\n+\n+```json\n+{\n+  \""final_space\"": true,\n+  \""blocks\"": [\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""right\"",\n+      \""vertical_offset\"": -1,\n+      \""segments\"": [\n+        {\n+          \""type\"": \""time\"",\n+          \""style\"": \""plain\"",\n+          \""foreground\"": \""#007ACC\"",\n+          \""properties\"": {\n+            \""time_format\"": \""15:04:05\""\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""left\"",\n+      \""newline\"": true,\n+      \""segments\"": [\n+        {\n+          \""type\"": \""session\"",\n+          \""style\"": \""diamond\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#ffb300\"",\n+          \""leading_diamond\"": \""\\uE0B6\"",\n+          \""trailing_diamond\"": \""\\uE0B0\"",\n+          \""properties\"": {\n+            \""postfix\"": \"" \""\n+          }\n+        },\n+        {\n+          \""type\"": \""path\"",\n+          \""style\"": \""powerline\"",\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#61AFEF\"",\n+          \""properties\"": {\n+            \""prefix\"": \"" \\uE5FF \"",\n+            \""style\"": \""folder\"",\n+            \""exclude_folders\"": [\n+              \""/super/secret/project\""\n+            ],\n+            \""enable_hyperlink\"": false\n+          }\n+        },\n+        {\n+          \""type\"": \""git\"",\n+          \""style\"": \""powerline\"",\n+          \""foreground\"": \""#193549\"",\n+          \""foreground_templates\"": [\n+            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#ffffff{{ end }}\""\n+          ],\n+          \""background\"": \""#2e9599\"",\n+          \""background_templates\"": [\n+            \""{{ if or (.Working.Changed) (.Staging.Changed) }}#f36943{{ end }}\"",\n+            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#a8216b{{ end }}\"",\n+            \""{{ if gt .Ahead 0 }}#35b5ff{{ end }}\"",\n+            \""{{ if gt .Behind 0 }}#f89cfa{{ end }}\""\n+          ],\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""properties\"": {\n+            \""fetch_status\"": true,\n+            \""branch_max_length\"": 25,\n+            \""template\"": \""{{ .HEAD }}{{ .BranchStatus }}\""\n+          }\n+        },\n+        {\n+          \""type\"": \""exit\"",\n+          \""style\"": \""diamond\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#00897b\"",\n+          \""background_templates\"": [\""{{ if gt .Code 0 }}#e91e63{{ end }}\""],\n+          \""leading_diamond\"": \""\"",\n+          \""trailing_diamond\"": \""\\uE0B4\"",\n+          \""properties\"": {\n+            \""always_enabled\"": true,\n+            \""template\"": \""\\uE23A\"",\n+            \""prefix\"": \""<parentBackground>\\uE0B0</> \""\n+          }\n+        }\n+      ]\n+    }\n+  ]\n+}\n+```\ndiff --git a/docs/docs/config-overview.md b/docs/docs/config-overview.md\nindex 1fdbcba..b554869 100644\n--- a/docs/docs/config-overview.md\n+++ b/docs/docs/config-overview.md\n@@ -1,7 +1,7 @@\n ---\n id: config-overview\n-title: Overview\n-sidebar_label: Overview\n+title: General\n+sidebar_label: General\n ---\n \n Oh My Posh renders your prompt based on the definition of _blocks_ (like Lego) which contain one or more _segments_.\n@@ -64,332 +64,7 @@ boxes with question marks, set up your terminal to use a [supported font][font] \n - terminal_background: `string` [color][colors] - terminal background color, set to your terminal's background color when\n you notice black elements in Windows Terminal or the Visual Studio Code integrated terminal\n \n-## Block\n-\n-Let's take a closer look at what defines a block.\n-\n-- type: `prompt` | `rprompt`\n-- newline: `boolean`\n-- alignment: `left` | `right`\n-- vertical_offset: `int`\n-- horizontal_offset: `int`\n-- segments: `array` of one or more `segments`\n-\n-### Type\n-\n-Tells the engine what to do with the block. There are three options:\n-\n-- `prompt` renders one or more segments\n-- `rprompt` renders one or more segments aligned to the right of the cursor. Only one `rprompt` block is permitted.\n-Supported on [ZSH][rprompt], Bash and Powershell.\n-\n-### Newline\n-\n-Start the block on a new line. Defaults to `false`.\n-\n-### Alignment\n-\n-Tell the engine if the block should be left or right-aligned.\n-\n-### Vertical offset\n-\n-Move the block up or down x lines. For example, `vertical_offset: 1` moves the prompt down one line, `vertical_offset: -1`\n-moves it up one line.\n-\n-### Horizontal offset\n-\n-Moves the segment to the left or the right to have it exactly where you want it to be. Works like `vertical_offset`\n-but on a horizontal level where a negative number moves the block left and a positive number right.\n-\n-### Segments\n-\n-Array of one or more segments.\n-\n-## Segment\n-\n-A segment is a part of the prompt with a certain context. There are different types available out-of-the-box, if you're\n-looking for what's included, feel free to skip this part and browse through the [segments][segments]. Keep reading to\n-understand how to configure a segment.\n-\n-- type: `string` any of the included [segments][segments]\n-- style: `powerline` | `plain` | `diamond`\n-- powerline_symbol: `string`\n-- invert_powerline: `boolean`\n-- leading_diamond: `string`\n-- trailing_diamond: `string`\n-- foreground: `string` [color][colors]\n-- foreground_templates: `array` of `string` values\n-- background: `string` [color][colors]\n-- background_templates: `array` of `string` values\n-- properties: `array` of `Property`: `string`\n-\n-### Type\n-\n-Takes the `string` value referencing which segment logic it needs to run (see [segments][segments] for possible values).\n-\n-### Style\n-\n-Oh Hi! You made it to a really interesting part, great! Style defines how a prompt is rendered. Looking at the most prompt\n-themes out there, we identified 3 types. All of these require a different configuration and depending on the look\n-you want to achieve you might need to understand/use them all.\n-\n-#### Powerline\n-\n-What started it all for us. Makes use of a single symbol (`powerline_symbol`) to separate the segments. It takes the\n-background color of the previous segment (or transparent if none) and the foreground of the current one (or transparent\n-if we're at the last segment). Expects segments to have a colored background, else there little use for this one.\n-\n-#### Plain\n-\n-Simple. Colored text on a transparent background. Make sure to set `foreground` for maximum enjoyment.\n-Segments will be separated by empty spaces unless you specify `''` for the `prefix` and `postfix` settings for the segment.\n-\n-#### Diamond\n-\n-While Powerline works great with a single symbol, sometimes you want a segment to have a different start and end symbol.\n-Just like a diamond: `< my segment text >`. The difference between this and plain is that the diamond symbols take the\n-segment background as their foreground color.\n-\n-### Powerline symbol\n-\n-Text character to use when `\""style\"": \""powerline\""`.\n-\n-### Invert Powerline\n-\n-If `true` this swaps the foreground and background colors. Can be useful when the character you want does not exist\n-in the perfectly mirrored variant for example.\n-\n-### Leading diamond\n-\n-Text character to use at the start of the segment. Will take the background color of the segment as\n-its foreground color.\n-\n-### Trailing diamond\n-\n-Text character to use at the end of the segment. Will take the background color of the segment as its foreground color.\n-\n-### Foreground\n-\n-[Color][colors] to use as the segment text foreground color. Also supports transparency using the `transparent` keyword.\n-\n-### Foreground Templates\n-\n-Array if string templates to define the foreground color for the given Segment based on the Segment's Template Properties.\n-Under the hood this uses go's [text/template][go-text-template] feature extended with [sprig][sprig] and\n-offers a few standard properties to work with. For supported Segments, look for the **Template Properties** section in\n-the documentation.\n-\n-The following sample is based on the [AWS Segment][aws].\n-\n-```json\n-{\n-  \""type\"": \""aws\"",\n-  \""style\"": \""powerline\"",\n-  \""powerline_symbol\"": \""\\uE0B0\"",\n-  \""foreground\"": \""#ffffff\"",\n-  \""background\"": \""#111111\"",\n-  \""foreground_templates\"": [\n-    \""{{if contains \\\""default\\\"" .Profile}}#FFA400{{end}}\"",\n-    \""{{if contains \\\""jan\\\"" .Profile}}#f1184c{{end}}\""\n-  ],\n-  \""properties\"": {\n-    \""prefix\"": \"" \\uE7AD \""\n-  }\n-}\n-```\n-\n-The logic is as follows: when `background_templates` contains an array, we will check every template line until there's\n-one that returns a non-empty string. So, when the contents of `.Profile` contain the word `default`, the first template\n-returns `#FFA400` and that's the color that will be used. If it contains `jan`, it returns `#f1184c`. When none of the\n-templates returns a value, the foreground value `#ffffff` is used.\n-\n-### Background\n-\n-[Color][colors] to use as the segment text background color. Also supports transparency using the `transparent` keyword.\n-\n-### Background Templates\n-\n-Same as [Foreground Templates][fg-templ] but for the background color.\n-\n-### Properties\n-\n-An array of **Properties** with a value. This is used inside of the segment logic to tweak what the output of the segment\n-will be. Segments have the ability to define their own Properties, but there are some general ones being used by the\n-engine which allow you to customize the output even more.\n-\n-#### General-purpose properties\n-\n-You can use these on any segment, the engine is responsible for adding them correctly.\n-\n-- prefix: `string`\n-- postfix: `string`\n-- include_folders: `[]string`\n-- exclude_folders: `[]string`\n-\n-##### Prefix\n-\n-The string content will be put in front of the segment's output text. Useful for symbols, text or other customizations.\n-If this is not set, it will be an empty space in `plain` mode. If you want to remove the space before the segment,\n-specify this as `''`.\n-\n-##### Postfix\n-\n-The string content will be put after the segment's output text. Useful for symbols, text or other customizations.\n-If this is not set, it will default to an empty space in `plain` mode. If you want to remove the space after the segment,\n-specify this as `''`.\n-\n-##### Include / Exclude Folders\n-\n-Sometimes you might want to have a segment only rendered in certain folders. If `include_folders` is specified,\n-the segment will only be rendered when in one of those locations. If `exclude_folders` is specified, the segment\n-will not be rendered when in one of the excluded locations.\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects\""\n-]\n-```\n-\n-```json\n-\""exclude_folders\"": [\n-  \""/Users/posh/Projects\""\n-]\n-```\n-\n-The strings specified in these properties are evaluated as [regular expressions][regex]. You\n-can use any valid regular expression construct, but the regular expression must match the entire directory\n-name. The following will match `/Users/posh/Projects/Foo` but not `/home/Users/posh/Projects/Foo`.\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects.*\""\n-]\n-```\n-\n-You can also combine these properties:\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects.*\""\n-],\n-\""exclude_folders\"": [\n-  \""/Users/posh/Projects/secret-project.*\""\n-]\n-```\n-\n-##### Notes\n-\n-- Oh My Posh will accept both `/` and `\\` as path separators for a folder and will match regardless of which\n-is used by the current operating system.\n-- Because the strings are evaluated as regular expressions, if you want to use a `\\` in a Windows\n-directory name, you need to specify it as `\\\\\\\\`.\n-- The character `~` at the start of a specified folder will match the user's home directory.\n-- The comparison is case-insensitive on Windows and macOS, but case-sensitive on other operating systems.\n-\n-This means that for user Bill, who has a user account `Bill` on Windows and `bill` on Linux,  `~/Foo` might match\n-`C:\\Users\\Bill\\Foo` or `C:\\Users\\Bill\\foo` on Windows but only `/home/bill/Foo` on Linux.\n-\n-## Full Sample\n-\n-```json\n-{\n-  \""final_space\"": true,\n-  \""blocks\"": [\n-    {\n-      \""type\"": \""prompt\"",\n-      \""alignment\"": \""right\"",\n-      \""vertical_offset\"": -1,\n-      \""segments\"": [\n-        {\n-          \""type\"": \""time\"",\n-          \""style\"": \""plain\"",\n-          \""foreground\"": \""#007ACC\"",\n-          \""properties\"": {\n-            \""time_format\"": \""15:04:05\""\n-          }\n-        }\n-      ]\n-    },\n-    {\n-      \""type\"": \""prompt\"",\n-      \""alignment\"": \""left\"",\n-      \""newline\"": true,\n-      \""segments\"": [\n-        {\n-          \""type\"": \""session\"",\n-          \""style\"": \""diamond\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#ffb300\"",\n-          \""leading_diamond\"": \""\\uE0B6\"",\n-          \""trailing_diamond\"": \""\\uE0B0\"",\n-          \""properties\"": {\n-            \""postfix\"": \"" \""\n-          }\n-        },\n-        {\n-          \""type\"": \""path\"",\n-          \""style\"": \""powerline\"",\n-          \""powerline_symbol\"": \""\\uE0B0\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#61AFEF\"",\n-          \""properties\"": {\n-            \""prefix\"": \"" \\uE5FF \"",\n-            \""style\"": \""folder\"",\n-            \""exclude_folders\"": [\n-              \""/super/secret/project\""\n-            ],\n-            \""enable_hyperlink\"": false\n-          }\n-        },\n-        {\n-          \""type\"": \""git\"",\n-          \""style\"": \""powerline\"",\n-          \""foreground\"": \""#193549\"",\n-          \""foreground_templates\"": [\n-            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#ffffff{{ end }}\""\n-          ],\n-          \""background\"": \""#2e9599\"",\n-          \""background_templates\"": [\n-            \""{{ if or (.Working.Changed) (.Staging.Changed) }}#f36943{{ end }}\"",\n-            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#a8216b{{ end }}\"",\n-            \""{{ if gt .Ahead 0 }}#35b5ff{{ end }}\"",\n-            \""{{ if gt .Behind 0 }}#f89cfa{{ end }}\""\n-          ],\n-          \""powerline_symbol\"": \""\\uE0B0\"",\n-          \""properties\"": {\n-            \""fetch_status\"": true,\n-            \""branch_max_length\"": 25,\n-            \""template\"": \""{{ .HEAD }}{{ .BranchStatus }}\""\n-          }\n-        },\n-        {\n-          \""type\"": \""exit\"",\n-          \""style\"": \""diamond\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#00897b\"",\n-          \""background_templates\"": [\""{{ if gt .Code 0 }}#e91e63{{ end }}\""],\n-          \""leading_diamond\"": \""\"",\n-          \""trailing_diamond\"": \""\\uE0B4\"",\n-          \""properties\"": {\n-            \""always_enabled\"": true,\n-            \""template\"": \""\\uE23A\"",\n-            \""prefix\"": \""<parentBackground>\\uE0B0</> \""\n-          }\n-        }\n-      ]\n-    }\n-  ]\n-}\n-```\n-\n [releases]: https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest\n [font]: /docs/config-fonts\n [schema]: https://github.com/JanDeDobbeleer/oh-my-posh/blob/main/themes/schema.json\n [themes]: https://github.com/JanDeDobbeleer/oh-my-posh/tree/main/themes\n-[segments]: /docs/battery\n-[colors]: /docs/config-colors\n-[go-text-template]: https://golang.org/pkg/text/template/\n-[sprig]: https://masterminds.github.io/sprig/\n-[fg-templ]: /docs/config-overview#foreground-templates\n-[regex]: https://www.regular-expressions.info/tutorial.html\n-[aws]: /docs/aws\ndiff --git a/docs/docs/config-segment.md b/docs/docs/config-segment.md\nnew file mode 100644\nindex 0000000..08a66e4\n--- /dev/null\n+++ b/docs/docs/config-segment.md\n@@ -0,0 +1,219 @@\n+---\n+id: config-segment\n+title: Segment\n+sidebar_label: Segment\n+---\n+\n+A segment is a part of the prompt with a certain context. There are different types available out-of-the-box, if you're\n+looking for what's included, feel free to skip this part and browse through the [segments][segments]. Keep reading to\n+understand how to configure a segment.\n+\n+```json\n+{\n+  \""$schema\"": \""https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json\"",\n+  ...\n+  \""blocks\"": [\n+    {\n+      ...\n+      \""segments\"": [\n+        {\n+          \""type\"": \""path\"",\n+          \""style\"": \""powerline\"",\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#61AFEF\"",\n+          \""properties\"": {\n+            ...\n+          }\n+        }\n+      ]\n+    }\n+  ]\n+}\n+```\n+\n+- type: `string` any of the included [segments][segments]\n+- style: `powerline` | `plain` | `diamond`\n+- powerline_symbol: `string`\n+- invert_powerline: `boolean`\n+- leading_diamond: `string`\n+- trailing_diamond: `string`\n+- foreground: `string` [color][colors]\n+- foreground_templates: `array` of `string` values\n+- background: `string` [color][colors]\n+- background_templates: `array` of `string` values\n+- properties: `array` of `Property`: `string`\n+\n+## Type\n+\n+Takes the `string` value referencing which segment logic it needs to run (see [segments][segments] for possible values).\n+\n+## Style\n+\n+Oh Hi! You made it to a really interesting part, great! Style defines how a prompt is rendered. Looking at the most prompt\n+themes out there, we identified 3 types. All of these require a different configuration and depending on the look\n+you want to achieve you might need to understand/use them all.\n+\n+### Powerline\n+\n+What started it all for us. Makes use of a single symbol (`powerline_symbol`) to separate the segments. It takes the\n+background color of the previous segment (or transparent if none) and the foreground of the current one (or transparent\n+if we're at the last segment). Expects segments to have a colored background, else there little use for this one.\n+\n+### Plain\n+\n+Simple. Colored text on a transparent background. Make sure to set `foreground` for maximum enjoyment.\n+Segments will be separated by empty spaces unless you specify `''` for the `prefix` and `postfix` settings for the segment.\n+\n+### Diamond\n+\n+While Powerline works great with a single symbol, sometimes you want a segment to have a different start and end symbol.\n+Just like a diamond: `< my segment text >`. The difference between this and plain is that the diamond symbols take the\n+segment background as their foreground color.\n+\n+## Powerline symbol\n+\n+Text character to use when `\""style\"": \""powerline\""`.\n+\n+## Invert Powerline\n+\n+If `true` this swaps the foreground and background colors. Can be useful when the character you want does not exist\n+in the perfectly mirrored variant for example.\n+\n+## Leading diamond\n+\n+Text character to use at the start of the segment. Will take the background color of the segment as\n+its foreground color.\n+\n+## Trailing diamond\n+\n+Text character to use at the end of the segment. Will take the background color of the segment as its foreground color.\n+\n+## Foreground\n+\n+[Color][colors] to use as the segment text foreground color. Also supports transparency using the `transparent` keyword.\n+\n+## Foreground Templates\n+\n+Array if string templates to define the foreground color for the given Segment based on the Segment's Template Properties.\n+Under the hood this uses go's [text/template][go-text-template] feature extended with [sprig][sprig] and\n+offers a few standard properties to work with. For supported Segments, look for the **Template Properties** section in\n+the documentation.\n+\n+The following sample is based on the [AWS Segment][aws].\n+\n+```json\n+{\n+  \""type\"": \""aws\"",\n+  \""style\"": \""powerline\"",\n+  \""powerline_symbol\"": \""\\uE0B0\"",\n+  \""foreground\"": \""#ffffff\"",\n+  \""background\"": \""#111111\"",\n+  \""foreground_templates\"": [\n+    \""{{if contains \\\""default\\\"" .Profile}}#FFA400{{end}}\"",\n+    \""{{if contains \\\""jan\\\"" .Profile}}#f1184c{{end}}\""\n+  ],\n+  \""properties\"": {\n+    \""prefix\"": \"" \\uE7AD \""\n+  }\n+}\n+```\n+\n+The logic is as follows: when `background_templates` contains an array, we will check every template line until there's\n+one that returns a non-empty string. So, when the contents of `.Profile` contain the word `default`, the first template\n+returns `#FFA400` and that's the color that will be used. If it contains `jan`, it returns `#f1184c`. When none of the\n+templates returns a value, the foreground value `#ffffff` is used.\n+\n+## Background\n+\n+[Color][colors] to use as the segment text background color. Also supports transparency using the `transparent` keyword.\n+\n+## Background Templates\n+\n+Same as [Foreground Templates][fg-templ] but for the background color.\n+\n+## Properties\n+\n+An array of **Properties** with a value. This is used inside of the segment logic to tweak what the output of the segment\n+will be. Segments have the ability to define their own Properties, but there are some general ones being used by the\n+engine which allow you to customize the output even more.\n+\n+### General-purpose properties\n+\n+You can use these on any segment, the engine is responsible for adding them correctly.\n+\n+- prefix: `string`\n+- postfix: `string`\n+- include_folders: `[]string`\n+- exclude_folders: `[]string`\n+\n+#### Prefix\n+\n+The string content will be put in front of the segment's output text. Useful for symbols, text or other customizations.\n+If this is not set, it will be an empty space in `plain` mode. If you want to remove the space before the segment,\n+specify this as `''`.\n+\n+#### Postfix\n+\n+The string content will be put after the segment's output text. Useful for symbols, text or other customizations.\n+If this is not set, it will default to an empty space in `plain` mode. If you want to remove the space after the segment,\n+specify this as `''`.\n+\n+#### Include / Exclude Folders\n+\n+Sometimes you might want to have a segment only rendered in certain folders. If `include_folders` is specified,\n+the segment will only be rendered when in one of those locations. If `exclude_folders` is specified, the segment\n+will not be rendered when in one of the excluded locations.\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects\""\n+]\n+```\n+\n+```json\n+\""exclude_folders\"": [\n+  \""/Users/posh/Projects\""\n+]\n+```\n+\n+The strings specified in these properties are evaluated as [regular expressions][regex]. You\n+can use any valid regular expression construct, but the regular expression must match the entire directory\n+name. The following will match `/Users/posh/Projects/Foo` but not `/home/Users/posh/Projects/Foo`.\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects.*\""\n+]\n+```\n+\n+You can also combine these properties:\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects.*\""\n+],\n+\""exclude_folders\"": [\n+  \""/Users/posh/Projects/secret-project.*\""\n+]\n+```\n+\n+#### Notes\n+\n+- Oh My Posh will accept both `/` and `\\` as path separators for a folder and will match regardless of which\n+is used by the current operating system.\n+- Because the strings are evaluated as regular expressions, if you want to use a `\\` in a Windows\n+directory name, you need to specify it as `\\\\\\\\`.\n+- The character `~` at the start of a specified folder will match the user's home directory.\n+- The comparison is case-insensitive on Windows and macOS, but case-sensitive on other operating systems.\n+\n+This means that for user Bill, who has a user account `Bill` on Windows and `bill` on Linux,  `~/Foo` might match\n+`C:\\Users\\Bill\\Foo` or `C:\\Users\\Bill\\foo` on Windows but only `/home/bill/Foo` on Linux.\n+\n+[segments]: /docs/battery\n+[colors]: /docs/config-colors\n+[go-text-template]: https://golang.org/pkg/text/template/\n+[sprig]: https://masterminds.github.io/sprig/\n+[fg-templ]: /docs/config-overview#foreground-templates\n+[regex]: https://www.regular-expressions.info/tutorial.html\n+[aws]: /docs/aws\ndiff --git a/docs/docs/segment-environment.md b/docs/docs/segment-environment.md\nindex f35bc87..982a0a5 100644\n--- a/docs/docs/segment-environment.md\n+++ b/docs/docs/segment-environment.md\n@@ -34,7 +34,7 @@ New-Alias -Name 'Set-PoshContext' -Value 'Set-EnvVar' -Scope Global -Force\n \n The segment will show when the value of the environment variable isn't empty.\n \n-## Sample Configuration\n+## Sample *Configuration*\n \n ```json\n {\ndiff --git a/docs/sidebars.js b/docs/sidebars.js\nindex a75163e..8f151a2 100644\n--- a/docs/sidebars.js\n+++ b/docs/sidebars.js\n@@ -20,6 +20,9 @@ module.exports = {\n       label: \""\u2699\ufe0f Configuration\"",\n       items: [\n         \""config-overview\"",\n+        \""config-block\"",\n+        \""config-segment\"",\n+        \""config-sample\"",\n         \""config-title\"",\n         \""config-colors\"",\n         \""config-text-style\"",\n"", ""diff --git a/.github/workflows/ibis-rebase-nightly.yml b/.github/workflows/ibis-rebase-nightly.yml\nindex 06c9003..e19c703 100644\n--- a/.github/workflows/ibis-rebase-nightly.yml\n+++ b/.github/workflows/ibis-rebase-nightly.yml\n@@ -47,7 +47,10 @@ jobs:\n           git config --global user.email 'ibis-squawk-bot[bot]@users.noreply.github.com'\n \n       - name: fetch and rebase on top of upstream\n-        run: git pull --rebase -X ours https://github.com/ibis-project/ibis master\n+        run: |\n+          git remote add upstream https://github.com/ibis-project/ibis\n+          git fetch upstream\n+          git rebase -X ours upstream/master\n \n       - uses: tibdex/github-app-token@v1\n         id: generate_pr_token\n"", ""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n""]",3,"[""cb1f48b56ae0de93acb72e48726c7d610a1d538e"", ""e96487ad7ce90b141219d9032fa2bed68d5dae6a"", ""454003841aabeb74396d73541378bfa59c75b5db""]","[""docs"", ""cicd"", ""build""]"
"print errors without stacktrace,skip flaky test,assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>","[""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/test/browser-pool/browser-pool.test.ts b/test/browser-pool/browser-pool.test.ts\nindex 9f21322..7a011b5 100644\n--- a/test/browser-pool/browser-pool.test.ts\n+++ b/test/browser-pool/browser-pool.test.ts\n@@ -128,7 +128,8 @@ describe.each([\n             expect(page.close).toBeDefined();\n         });\n \n-        test('should allow early aborting in case of outer timeout', async () => {\n+        // TODO: this test is very flaky in the CI\n+        test.skip('should allow early aborting in case of outer timeout', async () => {\n             const timeout = browserPool.operationTimeoutMillis;\n             browserPool.operationTimeoutMillis = 500;\n             // @ts-expect-error mocking private method\n"", ""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n""]",3,"[""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""e2e8ad25854bd1e7cdbc7f50b50bbd99e04ad47d"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3""]","[""fix"", ""test"", ""build""]"
"added suported tuple types,licensing,detach ViewControllers when not active","[""diff --git a/src/List/Tuple.ts b/src/List/Tuple.ts\nindex 4c59caa..6e45503 100644\n--- a/src/List/Tuple.ts\n+++ b/src/List/Tuple.ts\n@@ -1,15 +1,17 @@\n-/** A [[Tuple]]\n+import {NonNullable} from '../Object/NonNullable'\n+\n+/** A [[Tuple]] (supported)\n  * @param A its type\n- * @returns **`any[]`**\n+ * @returns **`A[]`**\n  * @example\n  * ```ts\n- * type list0 = [1, 2, 3]\n- * type list1 = number[]\n+ * type tuple0 = [1, 20, 42]\n+ * type tuple1 = ['at', 420]\n  * ```\n  */\n-export type Tuple = [\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-]\n+export type Tuple<A = any> = NonNullable<[\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+]>\n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/ionic/components/nav/nav-controller.ts b/ionic/components/nav/nav-controller.ts\nindex becdd99..1cc3c31 100644\n--- a/ionic/components/nav/nav-controller.ts\n+++ b/ionic/components/nav/nav-controller.ts\n@@ -1410,6 +1410,9 @@ export class NavController extends Ion {\n       // set the ComponentRef's instance to this ViewController\n       view.setInstance(component);\n \n+      // remember the ChangeDetectorRef for this ViewController\n+      view.setChangeDetector(hostViewRef.changeDetectorRef);\n+\n       // remember the ElementRef to the ion-page elementRef that was just created\n       view.setPageRef(pageElementRef);\n \ndiff --git a/ionic/components/nav/view-controller.ts b/ionic/components/nav/view-controller.ts\nindex 3207fa2..069c74d 100644\n--- a/ionic/components/nav/view-controller.ts\n+++ b/ionic/components/nav/view-controller.ts\n@@ -1,4 +1,4 @@\n-import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer} from 'angular2/core';\n+import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer, ChangeDetectorRef} from 'angular2/core';\n \n import {Navbar} from '../navbar/navbar';\n import {NavController, NavOptions} from './nav-controller';\n@@ -33,6 +33,7 @@ export class ViewController {\n   private _nbVwRef: ViewContainerRef;\n   private _onDismiss: Function = null;\n   private _pgRef: ElementRef;\n+  private _cd: ChangeDetectorRef;\n   protected _nav: NavController;\n \n   /**\n@@ -166,6 +167,13 @@ export class ViewController {\n   /**\n    * @private\n    */\n+  setChangeDetector(cd: ChangeDetectorRef) {\n+    this._cd = cd;\n+  }\n+\n+  /**\n+   * @private\n+   */\n   setInstance(instance: any) {\n     this.instance = instance;\n   }\n@@ -467,6 +475,14 @@ export class ViewController {\n    * The view is about to enter and become the active view.\n    */\n   willEnter() {\n+    if (this._cd) {\n+      // ensure this has been re-attached to the change detector\n+      this._cd.reattach();\n+\n+      // detect changes before we run any user code\n+      this._cd.detectChanges();\n+    }\n+\n     ctrlFn(this, 'onPageWillEnter');\n   }\n \n@@ -496,6 +512,10 @@ export class ViewController {\n    */\n   didLeave() {\n     ctrlFn(this, 'onPageDidLeave');\n+\n+    // when this is not the active page\n+    // we no longer need to detect changes\n+    this._cd && this._cd.detach();\n   }\n \n   /**\n""]",3,"[""2954a0955ce9af6acb345ed1e8328e145ad30475"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""b282e90e2cbb74559aab79eee8443a4d7c85502a""]","[""refactor"", ""docs"", ""feat""]"
"update `cargo-make` for `v0.35.3`,convert `run_tag_values_test_case` to a function,xfail on to_parquet and to_csv that use pyarrow write options","[""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n"", ""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n"", ""diff --git a/ibis/backends/tests/test_export.py b/ibis/backends/tests/test_export.py\nindex 4d536d7..5bb9775 100644\n--- a/ibis/backends/tests/test_export.py\n+++ b/ibis/backends/tests/test_export.py\n@@ -222,18 +222,23 @@ def test_table_to_parquet(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\""), [({\""version\"": \""1.0\""}), ({\""version\"": \""2.6\""})])\n-def test_table_to_parquet_writer_kwargs(kwargs, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.NotSupportedError,\n+)\n+@pytest.mark.parametrize(\""version\"", [\""1.0\"", \""2.6\""])\n+def test_table_to_parquet_writer_kwargs(version, tmp_path, backend, awards_players):\n     outparquet = tmp_path / \""out.parquet\""\n-    awards_players.to_parquet(outparquet, **kwargs)\n+    awards_players.to_parquet(outparquet, version=version)\n \n     df = pd.read_parquet(outparquet)\n \n     backend.assert_frame_equal(awards_players.to_pandas(), df)\n \n-    file = pa.parquet.ParquetFile(outparquet)\n+    md = pa.parquet.read_metadata(outparquet)\n \n-    assert file.metadata.format_version == kwargs[\""version\""]\n+    assert md.format_version == version\n \n \n @pytest.mark.notimpl(\n@@ -316,14 +321,20 @@ def test_table_to_csv(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\"", \""delimiter\""), [({\""write_options\"": pcsv.WriteOptions(delimiter=\"";\"")}, \"";\""), ({\""write_options\"": pcsv.WriteOptions(delimiter=\""\\t\"")}, \""\\t\"")])\n-def test_table_to_csv_writer_kwargs(kwargs, delimiter, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.ProgrammingError,\n+)\n+@pytest.mark.parametrize(\""delimiter\"", [\"";\"", \""\\t\""], ids=[\""semicolon\"", \""tab\""])\n+def test_table_to_csv_writer_kwargs(delimiter, tmp_path, awards_players):\n     outcsv = tmp_path / \""out.csv\""\n     # avoid pandas NaNonense\n     awards_players = awards_players.select(\""playerID\"", \""awardID\"", \""yearID\"", \""lgID\"")\n \n-    awards_players.to_csv(outcsv, **kwargs)\n-    pd.read_csv(outcsv, delimiter=delimiter)\n+    awards_players.to_csv(outcsv, write_options=pcsv.WriteOptions(delimiter=delimiter))\n+    df = pd.read_csv(outcsv, delimiter=delimiter, nrows=1)\n+    assert len(df) == 1\n \n \n @pytest.mark.parametrize(\n""]",3,"[""0cfc5633d37ea06f645649138323f1820e18bdee"", ""1db13ec43727aca872a0f3836e4023ed85db665e"", ""bedc7950b24c37809e36a585b7985d5aa5e3e458""]","[""docs"", ""refactor"", ""test""]"
"update flushed index before truncating,update `cargo-make` for `v0.35.3`,fixed docker link tests","[""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n""]",3,"[""933ab6bb86372913c992567cf9660009900911a7"", ""0cfc5633d37ea06f645649138323f1820e18bdee"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f""]","[""fix"", ""docs"", ""test""]"
"cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.,publish sdks after docs/build,setup jest and add m.ts tests","[""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n""]",3,"[""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7"", ""6c9cb638cb4d1ecc42632fcf389c24898c5b3244"", ""229b53a632ea97d47c4be11f096bdd828fb415d8""]","[""refactor"", ""cicd"", ""test""]"
"add a branch name to Slack notifications (#14793),setup jest and add m.ts tests,added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284","[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n"", ""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n""]",3,"[""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da"", ""229b53a632ea97d47c4be11f096bdd828fb415d8"", ""aca23027da1295c78fdf42ba9687d8ccc88784d7""]","[""cicd"", ""test"", ""docs""]"
"Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>,update `cargo-make` for `v0.35.3`,allow disabling dynamic queue","[""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n"", ""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n"", ""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n""]",3,"[""f823cf28652987d43c8324b4f5b203240032383a"", ""0cfc5633d37ea06f645649138323f1820e18bdee"", ""9ef5c0d14193a9abb09b39856f58477d1f4b0d77""]","[""feat"", ""docs"", ""fix""]"
"update wrapping tests for v7,use `regexp_instr != 0` instead of `REGEXP` keyword,spring version, core version","[""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n"", ""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n""]",3,"[""317f4eefecddfb1392ca71d551840f446feee302"", ""06e2be4e2019b6fa714e1fcb34485860ef1ede79"", ""c55591ba157298a9c5816693c102a89dfd058830""]","[""test"", ""fix"", ""build""]"
"support use meta key select multiple element,Fix typo,cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.","[""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n"", ""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n""]",3,"[""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8"", ""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7""]","[""feat"", ""docs"", ""refactor""]"
"print errors without stacktrace,publish sdks after docs/build,[gn] fix include_dirs ordering error","[""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 11adaa7..ed64b17 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -240,6 +240,14 @@ static_library(\""electron_lib\"") {\n     \""brightray\"",\n     \""build/node\"",\n   ]\n+  include_dirs = [\n+    \""chromium_src\"",\n+    \"".\"",\n+    \""$target_gen_dir\"",\n+    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n+    # API of blink, then delete this include dir.\n+    \""//third_party/WebKit/Source\"",\n+  ]\n   if (enable_desktop_capturer) {\n     deps += [ \""//third_party/webrtc/modules/desktop_capture\"" ]\n   }\n@@ -275,14 +283,6 @@ static_library(\""electron_lib\"") {\n     # Disable warnings for g_settings_list_schemas.\n     \""GLIB_DISABLE_DEPRECATION_WARNINGS\"",\n   ]\n-  include_dirs = [\n-    \""chromium_src\"",\n-    \"".\"",\n-    \""$target_gen_dir\"",\n-    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n-    # API of blink, then delete this include dir.\n-    \""//third_party/WebKit/Source\"",\n-  ]\n   if (is_component_build) {\n     defines += [\n       # Import V8 symbols from shared library (node.dll / libnode.so)\n""]",3,"[""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""6c9cb638cb4d1ecc42632fcf389c24898c5b3244"", ""c44cf88a6ec54e5ddd99d8348bcc57b301ec7945""]","[""fix"", ""cicd"", ""build""]"
"initialize threejs objects in defaultRef, to fix undefined type errors,added suported tuple types,licensing","[""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n"", ""diff --git a/src/List/Tuple.ts b/src/List/Tuple.ts\nindex 4c59caa..6e45503 100644\n--- a/src/List/Tuple.ts\n+++ b/src/List/Tuple.ts\n@@ -1,15 +1,17 @@\n-/** A [[Tuple]]\n+import {NonNullable} from '../Object/NonNullable'\n+\n+/** A [[Tuple]] (supported)\n  * @param A its type\n- * @returns **`any[]`**\n+ * @returns **`A[]`**\n  * @example\n  * ```ts\n- * type list0 = [1, 2, 3]\n- * type list1 = number[]\n+ * type tuple0 = [1, 20, 42]\n+ * type tuple1 = ['at', 420]\n  * ```\n  */\n-export type Tuple = [\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-]\n+export type Tuple<A = any> = NonNullable<[\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+]>\n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n""]",3,"[""2561f4ade46fc9d59f289f328cc77733a6443697"", ""2954a0955ce9af6acb345ed1e8328e145ad30475"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0""]","[""fix"", ""refactor"", ""docs""]"
"spring version, core version,add getter for protocol id,fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.","[""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n"", ""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n""]",3,"[""c55591ba157298a9c5816693c102a89dfd058830"", ""dc5238b2bda98a7c4f2fe9584fc3b0191a408109"", ""9be725fa3906323d4bc9788f54eccf74109d632b""]","[""build"", ""feat"", ""fix""]"
"setup jest and add m.ts tests,cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.,add props to get color and label from a route","[""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n"", ""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n"", ""diff --git a/src/components/BottomNavigation.js b/src/components/BottomNavigation.js\nindex 1b72302..7d8ea75 100644\n--- a/src/components/BottomNavigation.js\n+++ b/src/components/BottomNavigation.js\n@@ -24,8 +24,8 @@ const AnimatedPaper = Animated.createAnimatedComponent(Paper);\n \n type Route = {\n   key: string,\n-  title: string,\n-  icon: IconSource,\n+  title?: string,\n+  icon?: IconSource,\n   color?: string,\n };\n \n@@ -51,7 +51,7 @@ type Props<T> = {\n    * - `key`: a unique key to identify the route\n    * - `title`: title of the route to use as the tab label\n    * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n-   * - `color`: color to use as background color for shifting bottom navigation (optional)\n+   * - `color`: color to use as background color for shifting bottom navigation\n    *\n    * Example:\n    *\n@@ -115,11 +115,27 @@ type Props<T> = {\n   /**\n    * Callback which returns a React Element to be used as tab icon.\n    */\n-  renderIcon?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderIcon?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n   /**\n    * Callback which React Element to be used as tab label.\n    */\n-  renderLabel?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderLabel?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n+  /**\n+   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n+   */\n+  getLabelText?: (props: { route: T }) => string,\n+  /**\n+   * Get color for the tab, uses `route.color` by default.\n+   */\n+  getColor?: (props: { route: T }) => string,\n   /**\n    * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n    */\n@@ -159,6 +175,10 @@ type State = {\n    */\n   ripple: Animated.Value,\n   /**\n+   * Animation for the touch feedback, used to determine it's scale and opacity.\n+   */\n+  touch: Animated.Value,\n+  /**\n    * Layout of the tab bar. The width is used to determine the size and position of the ripple.\n    */\n   layout: { height: number, width: number, measured: boolean },\n@@ -173,7 +193,7 @@ const MIN_SHIFT_AMOUNT = 10;\n const MIN_TAB_WIDTH = 96;\n const MAX_TAB_WIDTH = 168;\n const BAR_HEIGHT = 56;\n-const SMALL_RIPPLE_SIZE = 72;\n+const SMALL_RIPPLE_SIZE = 96;\n const ACTIVE_LABEL_SIZE = 14;\n const INACTIVE_LABEL_SIZE = 12;\n \n@@ -251,6 +271,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ),\n       index: new Animated.Value(index),\n       ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n+      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n       layout: { height: 0, width: 0, measured: false },\n       previous: 0,\n     };\n@@ -349,6 +370,15 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n   _handleTabPress = (index: number) => {\n     const { navigationState } = this.props;\n \n+    this.state.touch.setValue(MIN_RIPPLE_SCALE);\n+\n+    Animated.timing(this.state.touch, {\n+      toValue: 1,\n+      duration: 300,\n+      easing: Easing.in(Easing.sin),\n+      useNativeDriver: true,\n+    }).start();\n+\n     if (index !== navigationState.index) {\n       this.props.onIndexChange(index);\n     }\n@@ -376,6 +406,8 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       renderScene,\n       renderIcon,\n       renderLabel,\n+      getLabelText = ({ route }) => route.title,\n+      getColor = ({ route }) => route.color,\n       barStyle,\n       style,\n       theme,\n@@ -400,7 +432,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ? this.state.index.interpolate({\n           inputRange: routes.map((_, i) => i),\n           outputRange: routes.map(\n-            route => route.color || approxBackgroundColor\n+            route => getColor({ route }) || approxBackgroundColor\n           ),\n         })\n       : approxBackgroundColor;\n@@ -416,7 +448,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n           .rgb()\n           .string();\n \n-    const rippleColor = color(textColor)\n+    const touchColor = color(textColor)\n       .alpha(0.12)\n       .rgb()\n       .string();\n@@ -430,22 +462,10 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n \n     // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n     // We need to move it from the left to the active tab and also account for how much that tab has shifted.\n-    const rippleShift =\n-      navigationState.index * tabWidth +\n-      tabWidth / 2 +\n-      this._calculateShift(\n-        this.state.previous,\n-        navigationState.index,\n-        routes.length\n-      );\n \n     return (\n       <View\n-        style={[\n-          styles.container,\n-          { backgroundColor: theme.dark ? white : black },\n-          style,\n-        ]}\n+        style={[styles.container, style]}\n         onLayout={this._handleLayout}\n         pointerEvents={layout.measured ? 'auto' : 'none'}\n       >\n@@ -485,25 +505,30 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n             style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n           >\n             {shifting ? (\n-              // Large ripple with the backround color\n               <Animated.View\n                 pointerEvents=\""none\""\n                 style={[\n                   styles.ripple,\n                   {\n                     // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - layout.width / 2,\n-                    left: rippleShift - layout.width / 2,\n-                    height: layout.width,\n-                    width: layout.width,\n+                    top: BAR_HEIGHT / 2 - layout.width / 8,\n+                    left:\n+                      navigationState.index * tabWidth +\n+                      tabWidth / 2 -\n+                      layout.width / 8,\n+                    height: layout.width / 4,\n+                    width: layout.width / 4,\n                     borderRadius: layout.width / 2,\n-                    backgroundColor: routes[navigationState.index].color,\n+                    backgroundColor: getColor({\n+                      route: routes[navigationState.index],\n+                    }),\n                     transform: [\n+                      { translateX: this.state.shifts[navigationState.index] },\n                       {\n                         // Scale to twice the size  to ensure it covers the whole tab bar\n                         scale: this.state.ripple.interpolate({\n                           inputRange: [0, 1],\n-                          outputRange: [0, 2],\n+                          outputRange: [0, 8],\n                         }),\n                       },\n                     ],\n@@ -515,36 +540,36 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                 ]}\n               />\n             ) : null}\n-            {shifting ? (\n-              // Small subtle ripple on touch\n-              <Animated.View\n-                pointerEvents=\""none\""\n-                style={[\n-                  styles.ripple,\n-                  {\n-                    // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n-                    left: rippleShift - SMALL_RIPPLE_SIZE / 2,\n-                    height: SMALL_RIPPLE_SIZE,\n-                    width: SMALL_RIPPLE_SIZE,\n-                    borderRadius: SMALL_RIPPLE_SIZE / 2,\n-                    backgroundColor: rippleColor,\n-                    transform: [\n-                      {\n-                        scale: this.state.ripple.interpolate({\n-                          inputRange: [0, 0.5, 1],\n-                          outputRange: [0, 1, 1],\n-                        }),\n-                      },\n-                    ],\n-                    opacity: this.state.ripple.interpolate({\n-                      inputRange: [0, MIN_RIPPLE_SCALE, 0.25, 0.5],\n-                      outputRange: [0, 0, 1, 0],\n-                    }),\n-                  },\n-                ]}\n-              />\n-            ) : null}\n+            <Animated.View\n+              pointerEvents=\""none\""\n+              style={[\n+                styles.ripple,\n+                {\n+                  // Set top and left values so that the ripple's center is same as the tab's center\n+                  top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n+                  left:\n+                    navigationState.index * tabWidth +\n+                    tabWidth / 2 -\n+                    SMALL_RIPPLE_SIZE / 2,\n+                  height: SMALL_RIPPLE_SIZE,\n+                  width: SMALL_RIPPLE_SIZE,\n+                  borderRadius: SMALL_RIPPLE_SIZE / 2,\n+                  backgroundColor: touchColor,\n+                  transform: [\n+                    {\n+                      translateX: shifting\n+                        ? this.state.shifts[navigationState.index]\n+                        : 0,\n+                    },\n+                    { scale: this.state.touch },\n+                  ],\n+                  opacity: this.state.touch.interpolate({\n+                    inputRange: [0, 0.5, 1],\n+                    outputRange: [0, 1, 0],\n+                  }),\n+                },\n+              ]}\n+            />\n             {routes.map((route, index) => {\n               const shift = this.state.shifts[index];\n               const focused = this.state.tabs[index];\n@@ -607,7 +632,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderIcon ? (\n-                          renderIcon({ route, focused: true })\n+                          renderIcon({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <Icon\n                             style={styles.icon}\n@@ -625,7 +654,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderIcon ? (\n-                            renderIcon({ route, focused: false })\n+                            renderIcon({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <Icon\n                               style={styles.icon}\n@@ -652,7 +685,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderLabel ? (\n-                          renderLabel({ route, focused: true })\n+                          renderLabel({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <AnimatedText\n                             style={[\n@@ -662,7 +699,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                               },\n                             ]}\n                           >\n-                            {route.title}\n+                            {getLabelText({ route })}\n                           </AnimatedText>\n                         )}\n                       </Animated.View>\n@@ -674,7 +711,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderLabel ? (\n-                            renderLabel({ route, focused: false })\n+                            renderLabel({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <AnimatedText\n                               style={[\n@@ -684,7 +725,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                                 },\n                               ]}\n                             >\n-                              {route.title}\n+                              {getLabelText({ route })}\n                             </AnimatedText>\n                           )}\n                         </Animated.View>\n""]",3,"[""229b53a632ea97d47c4be11f096bdd828fb415d8"", ""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7"", ""ded26d768ff432ad3bde3c0aa1e95ce50726100a""]","[""test"", ""refactor"", ""feat""]"
"verify checkpoint listeners are notified,spring version, core version,increment failing test retries","[""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n"", ""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n""]",3,"[""e0198f74b81da3663144cfe1d971939319f82a0f"", ""c55591ba157298a9c5816693c102a89dfd058830"", ""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57""]","[""test"", ""build"", ""cicd""]"
"xfail on to_parquet and to_csv that use pyarrow write options,update flushed index before truncating,add .nullif() example","[""diff --git a/ibis/backends/tests/test_export.py b/ibis/backends/tests/test_export.py\nindex 4d536d7..5bb9775 100644\n--- a/ibis/backends/tests/test_export.py\n+++ b/ibis/backends/tests/test_export.py\n@@ -222,18 +222,23 @@ def test_table_to_parquet(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\""), [({\""version\"": \""1.0\""}), ({\""version\"": \""2.6\""})])\n-def test_table_to_parquet_writer_kwargs(kwargs, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.NotSupportedError,\n+)\n+@pytest.mark.parametrize(\""version\"", [\""1.0\"", \""2.6\""])\n+def test_table_to_parquet_writer_kwargs(version, tmp_path, backend, awards_players):\n     outparquet = tmp_path / \""out.parquet\""\n-    awards_players.to_parquet(outparquet, **kwargs)\n+    awards_players.to_parquet(outparquet, version=version)\n \n     df = pd.read_parquet(outparquet)\n \n     backend.assert_frame_equal(awards_players.to_pandas(), df)\n \n-    file = pa.parquet.ParquetFile(outparquet)\n+    md = pa.parquet.read_metadata(outparquet)\n \n-    assert file.metadata.format_version == kwargs[\""version\""]\n+    assert md.format_version == version\n \n \n @pytest.mark.notimpl(\n@@ -316,14 +321,20 @@ def test_table_to_csv(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\"", \""delimiter\""), [({\""write_options\"": pcsv.WriteOptions(delimiter=\"";\"")}, \"";\""), ({\""write_options\"": pcsv.WriteOptions(delimiter=\""\\t\"")}, \""\\t\"")])\n-def test_table_to_csv_writer_kwargs(kwargs, delimiter, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.ProgrammingError,\n+)\n+@pytest.mark.parametrize(\""delimiter\"", [\"";\"", \""\\t\""], ids=[\""semicolon\"", \""tab\""])\n+def test_table_to_csv_writer_kwargs(delimiter, tmp_path, awards_players):\n     outcsv = tmp_path / \""out.csv\""\n     # avoid pandas NaNonense\n     awards_players = awards_players.select(\""playerID\"", \""awardID\"", \""yearID\"", \""lgID\"")\n \n-    awards_players.to_csv(outcsv, **kwargs)\n-    pd.read_csv(outcsv, delimiter=delimiter)\n+    awards_players.to_csv(outcsv, write_options=pcsv.WriteOptions(delimiter=delimiter))\n+    df = pd.read_csv(outcsv, delimiter=delimiter, nrows=1)\n+    assert len(df) == 1\n \n \n @pytest.mark.parametrize(\n"", ""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n""]",3,"[""bedc7950b24c37809e36a585b7985d5aa5e3e458"", ""933ab6bb86372913c992567cf9660009900911a7"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21""]","[""test"", ""fix"", ""docs""]"
"print errors without stacktrace,updated react demo parcel command,update wrapping tests for v7","[""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n"", ""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n""]",3,"[""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""32b92cfa0b74a6c25990e32ac6aab12b8496794c"", ""317f4eefecddfb1392ca71d551840f446feee302""]","[""fix"", ""build"", ""test""]"
"Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>,fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.,split release docs build into separate workflow","[""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n"", ""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n"", ""diff --git a/.github/workflows/ibis-docs-lint.yml b/.github/workflows/ibis-docs-lint.yml\nindex 753d57d..3e0aa15 100644\n--- a/.github/workflows/ibis-docs-lint.yml\n+++ b/.github/workflows/ibis-docs-lint.yml\n@@ -88,14 +88,14 @@ jobs:\n         run: poetry run pytest --benchmark-only --benchmark-json .benchmarks/output.json ibis/tests/benchmarks\n \n       - uses: tibdex/github-app-token@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         id: generate-token\n         with:\n           app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}\n           private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}\n \n       - uses: benchmark-action/github-action-benchmark@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         with:\n           tool: pytest\n           github-token: ${{ steps.generate-token.outputs.token }}\n@@ -107,6 +107,7 @@ jobs:\n \n   docs:\n     runs-on: ubuntu-latest\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n     needs:\n       # wait on benchmarks to prevent a race condition when pushing to the\n       # gh-pages branch\n@@ -124,51 +125,25 @@ jobs:\n           authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n           extraPullNames: nix-community,poetry2nix\n \n-      - name: Generate a GitHub token\n-        if: ${{ github.event_name == 'push' }}\n-        uses: tibdex/github-app-token@v1\n-        id: generate_token\n-        with:\n-          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n-          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n-\n-      - name: checkout\n-        if: ${{ github.event_name == 'push' }}\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          token: ${{ steps.generate_token.outputs.token }}\n-\n       - name: checkout\n-        if: ${{ github.event_name != 'push' }}\n         uses: actions/checkout@v3\n \n-      - name: Configure git info\n-        if: ${{ github.event_name == 'push' }}\n-        run: |\n-          set -euo pipefail\n-\n-          git config user.name 'ibis-docs-bot[bot]'\n-          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n-\n       - name: build docs\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c mkdocs build\n \n       - name: verify internal links\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c just checklinks --offline --no-progress\n \n-      - name: Pull gh-pages changes\n+      - name: Configure git info\n         if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n-          git fetch origin gh-pages\n-          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n \n       - name: build and push dev docs\n-        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/') }}\n+        if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n@@ -180,19 +155,6 @@ jobs:\n               --message 'docs(dev): ibis@${{ github.sha }}' \\\n                 dev\n \n-      - name: build and push docs on tag\n-        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}\n-        run: |\n-          set -euo pipefail\n-\n-          nix develop -f shell.nix --keep-going -c \\\n-            mic deploy \\\n-              --push \\\n-              --rebase \\\n-              --prefix docs \\\n-              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n-              \""${GITHUB_REF_NAME}\"" latest\n-\n   simulate_release:\n     runs-on: ubuntu-latest\n     steps:\ndiff --git a/.github/workflows/ibis-docs-release.yml b/.github/workflows/ibis-docs-release.yml\nnew file mode 100644\nindex 0000000..da7ee49\n--- /dev/null\n+++ b/.github/workflows/ibis-docs-release.yml\n@@ -0,0 +1,63 @@\n+# vim: filetype=yaml\n+name: Docs Release Build\n+\n+on:\n+  release:\n+    types:\n+      - published\n+jobs:\n+  docs:\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: install nix\n+        uses: cachix/install-nix-action@v17\n+        with:\n+          nix_path: nixpkgs=channel:nixos-unstable-small\n+\n+      - name: setup cachix\n+        uses: cachix/cachix-action@v10\n+        with:\n+          name: ibis\n+          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n+          extraPullNames: nix-community,poetry2nix\n+\n+      - name: Generate a GitHub token\n+        uses: tibdex/github-app-token@v1\n+        id: generate_token\n+        with:\n+          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n+          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n+\n+      - name: checkout\n+        uses: actions/checkout@v3\n+        with:\n+          fetch-depth: 0\n+          token: ${{ steps.generate_token.outputs.token }}\n+\n+      - name: Configure git info\n+        run: |\n+          set -euo pipefail\n+\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n+\n+      - name: Pull gh-pages changes\n+        run: |\n+          set -euo pipefail\n+\n+          git fetch origin gh-pages\n+          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+\n+      - name: build and push docs on tag\n+        run: |\n+          set -euo pipefail\n+\n+          nix develop -f shell.nix --keep-going -c \\\n+            mic deploy \\\n+              --push \\\n+              --rebase \\\n+              --update-aliases \\\n+              --prefix docs \\\n+              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n+              \""${GITHUB_REF_NAME}\"" latest\n""]",3,"[""f823cf28652987d43c8324b4f5b203240032383a"", ""9be725fa3906323d4bc9788f54eccf74109d632b"", ""32845e1bbd1efb5dbc16f671049509a409ba25ce""]","[""feat"", ""fix"", ""cicd""]"
"allow disabling dynamic queue,licensing,docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>","[""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n""]",3,"[""9ef5c0d14193a9abb09b39856f58477d1f4b0d77"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf""]","[""fix"", ""docs"", ""build""]"
"repository creation,run pyspark tests in parallel,add .nullif() example","[""diff --git a/server/src/services/repository.service.ts b/server/src/services/repository.service.ts\nindex 3869c98..d675b30 100644\n--- a/server/src/services/repository.service.ts\n+++ b/server/src/services/repository.service.ts\n@@ -19,6 +19,8 @@ export class RepositoryService {\n       return;\n     }\n \n+    await this.createTeam(this.github, this.getTeamName(course), course.id);\n+\n     const studentRepo = getCustomRepository(StudentRepository);\n     const students = await studentRepo.findActiveByCourseId(this.courseId);\n \n@@ -31,8 +33,8 @@ export class RepositoryService {\n         if (mentorGithubId) {\n           await this.inviteMentor(mentorGithubId, course);\n         }\n-        await this.addTeamToRepository(this.github, course, student.githubId);\n       }\n+      await this.addTeamToRepository(this.github, course, student.githubId);\n       if (record?.repository) {\n         result.push({ repository: record.repository });\n       }\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex e23088e..9708157 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -202,11 +202,11 @@ jobs:\n         run: poetry install --without dev --without docs --extras ${{ matrix.backend.name }} --extras geospatial\n \n       - name: \""run parallel tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name != 'pyspark' && matrix.backend.name != 'impala'\n+        if: matrix.backend.name != 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }} --numprocesses auto --dist=loadgroup\n \n       - name: \""run serial tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name == 'pyspark' || matrix.backend.name == 'impala'\n+        if: matrix.backend.name == 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }}\n         env:\n           IBIS_TEST_NN_HOST: localhost\n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n""]",3,"[""87d5d4e55ab7149b593d29410f1fe426ba2447d4"", ""4cbbd2552ba0de273e1dfe7d453c5b3efed751a3"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21""]","[""fix"", ""cicd"", ""docs""]"
"enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>,better layout for block and segment,autostart feature fixed","[""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n"", ""diff --git a/docs/docs/config-block.md b/docs/docs/config-block.md\nnew file mode 100644\nindex 0000000..df1ee54\n--- /dev/null\n+++ b/docs/docs/config-block.md\n@@ -0,0 +1,60 @@\n+---\n+id: config-block\n+title: Block\n+sidebar_label: Block\n+---\n+\n+Let's take a closer look at what defines a block.\n+\n+```json\n+{\n+  \""$schema\"": \""https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json\"",\n+  ...\n+  \""blocks\"": [\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""left\"",\n+      \""segments\"": [\n+        ...\n+      ]\n+    }\n+  ]\n+}\n+```\n+\n+- type: `prompt` | `rprompt`\n+- newline: `boolean`\n+- alignment: `left` | `right`\n+- vertical_offset: `int`\n+- horizontal_offset: `int`\n+- segments: `array` of one or more `segments`\n+\n+### Type\n+\n+Tells the engine what to do with the block. There are three options:\n+\n+- `prompt` renders one or more segments\n+- `rprompt` renders one or more segments aligned to the right of the cursor. Only one `rprompt` block is permitted.\n+Supported on [ZSH][rprompt], Bash and Powershell.\n+\n+### Newline\n+\n+Start the block on a new line. Defaults to `false`.\n+\n+### Alignment\n+\n+Tell the engine if the block should be left or right-aligned.\n+\n+### Vertical offset\n+\n+Move the block up or down x lines. For example, `vertical_offset: 1` moves the prompt down one line, `vertical_offset: -1`\n+moves it up one line.\n+\n+### Horizontal offset\n+\n+Moves the segment to the left or the right to have it exactly where you want it to be. Works like `vertical_offset`\n+but on a horizontal level where a negative number moves the block left and a positive number right.\n+\n+### Segments\n+\n+Array of one or more segments.\ndiff --git a/docs/docs/config-example.md b/docs/docs/config-example.md\nnew file mode 100644\nindex 0000000..c180c4f\n--- /dev/null\n+++ b/docs/docs/config-example.md\n@@ -0,0 +1,96 @@\n+---\n+id: config-sample\n+title: Sample\n+sidebar_label: Sample\n+---\n+\n+```json\n+{\n+  \""final_space\"": true,\n+  \""blocks\"": [\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""right\"",\n+      \""vertical_offset\"": -1,\n+      \""segments\"": [\n+        {\n+          \""type\"": \""time\"",\n+          \""style\"": \""plain\"",\n+          \""foreground\"": \""#007ACC\"",\n+          \""properties\"": {\n+            \""time_format\"": \""15:04:05\""\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""left\"",\n+      \""newline\"": true,\n+      \""segments\"": [\n+        {\n+          \""type\"": \""session\"",\n+          \""style\"": \""diamond\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#ffb300\"",\n+          \""leading_diamond\"": \""\\uE0B6\"",\n+          \""trailing_diamond\"": \""\\uE0B0\"",\n+          \""properties\"": {\n+            \""postfix\"": \"" \""\n+          }\n+        },\n+        {\n+          \""type\"": \""path\"",\n+          \""style\"": \""powerline\"",\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#61AFEF\"",\n+          \""properties\"": {\n+            \""prefix\"": \"" \\uE5FF \"",\n+            \""style\"": \""folder\"",\n+            \""exclude_folders\"": [\n+              \""/super/secret/project\""\n+            ],\n+            \""enable_hyperlink\"": false\n+          }\n+        },\n+        {\n+          \""type\"": \""git\"",\n+          \""style\"": \""powerline\"",\n+          \""foreground\"": \""#193549\"",\n+          \""foreground_templates\"": [\n+            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#ffffff{{ end }}\""\n+          ],\n+          \""background\"": \""#2e9599\"",\n+          \""background_templates\"": [\n+            \""{{ if or (.Working.Changed) (.Staging.Changed) }}#f36943{{ end }}\"",\n+            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#a8216b{{ end }}\"",\n+            \""{{ if gt .Ahead 0 }}#35b5ff{{ end }}\"",\n+            \""{{ if gt .Behind 0 }}#f89cfa{{ end }}\""\n+          ],\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""properties\"": {\n+            \""fetch_status\"": true,\n+            \""branch_max_length\"": 25,\n+            \""template\"": \""{{ .HEAD }}{{ .BranchStatus }}\""\n+          }\n+        },\n+        {\n+          \""type\"": \""exit\"",\n+          \""style\"": \""diamond\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#00897b\"",\n+          \""background_templates\"": [\""{{ if gt .Code 0 }}#e91e63{{ end }}\""],\n+          \""leading_diamond\"": \""\"",\n+          \""trailing_diamond\"": \""\\uE0B4\"",\n+          \""properties\"": {\n+            \""always_enabled\"": true,\n+            \""template\"": \""\\uE23A\"",\n+            \""prefix\"": \""<parentBackground>\\uE0B0</> \""\n+          }\n+        }\n+      ]\n+    }\n+  ]\n+}\n+```\ndiff --git a/docs/docs/config-overview.md b/docs/docs/config-overview.md\nindex 1fdbcba..b554869 100644\n--- a/docs/docs/config-overview.md\n+++ b/docs/docs/config-overview.md\n@@ -1,7 +1,7 @@\n ---\n id: config-overview\n-title: Overview\n-sidebar_label: Overview\n+title: General\n+sidebar_label: General\n ---\n \n Oh My Posh renders your prompt based on the definition of _blocks_ (like Lego) which contain one or more _segments_.\n@@ -64,332 +64,7 @@ boxes with question marks, set up your terminal to use a [supported font][font] \n - terminal_background: `string` [color][colors] - terminal background color, set to your terminal's background color when\n you notice black elements in Windows Terminal or the Visual Studio Code integrated terminal\n \n-## Block\n-\n-Let's take a closer look at what defines a block.\n-\n-- type: `prompt` | `rprompt`\n-- newline: `boolean`\n-- alignment: `left` | `right`\n-- vertical_offset: `int`\n-- horizontal_offset: `int`\n-- segments: `array` of one or more `segments`\n-\n-### Type\n-\n-Tells the engine what to do with the block. There are three options:\n-\n-- `prompt` renders one or more segments\n-- `rprompt` renders one or more segments aligned to the right of the cursor. Only one `rprompt` block is permitted.\n-Supported on [ZSH][rprompt], Bash and Powershell.\n-\n-### Newline\n-\n-Start the block on a new line. Defaults to `false`.\n-\n-### Alignment\n-\n-Tell the engine if the block should be left or right-aligned.\n-\n-### Vertical offset\n-\n-Move the block up or down x lines. For example, `vertical_offset: 1` moves the prompt down one line, `vertical_offset: -1`\n-moves it up one line.\n-\n-### Horizontal offset\n-\n-Moves the segment to the left or the right to have it exactly where you want it to be. Works like `vertical_offset`\n-but on a horizontal level where a negative number moves the block left and a positive number right.\n-\n-### Segments\n-\n-Array of one or more segments.\n-\n-## Segment\n-\n-A segment is a part of the prompt with a certain context. There are different types available out-of-the-box, if you're\n-looking for what's included, feel free to skip this part and browse through the [segments][segments]. Keep reading to\n-understand how to configure a segment.\n-\n-- type: `string` any of the included [segments][segments]\n-- style: `powerline` | `plain` | `diamond`\n-- powerline_symbol: `string`\n-- invert_powerline: `boolean`\n-- leading_diamond: `string`\n-- trailing_diamond: `string`\n-- foreground: `string` [color][colors]\n-- foreground_templates: `array` of `string` values\n-- background: `string` [color][colors]\n-- background_templates: `array` of `string` values\n-- properties: `array` of `Property`: `string`\n-\n-### Type\n-\n-Takes the `string` value referencing which segment logic it needs to run (see [segments][segments] for possible values).\n-\n-### Style\n-\n-Oh Hi! You made it to a really interesting part, great! Style defines how a prompt is rendered. Looking at the most prompt\n-themes out there, we identified 3 types. All of these require a different configuration and depending on the look\n-you want to achieve you might need to understand/use them all.\n-\n-#### Powerline\n-\n-What started it all for us. Makes use of a single symbol (`powerline_symbol`) to separate the segments. It takes the\n-background color of the previous segment (or transparent if none) and the foreground of the current one (or transparent\n-if we're at the last segment). Expects segments to have a colored background, else there little use for this one.\n-\n-#### Plain\n-\n-Simple. Colored text on a transparent background. Make sure to set `foreground` for maximum enjoyment.\n-Segments will be separated by empty spaces unless you specify `''` for the `prefix` and `postfix` settings for the segment.\n-\n-#### Diamond\n-\n-While Powerline works great with a single symbol, sometimes you want a segment to have a different start and end symbol.\n-Just like a diamond: `< my segment text >`. The difference between this and plain is that the diamond symbols take the\n-segment background as their foreground color.\n-\n-### Powerline symbol\n-\n-Text character to use when `\""style\"": \""powerline\""`.\n-\n-### Invert Powerline\n-\n-If `true` this swaps the foreground and background colors. Can be useful when the character you want does not exist\n-in the perfectly mirrored variant for example.\n-\n-### Leading diamond\n-\n-Text character to use at the start of the segment. Will take the background color of the segment as\n-its foreground color.\n-\n-### Trailing diamond\n-\n-Text character to use at the end of the segment. Will take the background color of the segment as its foreground color.\n-\n-### Foreground\n-\n-[Color][colors] to use as the segment text foreground color. Also supports transparency using the `transparent` keyword.\n-\n-### Foreground Templates\n-\n-Array if string templates to define the foreground color for the given Segment based on the Segment's Template Properties.\n-Under the hood this uses go's [text/template][go-text-template] feature extended with [sprig][sprig] and\n-offers a few standard properties to work with. For supported Segments, look for the **Template Properties** section in\n-the documentation.\n-\n-The following sample is based on the [AWS Segment][aws].\n-\n-```json\n-{\n-  \""type\"": \""aws\"",\n-  \""style\"": \""powerline\"",\n-  \""powerline_symbol\"": \""\\uE0B0\"",\n-  \""foreground\"": \""#ffffff\"",\n-  \""background\"": \""#111111\"",\n-  \""foreground_templates\"": [\n-    \""{{if contains \\\""default\\\"" .Profile}}#FFA400{{end}}\"",\n-    \""{{if contains \\\""jan\\\"" .Profile}}#f1184c{{end}}\""\n-  ],\n-  \""properties\"": {\n-    \""prefix\"": \"" \\uE7AD \""\n-  }\n-}\n-```\n-\n-The logic is as follows: when `background_templates` contains an array, we will check every template line until there's\n-one that returns a non-empty string. So, when the contents of `.Profile` contain the word `default`, the first template\n-returns `#FFA400` and that's the color that will be used. If it contains `jan`, it returns `#f1184c`. When none of the\n-templates returns a value, the foreground value `#ffffff` is used.\n-\n-### Background\n-\n-[Color][colors] to use as the segment text background color. Also supports transparency using the `transparent` keyword.\n-\n-### Background Templates\n-\n-Same as [Foreground Templates][fg-templ] but for the background color.\n-\n-### Properties\n-\n-An array of **Properties** with a value. This is used inside of the segment logic to tweak what the output of the segment\n-will be. Segments have the ability to define their own Properties, but there are some general ones being used by the\n-engine which allow you to customize the output even more.\n-\n-#### General-purpose properties\n-\n-You can use these on any segment, the engine is responsible for adding them correctly.\n-\n-- prefix: `string`\n-- postfix: `string`\n-- include_folders: `[]string`\n-- exclude_folders: `[]string`\n-\n-##### Prefix\n-\n-The string content will be put in front of the segment's output text. Useful for symbols, text or other customizations.\n-If this is not set, it will be an empty space in `plain` mode. If you want to remove the space before the segment,\n-specify this as `''`.\n-\n-##### Postfix\n-\n-The string content will be put after the segment's output text. Useful for symbols, text or other customizations.\n-If this is not set, it will default to an empty space in `plain` mode. If you want to remove the space after the segment,\n-specify this as `''`.\n-\n-##### Include / Exclude Folders\n-\n-Sometimes you might want to have a segment only rendered in certain folders. If `include_folders` is specified,\n-the segment will only be rendered when in one of those locations. If `exclude_folders` is specified, the segment\n-will not be rendered when in one of the excluded locations.\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects\""\n-]\n-```\n-\n-```json\n-\""exclude_folders\"": [\n-  \""/Users/posh/Projects\""\n-]\n-```\n-\n-The strings specified in these properties are evaluated as [regular expressions][regex]. You\n-can use any valid regular expression construct, but the regular expression must match the entire directory\n-name. The following will match `/Users/posh/Projects/Foo` but not `/home/Users/posh/Projects/Foo`.\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects.*\""\n-]\n-```\n-\n-You can also combine these properties:\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects.*\""\n-],\n-\""exclude_folders\"": [\n-  \""/Users/posh/Projects/secret-project.*\""\n-]\n-```\n-\n-##### Notes\n-\n-- Oh My Posh will accept both `/` and `\\` as path separators for a folder and will match regardless of which\n-is used by the current operating system.\n-- Because the strings are evaluated as regular expressions, if you want to use a `\\` in a Windows\n-directory name, you need to specify it as `\\\\\\\\`.\n-- The character `~` at the start of a specified folder will match the user's home directory.\n-- The comparison is case-insensitive on Windows and macOS, but case-sensitive on other operating systems.\n-\n-This means that for user Bill, who has a user account `Bill` on Windows and `bill` on Linux,  `~/Foo` might match\n-`C:\\Users\\Bill\\Foo` or `C:\\Users\\Bill\\foo` on Windows but only `/home/bill/Foo` on Linux.\n-\n-## Full Sample\n-\n-```json\n-{\n-  \""final_space\"": true,\n-  \""blocks\"": [\n-    {\n-      \""type\"": \""prompt\"",\n-      \""alignment\"": \""right\"",\n-      \""vertical_offset\"": -1,\n-      \""segments\"": [\n-        {\n-          \""type\"": \""time\"",\n-          \""style\"": \""plain\"",\n-          \""foreground\"": \""#007ACC\"",\n-          \""properties\"": {\n-            \""time_format\"": \""15:04:05\""\n-          }\n-        }\n-      ]\n-    },\n-    {\n-      \""type\"": \""prompt\"",\n-      \""alignment\"": \""left\"",\n-      \""newline\"": true,\n-      \""segments\"": [\n-        {\n-          \""type\"": \""session\"",\n-          \""style\"": \""diamond\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#ffb300\"",\n-          \""leading_diamond\"": \""\\uE0B6\"",\n-          \""trailing_diamond\"": \""\\uE0B0\"",\n-          \""properties\"": {\n-            \""postfix\"": \"" \""\n-          }\n-        },\n-        {\n-          \""type\"": \""path\"",\n-          \""style\"": \""powerline\"",\n-          \""powerline_symbol\"": \""\\uE0B0\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#61AFEF\"",\n-          \""properties\"": {\n-            \""prefix\"": \"" \\uE5FF \"",\n-            \""style\"": \""folder\"",\n-            \""exclude_folders\"": [\n-              \""/super/secret/project\""\n-            ],\n-            \""enable_hyperlink\"": false\n-          }\n-        },\n-        {\n-          \""type\"": \""git\"",\n-          \""style\"": \""powerline\"",\n-          \""foreground\"": \""#193549\"",\n-          \""foreground_templates\"": [\n-            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#ffffff{{ end }}\""\n-          ],\n-          \""background\"": \""#2e9599\"",\n-          \""background_templates\"": [\n-            \""{{ if or (.Working.Changed) (.Staging.Changed) }}#f36943{{ end }}\"",\n-            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#a8216b{{ end }}\"",\n-            \""{{ if gt .Ahead 0 }}#35b5ff{{ end }}\"",\n-            \""{{ if gt .Behind 0 }}#f89cfa{{ end }}\""\n-          ],\n-          \""powerline_symbol\"": \""\\uE0B0\"",\n-          \""properties\"": {\n-            \""fetch_status\"": true,\n-            \""branch_max_length\"": 25,\n-            \""template\"": \""{{ .HEAD }}{{ .BranchStatus }}\""\n-          }\n-        },\n-        {\n-          \""type\"": \""exit\"",\n-          \""style\"": \""diamond\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#00897b\"",\n-          \""background_templates\"": [\""{{ if gt .Code 0 }}#e91e63{{ end }}\""],\n-          \""leading_diamond\"": \""\"",\n-          \""trailing_diamond\"": \""\\uE0B4\"",\n-          \""properties\"": {\n-            \""always_enabled\"": true,\n-            \""template\"": \""\\uE23A\"",\n-            \""prefix\"": \""<parentBackground>\\uE0B0</> \""\n-          }\n-        }\n-      ]\n-    }\n-  ]\n-}\n-```\n-\n [releases]: https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest\n [font]: /docs/config-fonts\n [schema]: https://github.com/JanDeDobbeleer/oh-my-posh/blob/main/themes/schema.json\n [themes]: https://github.com/JanDeDobbeleer/oh-my-posh/tree/main/themes\n-[segments]: /docs/battery\n-[colors]: /docs/config-colors\n-[go-text-template]: https://golang.org/pkg/text/template/\n-[sprig]: https://masterminds.github.io/sprig/\n-[fg-templ]: /docs/config-overview#foreground-templates\n-[regex]: https://www.regular-expressions.info/tutorial.html\n-[aws]: /docs/aws\ndiff --git a/docs/docs/config-segment.md b/docs/docs/config-segment.md\nnew file mode 100644\nindex 0000000..08a66e4\n--- /dev/null\n+++ b/docs/docs/config-segment.md\n@@ -0,0 +1,219 @@\n+---\n+id: config-segment\n+title: Segment\n+sidebar_label: Segment\n+---\n+\n+A segment is a part of the prompt with a certain context. There are different types available out-of-the-box, if you're\n+looking for what's included, feel free to skip this part and browse through the [segments][segments]. Keep reading to\n+understand how to configure a segment.\n+\n+```json\n+{\n+  \""$schema\"": \""https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json\"",\n+  ...\n+  \""blocks\"": [\n+    {\n+      ...\n+      \""segments\"": [\n+        {\n+          \""type\"": \""path\"",\n+          \""style\"": \""powerline\"",\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#61AFEF\"",\n+          \""properties\"": {\n+            ...\n+          }\n+        }\n+      ]\n+    }\n+  ]\n+}\n+```\n+\n+- type: `string` any of the included [segments][segments]\n+- style: `powerline` | `plain` | `diamond`\n+- powerline_symbol: `string`\n+- invert_powerline: `boolean`\n+- leading_diamond: `string`\n+- trailing_diamond: `string`\n+- foreground: `string` [color][colors]\n+- foreground_templates: `array` of `string` values\n+- background: `string` [color][colors]\n+- background_templates: `array` of `string` values\n+- properties: `array` of `Property`: `string`\n+\n+## Type\n+\n+Takes the `string` value referencing which segment logic it needs to run (see [segments][segments] for possible values).\n+\n+## Style\n+\n+Oh Hi! You made it to a really interesting part, great! Style defines how a prompt is rendered. Looking at the most prompt\n+themes out there, we identified 3 types. All of these require a different configuration and depending on the look\n+you want to achieve you might need to understand/use them all.\n+\n+### Powerline\n+\n+What started it all for us. Makes use of a single symbol (`powerline_symbol`) to separate the segments. It takes the\n+background color of the previous segment (or transparent if none) and the foreground of the current one (or transparent\n+if we're at the last segment). Expects segments to have a colored background, else there little use for this one.\n+\n+### Plain\n+\n+Simple. Colored text on a transparent background. Make sure to set `foreground` for maximum enjoyment.\n+Segments will be separated by empty spaces unless you specify `''` for the `prefix` and `postfix` settings for the segment.\n+\n+### Diamond\n+\n+While Powerline works great with a single symbol, sometimes you want a segment to have a different start and end symbol.\n+Just like a diamond: `< my segment text >`. The difference between this and plain is that the diamond symbols take the\n+segment background as their foreground color.\n+\n+## Powerline symbol\n+\n+Text character to use when `\""style\"": \""powerline\""`.\n+\n+## Invert Powerline\n+\n+If `true` this swaps the foreground and background colors. Can be useful when the character you want does not exist\n+in the perfectly mirrored variant for example.\n+\n+## Leading diamond\n+\n+Text character to use at the start of the segment. Will take the background color of the segment as\n+its foreground color.\n+\n+## Trailing diamond\n+\n+Text character to use at the end of the segment. Will take the background color of the segment as its foreground color.\n+\n+## Foreground\n+\n+[Color][colors] to use as the segment text foreground color. Also supports transparency using the `transparent` keyword.\n+\n+## Foreground Templates\n+\n+Array if string templates to define the foreground color for the given Segment based on the Segment's Template Properties.\n+Under the hood this uses go's [text/template][go-text-template] feature extended with [sprig][sprig] and\n+offers a few standard properties to work with. For supported Segments, look for the **Template Properties** section in\n+the documentation.\n+\n+The following sample is based on the [AWS Segment][aws].\n+\n+```json\n+{\n+  \""type\"": \""aws\"",\n+  \""style\"": \""powerline\"",\n+  \""powerline_symbol\"": \""\\uE0B0\"",\n+  \""foreground\"": \""#ffffff\"",\n+  \""background\"": \""#111111\"",\n+  \""foreground_templates\"": [\n+    \""{{if contains \\\""default\\\"" .Profile}}#FFA400{{end}}\"",\n+    \""{{if contains \\\""jan\\\"" .Profile}}#f1184c{{end}}\""\n+  ],\n+  \""properties\"": {\n+    \""prefix\"": \"" \\uE7AD \""\n+  }\n+}\n+```\n+\n+The logic is as follows: when `background_templates` contains an array, we will check every template line until there's\n+one that returns a non-empty string. So, when the contents of `.Profile` contain the word `default`, the first template\n+returns `#FFA400` and that's the color that will be used. If it contains `jan`, it returns `#f1184c`. When none of the\n+templates returns a value, the foreground value `#ffffff` is used.\n+\n+## Background\n+\n+[Color][colors] to use as the segment text background color. Also supports transparency using the `transparent` keyword.\n+\n+## Background Templates\n+\n+Same as [Foreground Templates][fg-templ] but for the background color.\n+\n+## Properties\n+\n+An array of **Properties** with a value. This is used inside of the segment logic to tweak what the output of the segment\n+will be. Segments have the ability to define their own Properties, but there are some general ones being used by the\n+engine which allow you to customize the output even more.\n+\n+### General-purpose properties\n+\n+You can use these on any segment, the engine is responsible for adding them correctly.\n+\n+- prefix: `string`\n+- postfix: `string`\n+- include_folders: `[]string`\n+- exclude_folders: `[]string`\n+\n+#### Prefix\n+\n+The string content will be put in front of the segment's output text. Useful for symbols, text or other customizations.\n+If this is not set, it will be an empty space in `plain` mode. If you want to remove the space before the segment,\n+specify this as `''`.\n+\n+#### Postfix\n+\n+The string content will be put after the segment's output text. Useful for symbols, text or other customizations.\n+If this is not set, it will default to an empty space in `plain` mode. If you want to remove the space after the segment,\n+specify this as `''`.\n+\n+#### Include / Exclude Folders\n+\n+Sometimes you might want to have a segment only rendered in certain folders. If `include_folders` is specified,\n+the segment will only be rendered when in one of those locations. If `exclude_folders` is specified, the segment\n+will not be rendered when in one of the excluded locations.\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects\""\n+]\n+```\n+\n+```json\n+\""exclude_folders\"": [\n+  \""/Users/posh/Projects\""\n+]\n+```\n+\n+The strings specified in these properties are evaluated as [regular expressions][regex]. You\n+can use any valid regular expression construct, but the regular expression must match the entire directory\n+name. The following will match `/Users/posh/Projects/Foo` but not `/home/Users/posh/Projects/Foo`.\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects.*\""\n+]\n+```\n+\n+You can also combine these properties:\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects.*\""\n+],\n+\""exclude_folders\"": [\n+  \""/Users/posh/Projects/secret-project.*\""\n+]\n+```\n+\n+#### Notes\n+\n+- Oh My Posh will accept both `/` and `\\` as path separators for a folder and will match regardless of which\n+is used by the current operating system.\n+- Because the strings are evaluated as regular expressions, if you want to use a `\\` in a Windows\n+directory name, you need to specify it as `\\\\\\\\`.\n+- The character `~` at the start of a specified folder will match the user's home directory.\n+- The comparison is case-insensitive on Windows and macOS, but case-sensitive on other operating systems.\n+\n+This means that for user Bill, who has a user account `Bill` on Windows and `bill` on Linux,  `~/Foo` might match\n+`C:\\Users\\Bill\\Foo` or `C:\\Users\\Bill\\foo` on Windows but only `/home/bill/Foo` on Linux.\n+\n+[segments]: /docs/battery\n+[colors]: /docs/config-colors\n+[go-text-template]: https://golang.org/pkg/text/template/\n+[sprig]: https://masterminds.github.io/sprig/\n+[fg-templ]: /docs/config-overview#foreground-templates\n+[regex]: https://www.regular-expressions.info/tutorial.html\n+[aws]: /docs/aws\ndiff --git a/docs/docs/segment-environment.md b/docs/docs/segment-environment.md\nindex f35bc87..982a0a5 100644\n--- a/docs/docs/segment-environment.md\n+++ b/docs/docs/segment-environment.md\n@@ -34,7 +34,7 @@ New-Alias -Name 'Set-PoshContext' -Value 'Set-EnvVar' -Scope Global -Force\n \n The segment will show when the value of the environment variable isn't empty.\n \n-## Sample Configuration\n+## Sample *Configuration*\n \n ```json\n {\ndiff --git a/docs/sidebars.js b/docs/sidebars.js\nindex a75163e..8f151a2 100644\n--- a/docs/sidebars.js\n+++ b/docs/sidebars.js\n@@ -20,6 +20,9 @@ module.exports = {\n       label: \""\u2699\ufe0f Configuration\"",\n       items: [\n         \""config-overview\"",\n+        \""config-block\"",\n+        \""config-segment\"",\n+        \""config-sample\"",\n         \""config-title\"",\n         \""config-colors\"",\n         \""config-text-style\"",\n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n""]",3,"[""fd8e563cc19ca4684885d4692acee6bebcca4ada"", ""cb1f48b56ae0de93acb72e48726c7d610a1d538e"", ""bed78248c941d57ad4cc20a455147e186e97c7a1""]","[""feat"", ""docs"", ""fix""]"
"terminated tasks linger for a bit

Signed-off-by: Eliza Weisman <eliza@buoyant.io>,allow disabling dynamic queue,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.","[""diff --git a/console/src/main.rs b/console/src/main.rs\nindex ebfa315..5328d96 100644\n--- a/console/src/main.rs\n+++ b/console/src/main.rs\n@@ -69,6 +69,7 @@ async fn main() -> Result<(), Box<dyn std::error::Error>> {\n                 .wrap(Wrap { trim: true });\n             f.render_widget(header, chunks[0]);\n             tasks.render(f, chunks[1]);\n+            tasks.retain_active();\n         })?;\n     }\n \ndiff --git a/console/src/tasks.rs b/console/src/tasks.rs\nindex 7be39a4..eb41495 100644\n--- a/console/src/tasks.rs\n+++ b/console/src/tasks.rs\n@@ -19,6 +19,7 @@ struct Task {\n     fields: String,\n     kind: &'static str,\n     stats: Stats,\n+    completed_for: usize,\n }\n \n #[derive(Default, Debug)]\n@@ -28,10 +29,15 @@ struct Stats {\n     idle: Duration,\n     total: Duration,\n }\n+\n impl State {\n+    // How many updates to retain completed tasks for\n+    const RETAIN_COMPLETED_FOR: usize = 6;\n+\n     pub(crate) fn len(&self) -> usize {\n         self.tasks.len()\n     }\n+\n     pub(crate) fn update(&mut self, update: proto::tasks::TaskUpdate) {\n         let new_tasks = update.new_tasks.into_iter().filter_map(|task| {\n             if task.id.is_none() {\n@@ -48,6 +54,7 @@ impl State {\n                 fields: task.string_fields,\n                 kind,\n                 stats: Default::default(),\n+                completed_for: 0,\n             };\n             Some((id, task))\n         });\n@@ -60,7 +67,10 @@ impl State {\n         }\n \n         for proto::SpanId { id } in update.completed {\n-            if self.tasks.remove(&id).is_none() {\n+            if let Some(task) = self.tasks.get_mut(&id) {\n+                task.kind = \""!\"";\n+                task.completed_for = 1;\n+            } else {\n                 tracing::warn!(?id, \""tried to complete a task that didn't exist\"");\n             }\n         }\n@@ -79,7 +89,7 @@ impl State {\n         const DUR_PRECISION: usize = 4;\n         const POLLS_LEN: usize = 5;\n         let rows = self.tasks.values().map(|task| {\n-            let row = Row::new(vec![\n+            let mut row = Row::new(vec![\n                 Cell::from(task.id_hex.as_str()),\n                 // TODO(eliza): is there a way to write a `fmt::Debug` impl\n                 // directly to tui without doing an allocation?\n@@ -105,6 +115,9 @@ impl State {\n                 Cell::from(format!(\""{:>width$}\"", task.stats.polls, width = POLLS_LEN)),\n                 Cell::from(task.fields.as_str()),\n             ]);\n+            if task.completed_for > 0 {\n+                row = row.style(Style::default().add_modifier(style::Modifier::DIM));\n+            }\n             row\n         });\n         let t = Table::new(rows)\n@@ -126,6 +139,16 @@ impl State {\n \n         frame.render_widget(t, area)\n     }\n+\n+    pub(crate) fn retain_active(&mut self) {\n+        self.tasks.retain(|_, task| {\n+            if task.completed_for == 0 {\n+                return true;\n+            }\n+            task.completed_for += 1;\n+            task.completed_for <= Self::RETAIN_COMPLETED_FOR\n+        })\n+    }\n }\n \n impl From<proto::tasks::Stats> for Stats {\n"", ""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n""]",3,"[""1bcf88670b50155b50071e707f98f30cea0b7a24"", ""9ef5c0d14193a9abb09b39856f58477d1f4b0d77"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c""]","[""feat"", ""fix"", ""refactor""]"
"autostart feature fixed,licensing,add benchmark for known-slow table expression","[""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n""]",3,"[""bed78248c941d57ad4cc20a455147e186e97c7a1"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""e9617f0854030e70365eb264bcb3b58078e79e9e""]","[""fix"", ""docs"", ""test""]"
"update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909,only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,add props to get color and label from a route","[""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n"", ""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/src/components/BottomNavigation.js b/src/components/BottomNavigation.js\nindex 1b72302..7d8ea75 100644\n--- a/src/components/BottomNavigation.js\n+++ b/src/components/BottomNavigation.js\n@@ -24,8 +24,8 @@ const AnimatedPaper = Animated.createAnimatedComponent(Paper);\n \n type Route = {\n   key: string,\n-  title: string,\n-  icon: IconSource,\n+  title?: string,\n+  icon?: IconSource,\n   color?: string,\n };\n \n@@ -51,7 +51,7 @@ type Props<T> = {\n    * - `key`: a unique key to identify the route\n    * - `title`: title of the route to use as the tab label\n    * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n-   * - `color`: color to use as background color for shifting bottom navigation (optional)\n+   * - `color`: color to use as background color for shifting bottom navigation\n    *\n    * Example:\n    *\n@@ -115,11 +115,27 @@ type Props<T> = {\n   /**\n    * Callback which returns a React Element to be used as tab icon.\n    */\n-  renderIcon?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderIcon?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n   /**\n    * Callback which React Element to be used as tab label.\n    */\n-  renderLabel?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderLabel?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n+  /**\n+   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n+   */\n+  getLabelText?: (props: { route: T }) => string,\n+  /**\n+   * Get color for the tab, uses `route.color` by default.\n+   */\n+  getColor?: (props: { route: T }) => string,\n   /**\n    * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n    */\n@@ -159,6 +175,10 @@ type State = {\n    */\n   ripple: Animated.Value,\n   /**\n+   * Animation for the touch feedback, used to determine it's scale and opacity.\n+   */\n+  touch: Animated.Value,\n+  /**\n    * Layout of the tab bar. The width is used to determine the size and position of the ripple.\n    */\n   layout: { height: number, width: number, measured: boolean },\n@@ -173,7 +193,7 @@ const MIN_SHIFT_AMOUNT = 10;\n const MIN_TAB_WIDTH = 96;\n const MAX_TAB_WIDTH = 168;\n const BAR_HEIGHT = 56;\n-const SMALL_RIPPLE_SIZE = 72;\n+const SMALL_RIPPLE_SIZE = 96;\n const ACTIVE_LABEL_SIZE = 14;\n const INACTIVE_LABEL_SIZE = 12;\n \n@@ -251,6 +271,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ),\n       index: new Animated.Value(index),\n       ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n+      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n       layout: { height: 0, width: 0, measured: false },\n       previous: 0,\n     };\n@@ -349,6 +370,15 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n   _handleTabPress = (index: number) => {\n     const { navigationState } = this.props;\n \n+    this.state.touch.setValue(MIN_RIPPLE_SCALE);\n+\n+    Animated.timing(this.state.touch, {\n+      toValue: 1,\n+      duration: 300,\n+      easing: Easing.in(Easing.sin),\n+      useNativeDriver: true,\n+    }).start();\n+\n     if (index !== navigationState.index) {\n       this.props.onIndexChange(index);\n     }\n@@ -376,6 +406,8 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       renderScene,\n       renderIcon,\n       renderLabel,\n+      getLabelText = ({ route }) => route.title,\n+      getColor = ({ route }) => route.color,\n       barStyle,\n       style,\n       theme,\n@@ -400,7 +432,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ? this.state.index.interpolate({\n           inputRange: routes.map((_, i) => i),\n           outputRange: routes.map(\n-            route => route.color || approxBackgroundColor\n+            route => getColor({ route }) || approxBackgroundColor\n           ),\n         })\n       : approxBackgroundColor;\n@@ -416,7 +448,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n           .rgb()\n           .string();\n \n-    const rippleColor = color(textColor)\n+    const touchColor = color(textColor)\n       .alpha(0.12)\n       .rgb()\n       .string();\n@@ -430,22 +462,10 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n \n     // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n     // We need to move it from the left to the active tab and also account for how much that tab has shifted.\n-    const rippleShift =\n-      navigationState.index * tabWidth +\n-      tabWidth / 2 +\n-      this._calculateShift(\n-        this.state.previous,\n-        navigationState.index,\n-        routes.length\n-      );\n \n     return (\n       <View\n-        style={[\n-          styles.container,\n-          { backgroundColor: theme.dark ? white : black },\n-          style,\n-        ]}\n+        style={[styles.container, style]}\n         onLayout={this._handleLayout}\n         pointerEvents={layout.measured ? 'auto' : 'none'}\n       >\n@@ -485,25 +505,30 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n             style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n           >\n             {shifting ? (\n-              // Large ripple with the backround color\n               <Animated.View\n                 pointerEvents=\""none\""\n                 style={[\n                   styles.ripple,\n                   {\n                     // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - layout.width / 2,\n-                    left: rippleShift - layout.width / 2,\n-                    height: layout.width,\n-                    width: layout.width,\n+                    top: BAR_HEIGHT / 2 - layout.width / 8,\n+                    left:\n+                      navigationState.index * tabWidth +\n+                      tabWidth / 2 -\n+                      layout.width / 8,\n+                    height: layout.width / 4,\n+                    width: layout.width / 4,\n                     borderRadius: layout.width / 2,\n-                    backgroundColor: routes[navigationState.index].color,\n+                    backgroundColor: getColor({\n+                      route: routes[navigationState.index],\n+                    }),\n                     transform: [\n+                      { translateX: this.state.shifts[navigationState.index] },\n                       {\n                         // Scale to twice the size  to ensure it covers the whole tab bar\n                         scale: this.state.ripple.interpolate({\n                           inputRange: [0, 1],\n-                          outputRange: [0, 2],\n+                          outputRange: [0, 8],\n                         }),\n                       },\n                     ],\n@@ -515,36 +540,36 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                 ]}\n               />\n             ) : null}\n-            {shifting ? (\n-              // Small subtle ripple on touch\n-              <Animated.View\n-                pointerEvents=\""none\""\n-                style={[\n-                  styles.ripple,\n-                  {\n-                    // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n-                    left: rippleShift - SMALL_RIPPLE_SIZE / 2,\n-                    height: SMALL_RIPPLE_SIZE,\n-                    width: SMALL_RIPPLE_SIZE,\n-                    borderRadius: SMALL_RIPPLE_SIZE / 2,\n-                    backgroundColor: rippleColor,\n-                    transform: [\n-                      {\n-                        scale: this.state.ripple.interpolate({\n-                          inputRange: [0, 0.5, 1],\n-                          outputRange: [0, 1, 1],\n-                        }),\n-                      },\n-                    ],\n-                    opacity: this.state.ripple.interpolate({\n-                      inputRange: [0, MIN_RIPPLE_SCALE, 0.25, 0.5],\n-                      outputRange: [0, 0, 1, 0],\n-                    }),\n-                  },\n-                ]}\n-              />\n-            ) : null}\n+            <Animated.View\n+              pointerEvents=\""none\""\n+              style={[\n+                styles.ripple,\n+                {\n+                  // Set top and left values so that the ripple's center is same as the tab's center\n+                  top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n+                  left:\n+                    navigationState.index * tabWidth +\n+                    tabWidth / 2 -\n+                    SMALL_RIPPLE_SIZE / 2,\n+                  height: SMALL_RIPPLE_SIZE,\n+                  width: SMALL_RIPPLE_SIZE,\n+                  borderRadius: SMALL_RIPPLE_SIZE / 2,\n+                  backgroundColor: touchColor,\n+                  transform: [\n+                    {\n+                      translateX: shifting\n+                        ? this.state.shifts[navigationState.index]\n+                        : 0,\n+                    },\n+                    { scale: this.state.touch },\n+                  ],\n+                  opacity: this.state.touch.interpolate({\n+                    inputRange: [0, 0.5, 1],\n+                    outputRange: [0, 1, 0],\n+                  }),\n+                },\n+              ]}\n+            />\n             {routes.map((route, index) => {\n               const shift = this.state.shifts[index];\n               const focused = this.state.tabs[index];\n@@ -607,7 +632,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderIcon ? (\n-                          renderIcon({ route, focused: true })\n+                          renderIcon({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <Icon\n                             style={styles.icon}\n@@ -625,7 +654,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderIcon ? (\n-                            renderIcon({ route, focused: false })\n+                            renderIcon({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <Icon\n                               style={styles.icon}\n@@ -652,7 +685,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderLabel ? (\n-                          renderLabel({ route, focused: true })\n+                          renderLabel({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <AnimatedText\n                             style={[\n@@ -662,7 +699,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                               },\n                             ]}\n                           >\n-                            {route.title}\n+                            {getLabelText({ route })}\n                           </AnimatedText>\n                         )}\n                       </Animated.View>\n@@ -674,7 +711,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderLabel ? (\n-                            renderLabel({ route, focused: false })\n+                            renderLabel({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <AnimatedText\n                               style={[\n@@ -684,7 +725,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                                 },\n                               ]}\n                             >\n-                              {route.title}\n+                              {getLabelText({ route })}\n                             </AnimatedText>\n                           )}\n                         </Animated.View>\n""]",3,"[""c2ee5cd5e709afd15c5565ee009a0d204403a119"", ""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""ded26d768ff432ad3bde3c0aa1e95ce50726100a""]","[""docs"", ""cicd"", ""feat""]"
"upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.,only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.","[""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n"", ""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n""]",3,"[""454003841aabeb74396d73541378bfa59c75b5db"", ""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c""]","[""build"", ""cicd"", ""refactor""]"
"enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>,wrong icon reference

Signed-off-by: Pranav C <pranavxc@gmail.com>,ensure checksum persist flushes to disk","[""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n"", ""diff --git a/packages/nc-gui/components.d.ts b/packages/nc-gui/components.d.ts\nindex b7e6585..bb86478 100644\n--- a/packages/nc-gui/components.d.ts\n+++ b/packages/nc-gui/components.d.ts\n@@ -81,7 +81,6 @@ declare module '@vue/runtime-core' {\n     ClaritySuccessLine: typeof import('~icons/clarity/success-line')['default']\n     EvaEmailOutline: typeof import('~icons/eva/email-outline')['default']\n     IcBaselineMoreVert: typeof import('~icons/ic/baseline-more-vert')['default']\n-    Icon: typeof import('~icons/ic/on')['default']\n     IcOutlineInsertDriveFile: typeof import('~icons/ic/outline-insert-drive-file')['default']\n     IcRoundEdit: typeof import('~icons/ic/round-edit')['default']\n     IcRoundKeyboardArrowDown: typeof import('~icons/ic/round-keyboard-arrow-down')['default']\n"", ""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n""]",3,"[""fd8e563cc19ca4684885d4692acee6bebcca4ada"", ""d1d55e787b7d07f763852602b9939a5394607fd9"", ""b7ce2894fd1794064bd6db4ed730bb6cb7728739""]","[""feat"", ""fix"", ""test""]"
"Fix typo,ensure checksum persist flushes to disk,docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>","[""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n"", ""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n""]",3,"[""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""b7ce2894fd1794064bd6db4ed730bb6cb7728739"", ""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf""]","[""docs"", ""test"", ""build""]"
"print errors without stacktrace,increment failing test retries,update wrapping tests for v7","[""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n"", ""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n""]",3,"[""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57"", ""317f4eefecddfb1392ca71d551840f446feee302""]","[""fix"", ""cicd"", ""test""]"
"update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909,wrong icon reference

Signed-off-by: Pranav C <pranavxc@gmail.com>,publish sdks after docs/build","[""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n"", ""diff --git a/packages/nc-gui/components.d.ts b/packages/nc-gui/components.d.ts\nindex b7e6585..bb86478 100644\n--- a/packages/nc-gui/components.d.ts\n+++ b/packages/nc-gui/components.d.ts\n@@ -81,7 +81,6 @@ declare module '@vue/runtime-core' {\n     ClaritySuccessLine: typeof import('~icons/clarity/success-line')['default']\n     EvaEmailOutline: typeof import('~icons/eva/email-outline')['default']\n     IcBaselineMoreVert: typeof import('~icons/ic/baseline-more-vert')['default']\n-    Icon: typeof import('~icons/ic/on')['default']\n     IcOutlineInsertDriveFile: typeof import('~icons/ic/outline-insert-drive-file')['default']\n     IcRoundEdit: typeof import('~icons/ic/round-edit')['default']\n     IcRoundKeyboardArrowDown: typeof import('~icons/ic/round-keyboard-arrow-down')['default']\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n""]",3,"[""c2ee5cd5e709afd15c5565ee009a0d204403a119"", ""d1d55e787b7d07f763852602b9939a5394607fd9"", ""6c9cb638cb4d1ecc42632fcf389c24898c5b3244""]","[""docs"", ""fix"", ""cicd""]"
"only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,never call ""onStart"" prop when idle,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>","[""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/packages/core/src/SpringValue.ts b/packages/core/src/SpringValue.ts\nindex 18494a8..cbc4f27 100644\n--- a/packages/core/src/SpringValue.ts\n+++ b/packages/core/src/SpringValue.ts\n@@ -596,11 +596,11 @@ export class SpringValue<T = any> extends AnimationValue<T> {\n   /** Notify change observers */\n   protected _onChange(value: T, idle = false) {\n     const anim = this.animation\n-    if (!anim.changed) {\n+    if (!anim.changed && !idle) {\n       anim.changed = true\n       // The \""onStart\"" prop is called on the first change after entering the\n       // frameloop, but never for immediate animations.\n-      if (anim.onStart && !anim.immediate) {\n+      if (anim.onStart) {\n         anim.onStart(this)\n       }\n     }\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n""]",3,"[""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""c8e0ae8612df3d6f2831acc004aaac332f6105e4"", ""e12d9e77a6fd531a22325337838a841b1c67f00d""]","[""cicd"", ""fix"", ""docs""]"
"spring version, core version,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909,small error msg improvement

refs #1005","[""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n"", ""diff --git a/internal/pipe/git/errors.go b/internal/pipe/git/errors.go\nindex a8c15d5..13dfb56 100644\n--- a/internal/pipe/git/errors.go\n+++ b/internal/pipe/git/errors.go\n@@ -11,7 +11,7 @@ type ErrDirty struct {\n }\n \n func (e ErrDirty) Error() string {\n-\treturn fmt.Sprintf(\""git is currently in a dirty state:\\n%v\"", e.status)\n+\treturn fmt.Sprintf(\""git is currently in a dirty state, please check in your pipeline what can be changing the following files:\\n%v\"", e.status)\n }\n \n // ErrWrongRef happens when the HEAD reference is different from the tag being built\n""]",3,"[""c55591ba157298a9c5816693c102a89dfd058830"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119"", ""a62314d9bb632be6af026686615d14b912250512""]","[""build"", ""docs"", ""refactor""]"
"wrong icon reference

Signed-off-by: Pranav C <pranavxc@gmail.com>,updated react demo parcel command,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.","[""diff --git a/packages/nc-gui/components.d.ts b/packages/nc-gui/components.d.ts\nindex b7e6585..bb86478 100644\n--- a/packages/nc-gui/components.d.ts\n+++ b/packages/nc-gui/components.d.ts\n@@ -81,7 +81,6 @@ declare module '@vue/runtime-core' {\n     ClaritySuccessLine: typeof import('~icons/clarity/success-line')['default']\n     EvaEmailOutline: typeof import('~icons/eva/email-outline')['default']\n     IcBaselineMoreVert: typeof import('~icons/ic/baseline-more-vert')['default']\n-    Icon: typeof import('~icons/ic/on')['default']\n     IcOutlineInsertDriveFile: typeof import('~icons/ic/outline-insert-drive-file')['default']\n     IcRoundEdit: typeof import('~icons/ic/round-edit')['default']\n     IcRoundKeyboardArrowDown: typeof import('~icons/ic/round-keyboard-arrow-down')['default']\n"", ""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n""]",3,"[""d1d55e787b7d07f763852602b9939a5394607fd9"", ""32b92cfa0b74a6c25990e32ac6aab12b8496794c"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c""]","[""fix"", ""build"", ""refactor""]"
"Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.,add spacing in comment fix lint (#8555),assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>","[""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n"", ""diff --git a/src/components/nav/test/basic/app-module.ts b/src/components/nav/test/basic/app-module.ts\nindex 467917a..375e662 100644\n--- a/src/components/nav/test/basic/app-module.ts\n+++ b/src/components/nav/test/basic/app-module.ts\n@@ -633,7 +633,7 @@ export class Tab3 {\n   }\n \n   presentModal() {\n-    //this.modalCtrl.create(MyModal).present();\n+    // this.modalCtrl.create(MyModal).present();\n   }\n \n   selectPrevious() {\n"", ""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n""]",3,"[""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3"", ""af880ac5b4fecbc6c4f3d1eee0d95f326e8bd9d1"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3""]","[""test"", ""docs"", ""build""]"
"add numberOfLines prop to DataTableTitle (#863)

Closes #848,repository creation,update wrapping tests for v7","[""diff --git a/src/components/DataTable/DataTableTitle.js b/src/components/DataTable/DataTableTitle.js\nindex bfcf07e..d764fd5 100644\n--- a/src/components/DataTable/DataTableTitle.js\n+++ b/src/components/DataTable/DataTableTitle.js\n@@ -27,6 +27,10 @@ type Props = React.ElementConfig<typeof TouchableWithoutFeedback> & {|\n    */\n   sortDirection?: 'ascending' | 'descending',\n   /**\n+   * The number of lines to show.\n+   */\n+  numberOfLines?: number,\n+  /**\n    * Function to execute on press.\n    */\n   onPress?: () => mixed,\n@@ -44,6 +48,10 @@ type State = {\n class DataTableTitle extends React.Component<Props, State> {\n   static displayName = 'DataTable.Title';\n \n+  static defaultProps = {\n+    numberOfLines: 1,\n+  };\n+\n   state = {\n     spinAnim: new Animated.Value(\n       this.props.sortDirection === 'ascending' ? 0 : 1\n@@ -70,6 +78,7 @@ class DataTableTitle extends React.Component<Props, State> {\n       sortDirection,\n       theme,\n       style,\n+      numberOfLines,\n       ...rest\n     } = this.props;\n \n@@ -99,7 +108,7 @@ class DataTableTitle extends React.Component<Props, State> {\n               styles.cell,\n               sortDirection ? styles.sorted : { color: textColor },\n             ]}\n-            numberOfLines={1}\n+            numberOfLines={numberOfLines}\n           >\n             {children}\n           </Text>\n"", ""diff --git a/server/src/services/repository.service.ts b/server/src/services/repository.service.ts\nindex 3869c98..d675b30 100644\n--- a/server/src/services/repository.service.ts\n+++ b/server/src/services/repository.service.ts\n@@ -19,6 +19,8 @@ export class RepositoryService {\n       return;\n     }\n \n+    await this.createTeam(this.github, this.getTeamName(course), course.id);\n+\n     const studentRepo = getCustomRepository(StudentRepository);\n     const students = await studentRepo.findActiveByCourseId(this.courseId);\n \n@@ -31,8 +33,8 @@ export class RepositoryService {\n         if (mentorGithubId) {\n           await this.inviteMentor(mentorGithubId, course);\n         }\n-        await this.addTeamToRepository(this.github, course, student.githubId);\n       }\n+      await this.addTeamToRepository(this.github, course, student.githubId);\n       if (record?.repository) {\n         result.push({ repository: record.repository });\n       }\n"", ""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n""]",3,"[""f9a094918b62534614c47aa8a13f33aec751a1e0"", ""87d5d4e55ab7149b593d29410f1fe426ba2447d4"", ""317f4eefecddfb1392ca71d551840f446feee302""]","[""feat"", ""fix"", ""test""]"
"setup jest and add m.ts tests,never call ""onStart"" prop when idle,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>","[""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n"", ""diff --git a/packages/core/src/SpringValue.ts b/packages/core/src/SpringValue.ts\nindex 18494a8..cbc4f27 100644\n--- a/packages/core/src/SpringValue.ts\n+++ b/packages/core/src/SpringValue.ts\n@@ -596,11 +596,11 @@ export class SpringValue<T = any> extends AnimationValue<T> {\n   /** Notify change observers */\n   protected _onChange(value: T, idle = false) {\n     const anim = this.animation\n-    if (!anim.changed) {\n+    if (!anim.changed && !idle) {\n       anim.changed = true\n       // The \""onStart\"" prop is called on the first change after entering the\n       // frameloop, but never for immediate animations.\n-      if (anim.onStart && !anim.immediate) {\n+      if (anim.onStart) {\n         anim.onStart(this)\n       }\n     }\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n""]",3,"[""229b53a632ea97d47c4be11f096bdd828fb415d8"", ""c8e0ae8612df3d6f2831acc004aaac332f6105e4"", ""f823cf28652987d43c8324b4f5b203240032383a""]","[""test"", ""fix"", ""feat""]"
"add getter for protocol id,use `regexp_instr != 0` instead of `REGEXP` keyword,add spacing in comment fix lint (#8555)","[""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n"", ""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n"", ""diff --git a/src/components/nav/test/basic/app-module.ts b/src/components/nav/test/basic/app-module.ts\nindex 467917a..375e662 100644\n--- a/src/components/nav/test/basic/app-module.ts\n+++ b/src/components/nav/test/basic/app-module.ts\n@@ -633,7 +633,7 @@ export class Tab3 {\n   }\n \n   presentModal() {\n-    //this.modalCtrl.create(MyModal).present();\n+    // this.modalCtrl.create(MyModal).present();\n   }\n \n   selectPrevious() {\n""]",3,"[""dc5238b2bda98a7c4f2fe9584fc3b0191a408109"", ""06e2be4e2019b6fa714e1fcb34485860ef1ede79"", ""af880ac5b4fecbc6c4f3d1eee0d95f326e8bd9d1""]","[""feat"", ""fix"", ""docs""]"
"add riscv64gc-unknown-linux-gnu,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,fixed docker link tests","[""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n""]",3,"[""173553c0372e66e03bdab19e0e6c2dd44daa14a0"", ""e12d9e77a6fd531a22325337838a841b1c67f00d"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f""]","[""cicd"", ""docs"", ""test""]"
"only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,initialize threejs objects in defaultRef, to fix undefined type errors,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>","[""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n""]",3,"[""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""2561f4ade46fc9d59f289f328cc77733a6443697"", ""e12d9e77a6fd531a22325337838a841b1c67f00d""]","[""cicd"", ""fix"", ""docs""]"
"Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>,allow disabling dynamic queue,setup jest and add m.ts tests","[""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n"", ""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n""]",3,"[""f823cf28652987d43c8324b4f5b203240032383a"", ""9ef5c0d14193a9abb09b39856f58477d1f4b0d77"", ""229b53a632ea97d47c4be11f096bdd828fb415d8""]","[""feat"", ""fix"", ""test""]"
"add .nullif() example,add riscv64gc-unknown-linux-gnu,detach ViewControllers when not active","[""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n"", ""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n"", ""diff --git a/ionic/components/nav/nav-controller.ts b/ionic/components/nav/nav-controller.ts\nindex becdd99..1cc3c31 100644\n--- a/ionic/components/nav/nav-controller.ts\n+++ b/ionic/components/nav/nav-controller.ts\n@@ -1410,6 +1410,9 @@ export class NavController extends Ion {\n       // set the ComponentRef's instance to this ViewController\n       view.setInstance(component);\n \n+      // remember the ChangeDetectorRef for this ViewController\n+      view.setChangeDetector(hostViewRef.changeDetectorRef);\n+\n       // remember the ElementRef to the ion-page elementRef that was just created\n       view.setPageRef(pageElementRef);\n \ndiff --git a/ionic/components/nav/view-controller.ts b/ionic/components/nav/view-controller.ts\nindex 3207fa2..069c74d 100644\n--- a/ionic/components/nav/view-controller.ts\n+++ b/ionic/components/nav/view-controller.ts\n@@ -1,4 +1,4 @@\n-import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer} from 'angular2/core';\n+import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer, ChangeDetectorRef} from 'angular2/core';\n \n import {Navbar} from '../navbar/navbar';\n import {NavController, NavOptions} from './nav-controller';\n@@ -33,6 +33,7 @@ export class ViewController {\n   private _nbVwRef: ViewContainerRef;\n   private _onDismiss: Function = null;\n   private _pgRef: ElementRef;\n+  private _cd: ChangeDetectorRef;\n   protected _nav: NavController;\n \n   /**\n@@ -166,6 +167,13 @@ export class ViewController {\n   /**\n    * @private\n    */\n+  setChangeDetector(cd: ChangeDetectorRef) {\n+    this._cd = cd;\n+  }\n+\n+  /**\n+   * @private\n+   */\n   setInstance(instance: any) {\n     this.instance = instance;\n   }\n@@ -467,6 +475,14 @@ export class ViewController {\n    * The view is about to enter and become the active view.\n    */\n   willEnter() {\n+    if (this._cd) {\n+      // ensure this has been re-attached to the change detector\n+      this._cd.reattach();\n+\n+      // detect changes before we run any user code\n+      this._cd.detectChanges();\n+    }\n+\n     ctrlFn(this, 'onPageWillEnter');\n   }\n \n@@ -496,6 +512,10 @@ export class ViewController {\n    */\n   didLeave() {\n     ctrlFn(this, 'onPageDidLeave');\n+\n+    // when this is not the active page\n+    // we no longer need to detect changes\n+    this._cd && this._cd.detach();\n   }\n \n   /**\n""]",3,"[""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21"", ""173553c0372e66e03bdab19e0e6c2dd44daa14a0"", ""b282e90e2cbb74559aab79eee8443a4d7c85502a""]","[""docs"", ""cicd"", ""feat""]"
"add a branch name to Slack notifications (#14793),add comments for the Handler,[gn] fix include_dirs ordering error","[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n"", ""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 11adaa7..ed64b17 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -240,6 +240,14 @@ static_library(\""electron_lib\"") {\n     \""brightray\"",\n     \""build/node\"",\n   ]\n+  include_dirs = [\n+    \""chromium_src\"",\n+    \"".\"",\n+    \""$target_gen_dir\"",\n+    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n+    # API of blink, then delete this include dir.\n+    \""//third_party/WebKit/Source\"",\n+  ]\n   if (enable_desktop_capturer) {\n     deps += [ \""//third_party/webrtc/modules/desktop_capture\"" ]\n   }\n@@ -275,14 +283,6 @@ static_library(\""electron_lib\"") {\n     # Disable warnings for g_settings_list_schemas.\n     \""GLIB_DISABLE_DEPRECATION_WARNINGS\"",\n   ]\n-  include_dirs = [\n-    \""chromium_src\"",\n-    \"".\"",\n-    \""$target_gen_dir\"",\n-    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n-    # API of blink, then delete this include dir.\n-    \""//third_party/WebKit/Source\"",\n-  ]\n   if (is_component_build) {\n     defines += [\n       # Import V8 symbols from shared library (node.dll / libnode.so)\n""]",3,"[""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da"", ""036a0ff49a7dade0e04c9c07071a1ff49133ee24"", ""c44cf88a6ec54e5ddd99d8348bcc57b301ec7945""]","[""cicd"", ""docs"", ""build""]"
"split release docs build into separate workflow,detach ViewControllers when not active,docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>","[""diff --git a/.github/workflows/ibis-docs-lint.yml b/.github/workflows/ibis-docs-lint.yml\nindex 753d57d..3e0aa15 100644\n--- a/.github/workflows/ibis-docs-lint.yml\n+++ b/.github/workflows/ibis-docs-lint.yml\n@@ -88,14 +88,14 @@ jobs:\n         run: poetry run pytest --benchmark-only --benchmark-json .benchmarks/output.json ibis/tests/benchmarks\n \n       - uses: tibdex/github-app-token@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         id: generate-token\n         with:\n           app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}\n           private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}\n \n       - uses: benchmark-action/github-action-benchmark@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         with:\n           tool: pytest\n           github-token: ${{ steps.generate-token.outputs.token }}\n@@ -107,6 +107,7 @@ jobs:\n \n   docs:\n     runs-on: ubuntu-latest\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n     needs:\n       # wait on benchmarks to prevent a race condition when pushing to the\n       # gh-pages branch\n@@ -124,51 +125,25 @@ jobs:\n           authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n           extraPullNames: nix-community,poetry2nix\n \n-      - name: Generate a GitHub token\n-        if: ${{ github.event_name == 'push' }}\n-        uses: tibdex/github-app-token@v1\n-        id: generate_token\n-        with:\n-          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n-          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n-\n-      - name: checkout\n-        if: ${{ github.event_name == 'push' }}\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          token: ${{ steps.generate_token.outputs.token }}\n-\n       - name: checkout\n-        if: ${{ github.event_name != 'push' }}\n         uses: actions/checkout@v3\n \n-      - name: Configure git info\n-        if: ${{ github.event_name == 'push' }}\n-        run: |\n-          set -euo pipefail\n-\n-          git config user.name 'ibis-docs-bot[bot]'\n-          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n-\n       - name: build docs\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c mkdocs build\n \n       - name: verify internal links\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c just checklinks --offline --no-progress\n \n-      - name: Pull gh-pages changes\n+      - name: Configure git info\n         if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n-          git fetch origin gh-pages\n-          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n \n       - name: build and push dev docs\n-        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/') }}\n+        if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n@@ -180,19 +155,6 @@ jobs:\n               --message 'docs(dev): ibis@${{ github.sha }}' \\\n                 dev\n \n-      - name: build and push docs on tag\n-        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}\n-        run: |\n-          set -euo pipefail\n-\n-          nix develop -f shell.nix --keep-going -c \\\n-            mic deploy \\\n-              --push \\\n-              --rebase \\\n-              --prefix docs \\\n-              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n-              \""${GITHUB_REF_NAME}\"" latest\n-\n   simulate_release:\n     runs-on: ubuntu-latest\n     steps:\ndiff --git a/.github/workflows/ibis-docs-release.yml b/.github/workflows/ibis-docs-release.yml\nnew file mode 100644\nindex 0000000..da7ee49\n--- /dev/null\n+++ b/.github/workflows/ibis-docs-release.yml\n@@ -0,0 +1,63 @@\n+# vim: filetype=yaml\n+name: Docs Release Build\n+\n+on:\n+  release:\n+    types:\n+      - published\n+jobs:\n+  docs:\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: install nix\n+        uses: cachix/install-nix-action@v17\n+        with:\n+          nix_path: nixpkgs=channel:nixos-unstable-small\n+\n+      - name: setup cachix\n+        uses: cachix/cachix-action@v10\n+        with:\n+          name: ibis\n+          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n+          extraPullNames: nix-community,poetry2nix\n+\n+      - name: Generate a GitHub token\n+        uses: tibdex/github-app-token@v1\n+        id: generate_token\n+        with:\n+          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n+          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n+\n+      - name: checkout\n+        uses: actions/checkout@v3\n+        with:\n+          fetch-depth: 0\n+          token: ${{ steps.generate_token.outputs.token }}\n+\n+      - name: Configure git info\n+        run: |\n+          set -euo pipefail\n+\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n+\n+      - name: Pull gh-pages changes\n+        run: |\n+          set -euo pipefail\n+\n+          git fetch origin gh-pages\n+          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+\n+      - name: build and push docs on tag\n+        run: |\n+          set -euo pipefail\n+\n+          nix develop -f shell.nix --keep-going -c \\\n+            mic deploy \\\n+              --push \\\n+              --rebase \\\n+              --update-aliases \\\n+              --prefix docs \\\n+              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n+              \""${GITHUB_REF_NAME}\"" latest\n"", ""diff --git a/ionic/components/nav/nav-controller.ts b/ionic/components/nav/nav-controller.ts\nindex becdd99..1cc3c31 100644\n--- a/ionic/components/nav/nav-controller.ts\n+++ b/ionic/components/nav/nav-controller.ts\n@@ -1410,6 +1410,9 @@ export class NavController extends Ion {\n       // set the ComponentRef's instance to this ViewController\n       view.setInstance(component);\n \n+      // remember the ChangeDetectorRef for this ViewController\n+      view.setChangeDetector(hostViewRef.changeDetectorRef);\n+\n       // remember the ElementRef to the ion-page elementRef that was just created\n       view.setPageRef(pageElementRef);\n \ndiff --git a/ionic/components/nav/view-controller.ts b/ionic/components/nav/view-controller.ts\nindex 3207fa2..069c74d 100644\n--- a/ionic/components/nav/view-controller.ts\n+++ b/ionic/components/nav/view-controller.ts\n@@ -1,4 +1,4 @@\n-import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer} from 'angular2/core';\n+import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer, ChangeDetectorRef} from 'angular2/core';\n \n import {Navbar} from '../navbar/navbar';\n import {NavController, NavOptions} from './nav-controller';\n@@ -33,6 +33,7 @@ export class ViewController {\n   private _nbVwRef: ViewContainerRef;\n   private _onDismiss: Function = null;\n   private _pgRef: ElementRef;\n+  private _cd: ChangeDetectorRef;\n   protected _nav: NavController;\n \n   /**\n@@ -166,6 +167,13 @@ export class ViewController {\n   /**\n    * @private\n    */\n+  setChangeDetector(cd: ChangeDetectorRef) {\n+    this._cd = cd;\n+  }\n+\n+  /**\n+   * @private\n+   */\n   setInstance(instance: any) {\n     this.instance = instance;\n   }\n@@ -467,6 +475,14 @@ export class ViewController {\n    * The view is about to enter and become the active view.\n    */\n   willEnter() {\n+    if (this._cd) {\n+      // ensure this has been re-attached to the change detector\n+      this._cd.reattach();\n+\n+      // detect changes before we run any user code\n+      this._cd.detectChanges();\n+    }\n+\n     ctrlFn(this, 'onPageWillEnter');\n   }\n \n@@ -496,6 +512,10 @@ export class ViewController {\n    */\n   didLeave() {\n     ctrlFn(this, 'onPageDidLeave');\n+\n+    // when this is not the active page\n+    // we no longer need to detect changes\n+    this._cd && this._cd.detach();\n   }\n \n   /**\n"", ""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n""]",3,"[""32845e1bbd1efb5dbc16f671049509a409ba25ce"", ""b282e90e2cbb74559aab79eee8443a4d7c85502a"", ""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf""]","[""cicd"", ""feat"", ""build""]"
"verify checkpoint listeners are notified,fix netty dependency

netty-bom 4.1.70 contains the changes from pull request
https://github.com/netty/netty/pull/11798, which moved the classes out
of the native modules to make sure the same classes don't end up on the
classpath multiple times. For us it means that we need to depend on both
the native and classes modules. However, since we don't use the native
module directly (only classes that were moved to this classes module),
we need to force the dependency plugin to consider the native module as
used.,print errors without stacktrace,add getter for protocol id","[""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n"", ""diff --git a/atomix/cluster/pom.xml b/atomix/cluster/pom.xml\nindex a477873..b6db695 100644\n--- a/atomix/cluster/pom.xml\n+++ b/atomix/cluster/pom.xml\n@@ -69,6 +69,10 @@\n     </dependency>\n     <dependency>\n       <groupId>io.netty</groupId>\n+      <artifactId>netty-transport-classes-epoll</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.netty</groupId>\n       <artifactId>netty-transport-native-epoll</artifactId>\n       <classifier>linux-x86_64</classifier>\n     </dependency>\n@@ -278,6 +282,7 @@\n             <dependency>uk.co.real-logic:sbe-tool</dependency>\n             <dependency>net.jqwik:jqwik</dependency>\n             <dependency>io.netty:netty-tcnative-boringssl-static</dependency>\n+            <dependency>io.netty:netty-transport-native-epoll</dependency>\n           </usedDependencies>\n         </configuration>\n       </plugin>\n"", ""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n""]",4,"[""e0198f74b81da3663144cfe1d971939319f82a0f"", ""f00a4d3e307b89842250358ee432e6800bb24362"", ""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""dc5238b2bda98a7c4f2fe9584fc3b0191a408109""]","[""test"", ""build"", ""fix"", ""feat""]"
"add a branch name to Slack notifications (#14793),assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,skip flaky test,add comments for the Handler","[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n"", ""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n"", ""diff --git a/test/browser-pool/browser-pool.test.ts b/test/browser-pool/browser-pool.test.ts\nindex 9f21322..7a011b5 100644\n--- a/test/browser-pool/browser-pool.test.ts\n+++ b/test/browser-pool/browser-pool.test.ts\n@@ -128,7 +128,8 @@ describe.each([\n             expect(page.close).toBeDefined();\n         });\n \n-        test('should allow early aborting in case of outer timeout', async () => {\n+        // TODO: this test is very flaky in the CI\n+        test.skip('should allow early aborting in case of outer timeout', async () => {\n             const timeout = browserPool.operationTimeoutMillis;\n             browserPool.operationTimeoutMillis = 500;\n             // @ts-expect-error mocking private method\n"", ""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n""]",4,"[""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3"", ""e2e8ad25854bd1e7cdbc7f50b50bbd99e04ad47d"", ""036a0ff49a7dade0e04c9c07071a1ff49133ee24""]","[""cicd"", ""build"", ""test"", ""docs""]"
"restructure ClusterTopology to track completed change,add getter for protocol id,added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,setup jest and add m.ts tests","[""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n"", ""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n"", ""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n""]",4,"[""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2"", ""dc5238b2bda98a7c4f2fe9584fc3b0191a408109"", ""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""229b53a632ea97d47c4be11f096bdd828fb415d8""]","[""refactor"", ""feat"", ""docs"", ""test""]"
"wrong icon reference

Signed-off-by: Pranav C <pranavxc@gmail.com>,xfail on to_parquet and to_csv that use pyarrow write options,spring version, core version,export a modal transition preset","[""diff --git a/packages/nc-gui/components.d.ts b/packages/nc-gui/components.d.ts\nindex b7e6585..bb86478 100644\n--- a/packages/nc-gui/components.d.ts\n+++ b/packages/nc-gui/components.d.ts\n@@ -81,7 +81,6 @@ declare module '@vue/runtime-core' {\n     ClaritySuccessLine: typeof import('~icons/clarity/success-line')['default']\n     EvaEmailOutline: typeof import('~icons/eva/email-outline')['default']\n     IcBaselineMoreVert: typeof import('~icons/ic/baseline-more-vert')['default']\n-    Icon: typeof import('~icons/ic/on')['default']\n     IcOutlineInsertDriveFile: typeof import('~icons/ic/outline-insert-drive-file')['default']\n     IcRoundEdit: typeof import('~icons/ic/round-edit')['default']\n     IcRoundKeyboardArrowDown: typeof import('~icons/ic/round-keyboard-arrow-down')['default']\n"", ""diff --git a/ibis/backends/tests/test_export.py b/ibis/backends/tests/test_export.py\nindex 4d536d7..5bb9775 100644\n--- a/ibis/backends/tests/test_export.py\n+++ b/ibis/backends/tests/test_export.py\n@@ -222,18 +222,23 @@ def test_table_to_parquet(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\""), [({\""version\"": \""1.0\""}), ({\""version\"": \""2.6\""})])\n-def test_table_to_parquet_writer_kwargs(kwargs, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.NotSupportedError,\n+)\n+@pytest.mark.parametrize(\""version\"", [\""1.0\"", \""2.6\""])\n+def test_table_to_parquet_writer_kwargs(version, tmp_path, backend, awards_players):\n     outparquet = tmp_path / \""out.parquet\""\n-    awards_players.to_parquet(outparquet, **kwargs)\n+    awards_players.to_parquet(outparquet, version=version)\n \n     df = pd.read_parquet(outparquet)\n \n     backend.assert_frame_equal(awards_players.to_pandas(), df)\n \n-    file = pa.parquet.ParquetFile(outparquet)\n+    md = pa.parquet.read_metadata(outparquet)\n \n-    assert file.metadata.format_version == kwargs[\""version\""]\n+    assert md.format_version == version\n \n \n @pytest.mark.notimpl(\n@@ -316,14 +321,20 @@ def test_table_to_csv(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\"", \""delimiter\""), [({\""write_options\"": pcsv.WriteOptions(delimiter=\"";\"")}, \"";\""), ({\""write_options\"": pcsv.WriteOptions(delimiter=\""\\t\"")}, \""\\t\"")])\n-def test_table_to_csv_writer_kwargs(kwargs, delimiter, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.ProgrammingError,\n+)\n+@pytest.mark.parametrize(\""delimiter\"", [\"";\"", \""\\t\""], ids=[\""semicolon\"", \""tab\""])\n+def test_table_to_csv_writer_kwargs(delimiter, tmp_path, awards_players):\n     outcsv = tmp_path / \""out.csv\""\n     # avoid pandas NaNonense\n     awards_players = awards_players.select(\""playerID\"", \""awardID\"", \""yearID\"", \""lgID\"")\n \n-    awards_players.to_csv(outcsv, **kwargs)\n-    pd.read_csv(outcsv, delimiter=delimiter)\n+    awards_players.to_csv(outcsv, write_options=pcsv.WriteOptions(delimiter=delimiter))\n+    df = pd.read_csv(outcsv, delimiter=delimiter, nrows=1)\n+    assert len(df) == 1\n \n \n @pytest.mark.parametrize(\n"", ""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n""]",4,"[""d1d55e787b7d07f763852602b9939a5394607fd9"", ""bedc7950b24c37809e36a585b7985d5aa5e3e458"", ""c55591ba157298a9c5816693c102a89dfd058830"", ""535708ae50aecb452560a23356fd396f99ef13a2""]","[""fix"", ""test"", ""build"", ""refactor""]"
"licensing,assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,do not use scripts and binaries from the libcc repo,support use meta key select multiple element","[""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n""]",4,"[""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3"", ""45837af24a33308a70a3454f0f650f9fe728e272"", ""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8""]","[""docs"", ""build"", ""cicd"", ""feat""]"
"add benchmark for known-slow table expression,autostart feature fixed,export a modal transition preset,add a branch name to Slack notifications (#14793)","[""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n"", ""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n""]",4,"[""e9617f0854030e70365eb264bcb3b58078e79e9e"", ""bed78248c941d57ad4cc20a455147e186e97c7a1"", ""535708ae50aecb452560a23356fd396f99ef13a2"", ""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da""]","[""test"", ""fix"", ""refactor"", ""cicd""]"
"increment failing test retries,autostart feature fixed,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>,added suported tuple types","[""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n"", ""diff --git a/src/List/Tuple.ts b/src/List/Tuple.ts\nindex 4c59caa..6e45503 100644\n--- a/src/List/Tuple.ts\n+++ b/src/List/Tuple.ts\n@@ -1,15 +1,17 @@\n-/** A [[Tuple]]\n+import {NonNullable} from '../Object/NonNullable'\n+\n+/** A [[Tuple]] (supported)\n  * @param A its type\n- * @returns **`any[]`**\n+ * @returns **`A[]`**\n  * @example\n  * ```ts\n- * type list0 = [1, 2, 3]\n- * type list1 = number[]\n+ * type tuple0 = [1, 20, 42]\n+ * type tuple1 = ['at', 420]\n  * ```\n  */\n-export type Tuple = [\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-]\n+export type Tuple<A = any> = NonNullable<[\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+]>\n""]",4,"[""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57"", ""bed78248c941d57ad4cc20a455147e186e97c7a1"", ""f823cf28652987d43c8324b4f5b203240032383a"", ""2954a0955ce9af6acb345ed1e8328e145ad30475""]","[""cicd"", ""fix"", ""feat"", ""refactor""]"
"added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,remove ubuntu-latest from job title where that is the only os,update wrapping tests for v7,restructure ClusterTopology to track completed change","[""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n"", ""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n""]",4,"[""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""74e9de5ec97dc013a52aa063dff0f40ac74c407b"", ""317f4eefecddfb1392ca71d551840f446feee302"", ""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2""]","[""docs"", ""cicd"", ""test"", ""refactor""]"
"fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.,support use meta key select multiple element,fix build ordering,update `cargo-make` for `v0.35.3`","[""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n"", ""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n"", ""diff --git a/scripts/build.mjs b/scripts/build.mjs\nindex 204854f..b3cf067 100644\n--- a/scripts/build.mjs\n+++ b/scripts/build.mjs\n@@ -3,8 +3,8 @@ import { write } from 'fsxx';\n import { info, success } from './helpers.mjs';\n \n await $`rm -rf dist/*`;\n-await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n await $`unbuild`;\n+await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n \n const packages = [\n   'jsx-runtime',\n"", ""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n""]",4,"[""9be725fa3906323d4bc9788f54eccf74109d632b"", ""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8"", ""c323d59c607cabc91f17a78528d998f376f30b10"", ""0cfc5633d37ea06f645649138323f1820e18bdee""]","[""fix"", ""feat"", ""build"", ""docs""]"
"update `cargo-make` for `v0.35.3`,terminated tasks linger for a bit

Signed-off-by: Eliza Weisman <eliza@buoyant.io>,setup jest and add m.ts tests,repository creation","[""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n"", ""diff --git a/console/src/main.rs b/console/src/main.rs\nindex ebfa315..5328d96 100644\n--- a/console/src/main.rs\n+++ b/console/src/main.rs\n@@ -69,6 +69,7 @@ async fn main() -> Result<(), Box<dyn std::error::Error>> {\n                 .wrap(Wrap { trim: true });\n             f.render_widget(header, chunks[0]);\n             tasks.render(f, chunks[1]);\n+            tasks.retain_active();\n         })?;\n     }\n \ndiff --git a/console/src/tasks.rs b/console/src/tasks.rs\nindex 7be39a4..eb41495 100644\n--- a/console/src/tasks.rs\n+++ b/console/src/tasks.rs\n@@ -19,6 +19,7 @@ struct Task {\n     fields: String,\n     kind: &'static str,\n     stats: Stats,\n+    completed_for: usize,\n }\n \n #[derive(Default, Debug)]\n@@ -28,10 +29,15 @@ struct Stats {\n     idle: Duration,\n     total: Duration,\n }\n+\n impl State {\n+    // How many updates to retain completed tasks for\n+    const RETAIN_COMPLETED_FOR: usize = 6;\n+\n     pub(crate) fn len(&self) -> usize {\n         self.tasks.len()\n     }\n+\n     pub(crate) fn update(&mut self, update: proto::tasks::TaskUpdate) {\n         let new_tasks = update.new_tasks.into_iter().filter_map(|task| {\n             if task.id.is_none() {\n@@ -48,6 +54,7 @@ impl State {\n                 fields: task.string_fields,\n                 kind,\n                 stats: Default::default(),\n+                completed_for: 0,\n             };\n             Some((id, task))\n         });\n@@ -60,7 +67,10 @@ impl State {\n         }\n \n         for proto::SpanId { id } in update.completed {\n-            if self.tasks.remove(&id).is_none() {\n+            if let Some(task) = self.tasks.get_mut(&id) {\n+                task.kind = \""!\"";\n+                task.completed_for = 1;\n+            } else {\n                 tracing::warn!(?id, \""tried to complete a task that didn't exist\"");\n             }\n         }\n@@ -79,7 +89,7 @@ impl State {\n         const DUR_PRECISION: usize = 4;\n         const POLLS_LEN: usize = 5;\n         let rows = self.tasks.values().map(|task| {\n-            let row = Row::new(vec![\n+            let mut row = Row::new(vec![\n                 Cell::from(task.id_hex.as_str()),\n                 // TODO(eliza): is there a way to write a `fmt::Debug` impl\n                 // directly to tui without doing an allocation?\n@@ -105,6 +115,9 @@ impl State {\n                 Cell::from(format!(\""{:>width$}\"", task.stats.polls, width = POLLS_LEN)),\n                 Cell::from(task.fields.as_str()),\n             ]);\n+            if task.completed_for > 0 {\n+                row = row.style(Style::default().add_modifier(style::Modifier::DIM));\n+            }\n             row\n         });\n         let t = Table::new(rows)\n@@ -126,6 +139,16 @@ impl State {\n \n         frame.render_widget(t, area)\n     }\n+\n+    pub(crate) fn retain_active(&mut self) {\n+        self.tasks.retain(|_, task| {\n+            if task.completed_for == 0 {\n+                return true;\n+            }\n+            task.completed_for += 1;\n+            task.completed_for <= Self::RETAIN_COMPLETED_FOR\n+        })\n+    }\n }\n \n impl From<proto::tasks::Stats> for Stats {\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n"", ""diff --git a/server/src/services/repository.service.ts b/server/src/services/repository.service.ts\nindex 3869c98..d675b30 100644\n--- a/server/src/services/repository.service.ts\n+++ b/server/src/services/repository.service.ts\n@@ -19,6 +19,8 @@ export class RepositoryService {\n       return;\n     }\n \n+    await this.createTeam(this.github, this.getTeamName(course), course.id);\n+\n     const studentRepo = getCustomRepository(StudentRepository);\n     const students = await studentRepo.findActiveByCourseId(this.courseId);\n \n@@ -31,8 +33,8 @@ export class RepositoryService {\n         if (mentorGithubId) {\n           await this.inviteMentor(mentorGithubId, course);\n         }\n-        await this.addTeamToRepository(this.github, course, student.githubId);\n       }\n+      await this.addTeamToRepository(this.github, course, student.githubId);\n       if (record?.repository) {\n         result.push({ repository: record.repository });\n       }\n""]",4,"[""0cfc5633d37ea06f645649138323f1820e18bdee"", ""1bcf88670b50155b50071e707f98f30cea0b7a24"", ""229b53a632ea97d47c4be11f096bdd828fb415d8"", ""87d5d4e55ab7149b593d29410f1fe426ba2447d4""]","[""docs"", ""feat"", ""test"", ""fix""]"
"spring version, core version,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.,fixed docker link tests,only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>","[""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n"", ""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n""]",4,"[""c55591ba157298a9c5816693c102a89dfd058830"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f"", ""dbb537a26e388a8d7d17faf131abc30c2f7a84e6""]","[""build"", ""refactor"", ""test"", ""cicd""]"
"add getter for protocol id,never call ""onStart"" prop when idle,Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.,remove appear css animation","[""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n"", ""diff --git a/packages/core/src/SpringValue.ts b/packages/core/src/SpringValue.ts\nindex 18494a8..cbc4f27 100644\n--- a/packages/core/src/SpringValue.ts\n+++ b/packages/core/src/SpringValue.ts\n@@ -596,11 +596,11 @@ export class SpringValue<T = any> extends AnimationValue<T> {\n   /** Notify change observers */\n   protected _onChange(value: T, idle = false) {\n     const anim = this.animation\n-    if (!anim.changed) {\n+    if (!anim.changed && !idle) {\n       anim.changed = true\n       // The \""onStart\"" prop is called on the first change after entering the\n       // frameloop, but never for immediate animations.\n-      if (anim.onStart && !anim.immediate) {\n+      if (anim.onStart) {\n         anim.onStart(this)\n       }\n     }\n"", ""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n"", ""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n""]",4,"[""dc5238b2bda98a7c4f2fe9584fc3b0191a408109"", ""c8e0ae8612df3d6f2831acc004aaac332f6105e4"", ""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3"", ""47ef9104e4a89e80d7cc6c1950bc080841da4a7b""]","[""feat"", ""fix"", ""test"", ""refactor""]"
"add fallible peek_last_token(),added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.,increment failing test retries","[""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n"", ""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n"", ""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n""]",4,"[""63eab619e6166eb6cab948028a7b89bf059dd878"", ""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3"", ""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57""]","[""refactor"", ""docs"", ""test"", ""cicd""]"
"added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.,ensure checksum persist flushes to disk,use `regexp_instr != 0` instead of `REGEXP` keyword","[""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n"", ""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n"", ""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n""]",4,"[""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c"", ""b7ce2894fd1794064bd6db4ed730bb6cb7728739"", ""06e2be4e2019b6fa714e1fcb34485860ef1ede79""]","[""docs"", ""refactor"", ""test"", ""fix""]"
"update wrapping tests for v7,added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,fix netty dependency

netty-bom 4.1.70 contains the changes from pull request
https://github.com/netty/netty/pull/11798, which moved the classes out
of the native modules to make sure the same classes don't end up on the
classpath multiple times. For us it means that we need to depend on both
the native and classes modules. However, since we don't use the native
module directly (only classes that were moved to this classes module),
we need to force the dependency plugin to consider the native module as
used.,split release docs build into separate workflow","[""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/atomix/cluster/pom.xml b/atomix/cluster/pom.xml\nindex a477873..b6db695 100644\n--- a/atomix/cluster/pom.xml\n+++ b/atomix/cluster/pom.xml\n@@ -69,6 +69,10 @@\n     </dependency>\n     <dependency>\n       <groupId>io.netty</groupId>\n+      <artifactId>netty-transport-classes-epoll</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.netty</groupId>\n       <artifactId>netty-transport-native-epoll</artifactId>\n       <classifier>linux-x86_64</classifier>\n     </dependency>\n@@ -278,6 +282,7 @@\n             <dependency>uk.co.real-logic:sbe-tool</dependency>\n             <dependency>net.jqwik:jqwik</dependency>\n             <dependency>io.netty:netty-tcnative-boringssl-static</dependency>\n+            <dependency>io.netty:netty-transport-native-epoll</dependency>\n           </usedDependencies>\n         </configuration>\n       </plugin>\n"", ""diff --git a/.github/workflows/ibis-docs-lint.yml b/.github/workflows/ibis-docs-lint.yml\nindex 753d57d..3e0aa15 100644\n--- a/.github/workflows/ibis-docs-lint.yml\n+++ b/.github/workflows/ibis-docs-lint.yml\n@@ -88,14 +88,14 @@ jobs:\n         run: poetry run pytest --benchmark-only --benchmark-json .benchmarks/output.json ibis/tests/benchmarks\n \n       - uses: tibdex/github-app-token@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         id: generate-token\n         with:\n           app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}\n           private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}\n \n       - uses: benchmark-action/github-action-benchmark@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         with:\n           tool: pytest\n           github-token: ${{ steps.generate-token.outputs.token }}\n@@ -107,6 +107,7 @@ jobs:\n \n   docs:\n     runs-on: ubuntu-latest\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n     needs:\n       # wait on benchmarks to prevent a race condition when pushing to the\n       # gh-pages branch\n@@ -124,51 +125,25 @@ jobs:\n           authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n           extraPullNames: nix-community,poetry2nix\n \n-      - name: Generate a GitHub token\n-        if: ${{ github.event_name == 'push' }}\n-        uses: tibdex/github-app-token@v1\n-        id: generate_token\n-        with:\n-          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n-          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n-\n-      - name: checkout\n-        if: ${{ github.event_name == 'push' }}\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          token: ${{ steps.generate_token.outputs.token }}\n-\n       - name: checkout\n-        if: ${{ github.event_name != 'push' }}\n         uses: actions/checkout@v3\n \n-      - name: Configure git info\n-        if: ${{ github.event_name == 'push' }}\n-        run: |\n-          set -euo pipefail\n-\n-          git config user.name 'ibis-docs-bot[bot]'\n-          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n-\n       - name: build docs\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c mkdocs build\n \n       - name: verify internal links\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c just checklinks --offline --no-progress\n \n-      - name: Pull gh-pages changes\n+      - name: Configure git info\n         if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n-          git fetch origin gh-pages\n-          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n \n       - name: build and push dev docs\n-        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/') }}\n+        if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n@@ -180,19 +155,6 @@ jobs:\n               --message 'docs(dev): ibis@${{ github.sha }}' \\\n                 dev\n \n-      - name: build and push docs on tag\n-        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}\n-        run: |\n-          set -euo pipefail\n-\n-          nix develop -f shell.nix --keep-going -c \\\n-            mic deploy \\\n-              --push \\\n-              --rebase \\\n-              --prefix docs \\\n-              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n-              \""${GITHUB_REF_NAME}\"" latest\n-\n   simulate_release:\n     runs-on: ubuntu-latest\n     steps:\ndiff --git a/.github/workflows/ibis-docs-release.yml b/.github/workflows/ibis-docs-release.yml\nnew file mode 100644\nindex 0000000..da7ee49\n--- /dev/null\n+++ b/.github/workflows/ibis-docs-release.yml\n@@ -0,0 +1,63 @@\n+# vim: filetype=yaml\n+name: Docs Release Build\n+\n+on:\n+  release:\n+    types:\n+      - published\n+jobs:\n+  docs:\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: install nix\n+        uses: cachix/install-nix-action@v17\n+        with:\n+          nix_path: nixpkgs=channel:nixos-unstable-small\n+\n+      - name: setup cachix\n+        uses: cachix/cachix-action@v10\n+        with:\n+          name: ibis\n+          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n+          extraPullNames: nix-community,poetry2nix\n+\n+      - name: Generate a GitHub token\n+        uses: tibdex/github-app-token@v1\n+        id: generate_token\n+        with:\n+          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n+          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n+\n+      - name: checkout\n+        uses: actions/checkout@v3\n+        with:\n+          fetch-depth: 0\n+          token: ${{ steps.generate_token.outputs.token }}\n+\n+      - name: Configure git info\n+        run: |\n+          set -euo pipefail\n+\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n+\n+      - name: Pull gh-pages changes\n+        run: |\n+          set -euo pipefail\n+\n+          git fetch origin gh-pages\n+          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+\n+      - name: build and push docs on tag\n+        run: |\n+          set -euo pipefail\n+\n+          nix develop -f shell.nix --keep-going -c \\\n+            mic deploy \\\n+              --push \\\n+              --rebase \\\n+              --update-aliases \\\n+              --prefix docs \\\n+              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n+              \""${GITHUB_REF_NAME}\"" latest\n""]",4,"[""317f4eefecddfb1392ca71d551840f446feee302"", ""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""f00a4d3e307b89842250358ee432e6800bb24362"", ""32845e1bbd1efb5dbc16f671049509a409ba25ce""]","[""test"", ""docs"", ""build"", ""cicd""]"
"update flushed index before truncating,restructure ClusterTopology to track completed change,licensing,setup jest and add m.ts tests","[""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n""]",4,"[""933ab6bb86372913c992567cf9660009900911a7"", ""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""229b53a632ea97d47c4be11f096bdd828fb415d8""]","[""fix"", ""refactor"", ""docs"", ""test""]"
"add fallible peek_last_token(),publish sdks after docs/build,licensing,spring version, core version","[""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n""]",4,"[""63eab619e6166eb6cab948028a7b89bf059dd878"", ""6c9cb638cb4d1ecc42632fcf389c24898c5b3244"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""c55591ba157298a9c5816693c102a89dfd058830""]","[""refactor"", ""cicd"", ""docs"", ""build""]"
"add riscv64gc-unknown-linux-gnu,spring version, core version,add tests,repository creation","[""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n"", ""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/Cargo.lock b/Cargo.lock\nindex 84d5d07..6ad05da 100644\n--- a/Cargo.lock\n+++ b/Cargo.lock\n@@ -293,6 +293,7 @@ version = \""0.1.0\""\n dependencies = [\n  \""git-cliff-core\"",\n  \""log\"",\n+ \""pretty_assertions\"",\n  \""pretty_env_logger\"",\n  \""structopt\"",\n ]\ndiff --git a/git-cliff-core/src/lib.rs b/git-cliff-core/src/lib.rs\nindex 3b18ba0..a560c94 100644\n--- a/git-cliff-core/src/lib.rs\n+++ b/git-cliff-core/src/lib.rs\n@@ -1,6 +1,8 @@\n //! Highly customizable Changelog Generator\n #![warn(missing_docs, clippy::unwrap_used)]\n \n+/// Export regex crate.\n+pub use regex;\n /// Git commit.\n pub mod commit;\n /// Config file parser.\ndiff --git a/git-cliff/Cargo.toml b/git-cliff/Cargo.toml\nindex 41eb2e9..cc64b37 100644\n--- a/git-cliff/Cargo.toml\n+++ b/git-cliff/Cargo.toml\n@@ -20,3 +20,6 @@ log = \""0.4.14\""\n version = \""0.3\""\n default-features = false\n features = [\""suggestions\"", \""color\"", \""wrap_help\""]\n+\n+[dev-dependencies]\n+pretty_assertions = \""0.7\""\ndiff --git a/git-cliff/src/changelog.rs b/git-cliff/src/changelog.rs\nindex 3f9e994..23ea186 100644\n--- a/git-cliff/src/changelog.rs\n+++ b/git-cliff/src/changelog.rs\n@@ -115,3 +115,171 @@ impl<'a> Changelog<'a> {\n \t\tOk(())\n \t}\n }\n+\n+#[cfg(test)]\n+mod test {\n+\tuse super::*;\n+\tuse git_cliff_core::config::{\n+\t\tChangelogConfig,\n+\t\tCommitParser,\n+\t\tGitConfig,\n+\t};\n+\tuse git_cliff_core::regex::Regex;\n+\tuse pretty_assertions::assert_eq;\n+\tuse std::str;\n+\t#[test]\n+\tfn changelog_generator() -> Result<()> {\n+\t\tlet config = Config {\n+\t\t\tchangelog: ChangelogConfig {\n+\t\t\t\theader: Some(String::from(\""# Changelog\"")),\n+\t\t\t\tbody:   String::from(\n+\t\t\t\t\tr#\""{% if version %}\n+\t\t\t\t## Release [{{ version }}] - {{ timestamp | date(format=\""%Y-%m-%d\"") }}\n+\t\t\t\t({{ commit_id }}){% else %}\n+\t\t\t\t## Unreleased{% endif %}\n+\t\t\t\t{% for group, commits in commits | group_by(attribute=\""group\"") %}\n+\t\t\t\t### {{ group }}{% for group, commits in commits | group_by(attribute=\""scope\"") %}\n+\t\t\t\t#### {{ group }}{% for commit in commits %}\n+\t\t\t\t- {{ commit.message }}{% endfor %}\n+\t\t\t\t{% endfor %}{% endfor %}\""#,\n+\t\t\t\t)\n+\t\t\t\t.replace(\""\t\t\t\t\"", \""\""),\n+\t\t\t\tfooter: Some(String::from(\""------------\"")),\n+\t\t\t},\n+\t\t\tgit:       GitConfig {\n+\t\t\t\tconventional_commits: true,\n+\t\t\t\tcommit_parsers:       Some(vec![\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""feat*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""New features\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""fix*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Bug Fixes\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\"".*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Other\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t]),\n+\t\t\t\tfilter_commits:       Some(false),\n+\t\t\t\ttag_pattern:          String::new(),\n+\t\t\t\tskip_tags:            Regex::new(\""v3.*\"").ok(),\n+\t\t\t},\n+\t\t};\n+\t\tlet test_release = Release {\n+\t\t\tversion:   Some(String::from(\""v1.0.0\"")),\n+\t\t\tcommits:   vec![\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0bc123\""),\n+\t\t\t\t\tString::from(\""feat(app): add cool features\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0werty\""),\n+\t\t\t\t\tString::from(\""style(ui): make good stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0w3rty\""),\n+\t\t\t\t\tString::from(\""fix(ui): fix more stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0jkl12\""),\n+\t\t\t\t\tString::from(\""chore(app): do nothing\""),\n+\t\t\t\t),\n+\t\t\t],\n+\t\t\tcommit_id: Some(String::from(\""0bc123\"")),\n+\t\t\ttimestamp: 50000000,\n+\t\t\tprevious:  None,\n+\t\t};\n+\t\tlet releases = vec![\n+\t\t\ttest_release.clone(),\n+\t\t\tRelease {\n+\t\t\t\tversion: Some(String::from(\""v3.0.0\"")),\n+\t\t\t\tcommits: vec![Commit::new(\n+\t\t\t\t\tString::from(\""n0thin\""),\n+\t\t\t\t\tString::from(\""feat(xyz): skip commit\""),\n+\t\t\t\t)],\n+\t\t\t\t..Release::default()\n+\t\t\t},\n+\t\t\tRelease {\n+\t\t\t\tversion:   None,\n+\t\t\t\tcommits:   vec![\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc123\""),\n+\t\t\t\t\t\tString::from(\""feat(app): add xyz\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc124\""),\n+\t\t\t\t\t\tString::from(\""docs(app): document zyx\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(String::from(\""def789\""), String::from(\""merge #4\"")),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""qwerty\""),\n+\t\t\t\t\t\tString::from(\""fix(app): fix abc\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""hjkl12\""),\n+\t\t\t\t\t\tString::from(\""chore(ui): do boring stuff\""),\n+\t\t\t\t\t),\n+\t\t\t\t],\n+\t\t\t\tcommit_id: None,\n+\t\t\t\ttimestamp: 1000,\n+\t\t\t\tprevious:  Some(Box::new(test_release)),\n+\t\t\t},\n+\t\t];\n+\t\tlet changelog = Changelog::new(releases, &config)?;\n+\t\tlet mut out = Vec::new();\n+\t\tchangelog.generate(&mut out)?;\n+\t\tassert_eq!(\n+\t\t\tString::from(\n+\t\t\t\tr#\""# Changelog\n+\n+\t\t\t## Unreleased\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### app\n+\t\t\t- fix abc\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add xyz\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- document zyx\n+\n+\t\t\t#### ui\n+\t\t\t- do boring stuff\n+\n+\t\t\t## Release [v1.0.0] - 1971-08-02\n+\t\t\t(0bc123)\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### ui\n+\t\t\t- fix more stuff\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add cool features\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- do nothing\n+\n+\t\t\t#### ui\n+\t\t\t- make good stuff\n+\t\t\t------------\n+\t\t\t\""#\n+\t\t\t)\n+\t\t\t.replace(\""\t\t\t\"", \""\""),\n+\t\t\tstr::from_utf8(&out).unwrap()\n+\t\t);\n+\t\tOk(())\n+\t}\n+}\n"", ""diff --git a/server/src/services/repository.service.ts b/server/src/services/repository.service.ts\nindex 3869c98..d675b30 100644\n--- a/server/src/services/repository.service.ts\n+++ b/server/src/services/repository.service.ts\n@@ -19,6 +19,8 @@ export class RepositoryService {\n       return;\n     }\n \n+    await this.createTeam(this.github, this.getTeamName(course), course.id);\n+\n     const studentRepo = getCustomRepository(StudentRepository);\n     const students = await studentRepo.findActiveByCourseId(this.courseId);\n \n@@ -31,8 +33,8 @@ export class RepositoryService {\n         if (mentorGithubId) {\n           await this.inviteMentor(mentorGithubId, course);\n         }\n-        await this.addTeamToRepository(this.github, course, student.githubId);\n       }\n+      await this.addTeamToRepository(this.github, course, student.githubId);\n       if (record?.repository) {\n         result.push({ repository: record.repository });\n       }\n""]",4,"[""173553c0372e66e03bdab19e0e6c2dd44daa14a0"", ""c55591ba157298a9c5816693c102a89dfd058830"", ""8ee0611fbf0cd89abe7ae588f22e6ecb843598ea"", ""87d5d4e55ab7149b593d29410f1fe426ba2447d4""]","[""cicd"", ""build"", ""test"", ""fix""]"
"split release docs build into separate workflow,updated react demo parcel command,enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>,update flushed index before truncating","[""diff --git a/.github/workflows/ibis-docs-lint.yml b/.github/workflows/ibis-docs-lint.yml\nindex 753d57d..3e0aa15 100644\n--- a/.github/workflows/ibis-docs-lint.yml\n+++ b/.github/workflows/ibis-docs-lint.yml\n@@ -88,14 +88,14 @@ jobs:\n         run: poetry run pytest --benchmark-only --benchmark-json .benchmarks/output.json ibis/tests/benchmarks\n \n       - uses: tibdex/github-app-token@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         id: generate-token\n         with:\n           app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}\n           private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}\n \n       - uses: benchmark-action/github-action-benchmark@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         with:\n           tool: pytest\n           github-token: ${{ steps.generate-token.outputs.token }}\n@@ -107,6 +107,7 @@ jobs:\n \n   docs:\n     runs-on: ubuntu-latest\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n     needs:\n       # wait on benchmarks to prevent a race condition when pushing to the\n       # gh-pages branch\n@@ -124,51 +125,25 @@ jobs:\n           authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n           extraPullNames: nix-community,poetry2nix\n \n-      - name: Generate a GitHub token\n-        if: ${{ github.event_name == 'push' }}\n-        uses: tibdex/github-app-token@v1\n-        id: generate_token\n-        with:\n-          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n-          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n-\n-      - name: checkout\n-        if: ${{ github.event_name == 'push' }}\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          token: ${{ steps.generate_token.outputs.token }}\n-\n       - name: checkout\n-        if: ${{ github.event_name != 'push' }}\n         uses: actions/checkout@v3\n \n-      - name: Configure git info\n-        if: ${{ github.event_name == 'push' }}\n-        run: |\n-          set -euo pipefail\n-\n-          git config user.name 'ibis-docs-bot[bot]'\n-          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n-\n       - name: build docs\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c mkdocs build\n \n       - name: verify internal links\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c just checklinks --offline --no-progress\n \n-      - name: Pull gh-pages changes\n+      - name: Configure git info\n         if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n-          git fetch origin gh-pages\n-          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n \n       - name: build and push dev docs\n-        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/') }}\n+        if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n@@ -180,19 +155,6 @@ jobs:\n               --message 'docs(dev): ibis@${{ github.sha }}' \\\n                 dev\n \n-      - name: build and push docs on tag\n-        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}\n-        run: |\n-          set -euo pipefail\n-\n-          nix develop -f shell.nix --keep-going -c \\\n-            mic deploy \\\n-              --push \\\n-              --rebase \\\n-              --prefix docs \\\n-              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n-              \""${GITHUB_REF_NAME}\"" latest\n-\n   simulate_release:\n     runs-on: ubuntu-latest\n     steps:\ndiff --git a/.github/workflows/ibis-docs-release.yml b/.github/workflows/ibis-docs-release.yml\nnew file mode 100644\nindex 0000000..da7ee49\n--- /dev/null\n+++ b/.github/workflows/ibis-docs-release.yml\n@@ -0,0 +1,63 @@\n+# vim: filetype=yaml\n+name: Docs Release Build\n+\n+on:\n+  release:\n+    types:\n+      - published\n+jobs:\n+  docs:\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: install nix\n+        uses: cachix/install-nix-action@v17\n+        with:\n+          nix_path: nixpkgs=channel:nixos-unstable-small\n+\n+      - name: setup cachix\n+        uses: cachix/cachix-action@v10\n+        with:\n+          name: ibis\n+          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n+          extraPullNames: nix-community,poetry2nix\n+\n+      - name: Generate a GitHub token\n+        uses: tibdex/github-app-token@v1\n+        id: generate_token\n+        with:\n+          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n+          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n+\n+      - name: checkout\n+        uses: actions/checkout@v3\n+        with:\n+          fetch-depth: 0\n+          token: ${{ steps.generate_token.outputs.token }}\n+\n+      - name: Configure git info\n+        run: |\n+          set -euo pipefail\n+\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n+\n+      - name: Pull gh-pages changes\n+        run: |\n+          set -euo pipefail\n+\n+          git fetch origin gh-pages\n+          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+\n+      - name: build and push docs on tag\n+        run: |\n+          set -euo pipefail\n+\n+          nix develop -f shell.nix --keep-going -c \\\n+            mic deploy \\\n+              --push \\\n+              --rebase \\\n+              --update-aliases \\\n+              --prefix docs \\\n+              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n+              \""${GITHUB_REF_NAME}\"" latest\n"", ""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n"", ""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n"", ""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n""]",4,"[""32845e1bbd1efb5dbc16f671049509a409ba25ce"", ""32b92cfa0b74a6c25990e32ac6aab12b8496794c"", ""fd8e563cc19ca4684885d4692acee6bebcca4ada"", ""933ab6bb86372913c992567cf9660009900911a7""]","[""cicd"", ""build"", ""feat"", ""fix""]"
"update wrapping tests for v7,upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.,update flushed index before truncating,buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23","[""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n"", ""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n""]",4,"[""317f4eefecddfb1392ca71d551840f446feee302"", ""454003841aabeb74396d73541378bfa59c75b5db"", ""933ab6bb86372913c992567cf9660009900911a7"", ""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d""]","[""test"", ""build"", ""fix"", ""feat""]"
"wrong icon reference

Signed-off-by: Pranav C <pranavxc@gmail.com>,add .nullif() example,verify checkpoint listeners are notified,cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.","[""diff --git a/packages/nc-gui/components.d.ts b/packages/nc-gui/components.d.ts\nindex b7e6585..bb86478 100644\n--- a/packages/nc-gui/components.d.ts\n+++ b/packages/nc-gui/components.d.ts\n@@ -81,7 +81,6 @@ declare module '@vue/runtime-core' {\n     ClaritySuccessLine: typeof import('~icons/clarity/success-line')['default']\n     EvaEmailOutline: typeof import('~icons/eva/email-outline')['default']\n     IcBaselineMoreVert: typeof import('~icons/ic/baseline-more-vert')['default']\n-    Icon: typeof import('~icons/ic/on')['default']\n     IcOutlineInsertDriveFile: typeof import('~icons/ic/outline-insert-drive-file')['default']\n     IcRoundEdit: typeof import('~icons/ic/round-edit')['default']\n     IcRoundKeyboardArrowDown: typeof import('~icons/ic/round-keyboard-arrow-down')['default']\n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n"", ""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n"", ""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n""]",4,"[""d1d55e787b7d07f763852602b9939a5394607fd9"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21"", ""e0198f74b81da3663144cfe1d971939319f82a0f"", ""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7""]","[""fix"", ""docs"", ""test"", ""refactor""]"
"increment failing test retries,add .nullif() example,[gn] fix include_dirs ordering error,add numberOfLines prop to DataTableTitle (#863)

Closes #848","[""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 11adaa7..ed64b17 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -240,6 +240,14 @@ static_library(\""electron_lib\"") {\n     \""brightray\"",\n     \""build/node\"",\n   ]\n+  include_dirs = [\n+    \""chromium_src\"",\n+    \"".\"",\n+    \""$target_gen_dir\"",\n+    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n+    # API of blink, then delete this include dir.\n+    \""//third_party/WebKit/Source\"",\n+  ]\n   if (enable_desktop_capturer) {\n     deps += [ \""//third_party/webrtc/modules/desktop_capture\"" ]\n   }\n@@ -275,14 +283,6 @@ static_library(\""electron_lib\"") {\n     # Disable warnings for g_settings_list_schemas.\n     \""GLIB_DISABLE_DEPRECATION_WARNINGS\"",\n   ]\n-  include_dirs = [\n-    \""chromium_src\"",\n-    \"".\"",\n-    \""$target_gen_dir\"",\n-    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n-    # API of blink, then delete this include dir.\n-    \""//third_party/WebKit/Source\"",\n-  ]\n   if (is_component_build) {\n     defines += [\n       # Import V8 symbols from shared library (node.dll / libnode.so)\n"", ""diff --git a/src/components/DataTable/DataTableTitle.js b/src/components/DataTable/DataTableTitle.js\nindex bfcf07e..d764fd5 100644\n--- a/src/components/DataTable/DataTableTitle.js\n+++ b/src/components/DataTable/DataTableTitle.js\n@@ -27,6 +27,10 @@ type Props = React.ElementConfig<typeof TouchableWithoutFeedback> & {|\n    */\n   sortDirection?: 'ascending' | 'descending',\n   /**\n+   * The number of lines to show.\n+   */\n+  numberOfLines?: number,\n+  /**\n    * Function to execute on press.\n    */\n   onPress?: () => mixed,\n@@ -44,6 +48,10 @@ type State = {\n class DataTableTitle extends React.Component<Props, State> {\n   static displayName = 'DataTable.Title';\n \n+  static defaultProps = {\n+    numberOfLines: 1,\n+  };\n+\n   state = {\n     spinAnim: new Animated.Value(\n       this.props.sortDirection === 'ascending' ? 0 : 1\n@@ -70,6 +78,7 @@ class DataTableTitle extends React.Component<Props, State> {\n       sortDirection,\n       theme,\n       style,\n+      numberOfLines,\n       ...rest\n     } = this.props;\n \n@@ -99,7 +108,7 @@ class DataTableTitle extends React.Component<Props, State> {\n               styles.cell,\n               sortDirection ? styles.sorted : { color: textColor },\n             ]}\n-            numberOfLines={1}\n+            numberOfLines={numberOfLines}\n           >\n             {children}\n           </Text>\n""]",4,"[""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21"", ""c44cf88a6ec54e5ddd99d8348bcc57b301ec7945"", ""f9a094918b62534614c47aa8a13f33aec751a1e0""]","[""cicd"", ""docs"", ""build"", ""feat""]"
"initialize threejs objects in defaultRef, to fix undefined type errors,verify checkpoint listeners are notified,terminated tasks linger for a bit

Signed-off-by: Eliza Weisman <eliza@buoyant.io>,add .nullif() example","[""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n"", ""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n"", ""diff --git a/console/src/main.rs b/console/src/main.rs\nindex ebfa315..5328d96 100644\n--- a/console/src/main.rs\n+++ b/console/src/main.rs\n@@ -69,6 +69,7 @@ async fn main() -> Result<(), Box<dyn std::error::Error>> {\n                 .wrap(Wrap { trim: true });\n             f.render_widget(header, chunks[0]);\n             tasks.render(f, chunks[1]);\n+            tasks.retain_active();\n         })?;\n     }\n \ndiff --git a/console/src/tasks.rs b/console/src/tasks.rs\nindex 7be39a4..eb41495 100644\n--- a/console/src/tasks.rs\n+++ b/console/src/tasks.rs\n@@ -19,6 +19,7 @@ struct Task {\n     fields: String,\n     kind: &'static str,\n     stats: Stats,\n+    completed_for: usize,\n }\n \n #[derive(Default, Debug)]\n@@ -28,10 +29,15 @@ struct Stats {\n     idle: Duration,\n     total: Duration,\n }\n+\n impl State {\n+    // How many updates to retain completed tasks for\n+    const RETAIN_COMPLETED_FOR: usize = 6;\n+\n     pub(crate) fn len(&self) -> usize {\n         self.tasks.len()\n     }\n+\n     pub(crate) fn update(&mut self, update: proto::tasks::TaskUpdate) {\n         let new_tasks = update.new_tasks.into_iter().filter_map(|task| {\n             if task.id.is_none() {\n@@ -48,6 +54,7 @@ impl State {\n                 fields: task.string_fields,\n                 kind,\n                 stats: Default::default(),\n+                completed_for: 0,\n             };\n             Some((id, task))\n         });\n@@ -60,7 +67,10 @@ impl State {\n         }\n \n         for proto::SpanId { id } in update.completed {\n-            if self.tasks.remove(&id).is_none() {\n+            if let Some(task) = self.tasks.get_mut(&id) {\n+                task.kind = \""!\"";\n+                task.completed_for = 1;\n+            } else {\n                 tracing::warn!(?id, \""tried to complete a task that didn't exist\"");\n             }\n         }\n@@ -79,7 +89,7 @@ impl State {\n         const DUR_PRECISION: usize = 4;\n         const POLLS_LEN: usize = 5;\n         let rows = self.tasks.values().map(|task| {\n-            let row = Row::new(vec![\n+            let mut row = Row::new(vec![\n                 Cell::from(task.id_hex.as_str()),\n                 // TODO(eliza): is there a way to write a `fmt::Debug` impl\n                 // directly to tui without doing an allocation?\n@@ -105,6 +115,9 @@ impl State {\n                 Cell::from(format!(\""{:>width$}\"", task.stats.polls, width = POLLS_LEN)),\n                 Cell::from(task.fields.as_str()),\n             ]);\n+            if task.completed_for > 0 {\n+                row = row.style(Style::default().add_modifier(style::Modifier::DIM));\n+            }\n             row\n         });\n         let t = Table::new(rows)\n@@ -126,6 +139,16 @@ impl State {\n \n         frame.render_widget(t, area)\n     }\n+\n+    pub(crate) fn retain_active(&mut self) {\n+        self.tasks.retain(|_, task| {\n+            if task.completed_for == 0 {\n+                return true;\n+            }\n+            task.completed_for += 1;\n+            task.completed_for <= Self::RETAIN_COMPLETED_FOR\n+        })\n+    }\n }\n \n impl From<proto::tasks::Stats> for Stats {\n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n""]",4,"[""2561f4ade46fc9d59f289f328cc77733a6443697"", ""e0198f74b81da3663144cfe1d971939319f82a0f"", ""1bcf88670b50155b50071e707f98f30cea0b7a24"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21""]","[""fix"", ""test"", ""feat"", ""docs""]"
"run pyspark tests in parallel,update flushed index before truncating,ensure checksum persist flushes to disk,add spacing in comment fix lint (#8555)","[""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex e23088e..9708157 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -202,11 +202,11 @@ jobs:\n         run: poetry install --without dev --without docs --extras ${{ matrix.backend.name }} --extras geospatial\n \n       - name: \""run parallel tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name != 'pyspark' && matrix.backend.name != 'impala'\n+        if: matrix.backend.name != 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }} --numprocesses auto --dist=loadgroup\n \n       - name: \""run serial tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name == 'pyspark' || matrix.backend.name == 'impala'\n+        if: matrix.backend.name == 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }}\n         env:\n           IBIS_TEST_NN_HOST: localhost\n"", ""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n"", ""diff --git a/src/components/nav/test/basic/app-module.ts b/src/components/nav/test/basic/app-module.ts\nindex 467917a..375e662 100644\n--- a/src/components/nav/test/basic/app-module.ts\n+++ b/src/components/nav/test/basic/app-module.ts\n@@ -633,7 +633,7 @@ export class Tab3 {\n   }\n \n   presentModal() {\n-    //this.modalCtrl.create(MyModal).present();\n+    // this.modalCtrl.create(MyModal).present();\n   }\n \n   selectPrevious() {\n""]",4,"[""4cbbd2552ba0de273e1dfe7d453c5b3efed751a3"", ""933ab6bb86372913c992567cf9660009900911a7"", ""b7ce2894fd1794064bd6db4ed730bb6cb7728739"", ""af880ac5b4fecbc6c4f3d1eee0d95f326e8bd9d1""]","[""cicd"", ""fix"", ""test"", ""docs""]"
"Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>,do not use scripts and binaries from the libcc repo,cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.,autostart feature fixed","[""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n""]",4,"[""f823cf28652987d43c8324b4f5b203240032383a"", ""45837af24a33308a70a3454f0f650f9fe728e272"", ""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7"", ""bed78248c941d57ad4cc20a455147e186e97c7a1""]","[""feat"", ""cicd"", ""refactor"", ""fix""]"
"add fallible peek_last_token(),support use meta key select multiple element,licensing,fix netty dependency

netty-bom 4.1.70 contains the changes from pull request
https://github.com/netty/netty/pull/11798, which moved the classes out
of the native modules to make sure the same classes don't end up on the
classpath multiple times. For us it means that we need to depend on both
the native and classes modules. However, since we don't use the native
module directly (only classes that were moved to this classes module),
we need to force the dependency plugin to consider the native module as
used.","[""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n"", ""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/atomix/cluster/pom.xml b/atomix/cluster/pom.xml\nindex a477873..b6db695 100644\n--- a/atomix/cluster/pom.xml\n+++ b/atomix/cluster/pom.xml\n@@ -69,6 +69,10 @@\n     </dependency>\n     <dependency>\n       <groupId>io.netty</groupId>\n+      <artifactId>netty-transport-classes-epoll</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.netty</groupId>\n       <artifactId>netty-transport-native-epoll</artifactId>\n       <classifier>linux-x86_64</classifier>\n     </dependency>\n@@ -278,6 +282,7 @@\n             <dependency>uk.co.real-logic:sbe-tool</dependency>\n             <dependency>net.jqwik:jqwik</dependency>\n             <dependency>io.netty:netty-tcnative-boringssl-static</dependency>\n+            <dependency>io.netty:netty-transport-native-epoll</dependency>\n           </usedDependencies>\n         </configuration>\n       </plugin>\n""]",4,"[""63eab619e6166eb6cab948028a7b89bf059dd878"", ""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""f00a4d3e307b89842250358ee432e6800bb24362""]","[""refactor"", ""feat"", ""docs"", ""build""]"
"assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,add tests,do not use scripts and binaries from the libcc repo,add fallible peek_last_token()","[""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n"", ""diff --git a/Cargo.lock b/Cargo.lock\nindex 84d5d07..6ad05da 100644\n--- a/Cargo.lock\n+++ b/Cargo.lock\n@@ -293,6 +293,7 @@ version = \""0.1.0\""\n dependencies = [\n  \""git-cliff-core\"",\n  \""log\"",\n+ \""pretty_assertions\"",\n  \""pretty_env_logger\"",\n  \""structopt\"",\n ]\ndiff --git a/git-cliff-core/src/lib.rs b/git-cliff-core/src/lib.rs\nindex 3b18ba0..a560c94 100644\n--- a/git-cliff-core/src/lib.rs\n+++ b/git-cliff-core/src/lib.rs\n@@ -1,6 +1,8 @@\n //! Highly customizable Changelog Generator\n #![warn(missing_docs, clippy::unwrap_used)]\n \n+/// Export regex crate.\n+pub use regex;\n /// Git commit.\n pub mod commit;\n /// Config file parser.\ndiff --git a/git-cliff/Cargo.toml b/git-cliff/Cargo.toml\nindex 41eb2e9..cc64b37 100644\n--- a/git-cliff/Cargo.toml\n+++ b/git-cliff/Cargo.toml\n@@ -20,3 +20,6 @@ log = \""0.4.14\""\n version = \""0.3\""\n default-features = false\n features = [\""suggestions\"", \""color\"", \""wrap_help\""]\n+\n+[dev-dependencies]\n+pretty_assertions = \""0.7\""\ndiff --git a/git-cliff/src/changelog.rs b/git-cliff/src/changelog.rs\nindex 3f9e994..23ea186 100644\n--- a/git-cliff/src/changelog.rs\n+++ b/git-cliff/src/changelog.rs\n@@ -115,3 +115,171 @@ impl<'a> Changelog<'a> {\n \t\tOk(())\n \t}\n }\n+\n+#[cfg(test)]\n+mod test {\n+\tuse super::*;\n+\tuse git_cliff_core::config::{\n+\t\tChangelogConfig,\n+\t\tCommitParser,\n+\t\tGitConfig,\n+\t};\n+\tuse git_cliff_core::regex::Regex;\n+\tuse pretty_assertions::assert_eq;\n+\tuse std::str;\n+\t#[test]\n+\tfn changelog_generator() -> Result<()> {\n+\t\tlet config = Config {\n+\t\t\tchangelog: ChangelogConfig {\n+\t\t\t\theader: Some(String::from(\""# Changelog\"")),\n+\t\t\t\tbody:   String::from(\n+\t\t\t\t\tr#\""{% if version %}\n+\t\t\t\t## Release [{{ version }}] - {{ timestamp | date(format=\""%Y-%m-%d\"") }}\n+\t\t\t\t({{ commit_id }}){% else %}\n+\t\t\t\t## Unreleased{% endif %}\n+\t\t\t\t{% for group, commits in commits | group_by(attribute=\""group\"") %}\n+\t\t\t\t### {{ group }}{% for group, commits in commits | group_by(attribute=\""scope\"") %}\n+\t\t\t\t#### {{ group }}{% for commit in commits %}\n+\t\t\t\t- {{ commit.message }}{% endfor %}\n+\t\t\t\t{% endfor %}{% endfor %}\""#,\n+\t\t\t\t)\n+\t\t\t\t.replace(\""\t\t\t\t\"", \""\""),\n+\t\t\t\tfooter: Some(String::from(\""------------\"")),\n+\t\t\t},\n+\t\t\tgit:       GitConfig {\n+\t\t\t\tconventional_commits: true,\n+\t\t\t\tcommit_parsers:       Some(vec![\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""feat*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""New features\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""fix*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Bug Fixes\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\"".*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Other\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t]),\n+\t\t\t\tfilter_commits:       Some(false),\n+\t\t\t\ttag_pattern:          String::new(),\n+\t\t\t\tskip_tags:            Regex::new(\""v3.*\"").ok(),\n+\t\t\t},\n+\t\t};\n+\t\tlet test_release = Release {\n+\t\t\tversion:   Some(String::from(\""v1.0.0\"")),\n+\t\t\tcommits:   vec![\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0bc123\""),\n+\t\t\t\t\tString::from(\""feat(app): add cool features\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0werty\""),\n+\t\t\t\t\tString::from(\""style(ui): make good stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0w3rty\""),\n+\t\t\t\t\tString::from(\""fix(ui): fix more stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0jkl12\""),\n+\t\t\t\t\tString::from(\""chore(app): do nothing\""),\n+\t\t\t\t),\n+\t\t\t],\n+\t\t\tcommit_id: Some(String::from(\""0bc123\"")),\n+\t\t\ttimestamp: 50000000,\n+\t\t\tprevious:  None,\n+\t\t};\n+\t\tlet releases = vec![\n+\t\t\ttest_release.clone(),\n+\t\t\tRelease {\n+\t\t\t\tversion: Some(String::from(\""v3.0.0\"")),\n+\t\t\t\tcommits: vec![Commit::new(\n+\t\t\t\t\tString::from(\""n0thin\""),\n+\t\t\t\t\tString::from(\""feat(xyz): skip commit\""),\n+\t\t\t\t)],\n+\t\t\t\t..Release::default()\n+\t\t\t},\n+\t\t\tRelease {\n+\t\t\t\tversion:   None,\n+\t\t\t\tcommits:   vec![\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc123\""),\n+\t\t\t\t\t\tString::from(\""feat(app): add xyz\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc124\""),\n+\t\t\t\t\t\tString::from(\""docs(app): document zyx\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(String::from(\""def789\""), String::from(\""merge #4\"")),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""qwerty\""),\n+\t\t\t\t\t\tString::from(\""fix(app): fix abc\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""hjkl12\""),\n+\t\t\t\t\t\tString::from(\""chore(ui): do boring stuff\""),\n+\t\t\t\t\t),\n+\t\t\t\t],\n+\t\t\t\tcommit_id: None,\n+\t\t\t\ttimestamp: 1000,\n+\t\t\t\tprevious:  Some(Box::new(test_release)),\n+\t\t\t},\n+\t\t];\n+\t\tlet changelog = Changelog::new(releases, &config)?;\n+\t\tlet mut out = Vec::new();\n+\t\tchangelog.generate(&mut out)?;\n+\t\tassert_eq!(\n+\t\t\tString::from(\n+\t\t\t\tr#\""# Changelog\n+\n+\t\t\t## Unreleased\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### app\n+\t\t\t- fix abc\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add xyz\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- document zyx\n+\n+\t\t\t#### ui\n+\t\t\t- do boring stuff\n+\n+\t\t\t## Release [v1.0.0] - 1971-08-02\n+\t\t\t(0bc123)\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### ui\n+\t\t\t- fix more stuff\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add cool features\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- do nothing\n+\n+\t\t\t#### ui\n+\t\t\t- make good stuff\n+\t\t\t------------\n+\t\t\t\""#\n+\t\t\t)\n+\t\t\t.replace(\""\t\t\t\"", \""\""),\n+\t\t\tstr::from_utf8(&out).unwrap()\n+\t\t);\n+\t\tOk(())\n+\t}\n+}\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n""]",4,"[""1269431c8a3e7549f10fcbbb4b88ff625c8898b3"", ""8ee0611fbf0cd89abe7ae588f22e6ecb843598ea"", ""45837af24a33308a70a3454f0f650f9fe728e272"", ""63eab619e6166eb6cab948028a7b89bf059dd878""]","[""build"", ""test"", ""cicd"", ""refactor""]"
"docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>,add .nullif() example,detach ViewControllers when not active,initialize threejs objects in defaultRef, to fix undefined type errors","[""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n"", ""diff --git a/ionic/components/nav/nav-controller.ts b/ionic/components/nav/nav-controller.ts\nindex becdd99..1cc3c31 100644\n--- a/ionic/components/nav/nav-controller.ts\n+++ b/ionic/components/nav/nav-controller.ts\n@@ -1410,6 +1410,9 @@ export class NavController extends Ion {\n       // set the ComponentRef's instance to this ViewController\n       view.setInstance(component);\n \n+      // remember the ChangeDetectorRef for this ViewController\n+      view.setChangeDetector(hostViewRef.changeDetectorRef);\n+\n       // remember the ElementRef to the ion-page elementRef that was just created\n       view.setPageRef(pageElementRef);\n \ndiff --git a/ionic/components/nav/view-controller.ts b/ionic/components/nav/view-controller.ts\nindex 3207fa2..069c74d 100644\n--- a/ionic/components/nav/view-controller.ts\n+++ b/ionic/components/nav/view-controller.ts\n@@ -1,4 +1,4 @@\n-import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer} from 'angular2/core';\n+import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer, ChangeDetectorRef} from 'angular2/core';\n \n import {Navbar} from '../navbar/navbar';\n import {NavController, NavOptions} from './nav-controller';\n@@ -33,6 +33,7 @@ export class ViewController {\n   private _nbVwRef: ViewContainerRef;\n   private _onDismiss: Function = null;\n   private _pgRef: ElementRef;\n+  private _cd: ChangeDetectorRef;\n   protected _nav: NavController;\n \n   /**\n@@ -166,6 +167,13 @@ export class ViewController {\n   /**\n    * @private\n    */\n+  setChangeDetector(cd: ChangeDetectorRef) {\n+    this._cd = cd;\n+  }\n+\n+  /**\n+   * @private\n+   */\n   setInstance(instance: any) {\n     this.instance = instance;\n   }\n@@ -467,6 +475,14 @@ export class ViewController {\n    * The view is about to enter and become the active view.\n    */\n   willEnter() {\n+    if (this._cd) {\n+      // ensure this has been re-attached to the change detector\n+      this._cd.reattach();\n+\n+      // detect changes before we run any user code\n+      this._cd.detectChanges();\n+    }\n+\n     ctrlFn(this, 'onPageWillEnter');\n   }\n \n@@ -496,6 +512,10 @@ export class ViewController {\n    */\n   didLeave() {\n     ctrlFn(this, 'onPageDidLeave');\n+\n+    // when this is not the active page\n+    // we no longer need to detect changes\n+    this._cd && this._cd.detach();\n   }\n \n   /**\n"", ""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n""]",4,"[""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21"", ""b282e90e2cbb74559aab79eee8443a4d7c85502a"", ""2561f4ade46fc9d59f289f328cc77733a6443697""]","[""build"", ""docs"", ""feat"", ""fix""]"
"spring version, core version,update wrapping tests for v7,add a branch name to Slack notifications (#14793),buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23","[""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n"", ""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n""]",4,"[""c55591ba157298a9c5816693c102a89dfd058830"", ""317f4eefecddfb1392ca71d551840f446feee302"", ""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da"", ""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d""]","[""build"", ""test"", ""cicd"", ""feat""]"
"update flushed index before truncating,[gn win] link comctl32.lib to fix component build,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909,restructure ClusterTopology to track completed change","[""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n"", ""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n""]",4,"[""933ab6bb86372913c992567cf9660009900911a7"", ""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119"", ""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2""]","[""fix"", ""build"", ""docs"", ""refactor""]"
"update flushed index before truncating,add getter for protocol id,add comments for the Handler,increment failing test retries","[""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n"", ""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n"", ""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n""]",4,"[""933ab6bb86372913c992567cf9660009900911a7"", ""dc5238b2bda98a7c4f2fe9584fc3b0191a408109"", ""036a0ff49a7dade0e04c9c07071a1ff49133ee24"", ""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57""]","[""fix"", ""feat"", ""docs"", ""cicd""]"
"add spacing in comment fix lint (#8555),never call ""onStart"" prop when idle,add numberOfLines prop to DataTableTitle (#863)

Closes #848,remove appear css animation","[""diff --git a/src/components/nav/test/basic/app-module.ts b/src/components/nav/test/basic/app-module.ts\nindex 467917a..375e662 100644\n--- a/src/components/nav/test/basic/app-module.ts\n+++ b/src/components/nav/test/basic/app-module.ts\n@@ -633,7 +633,7 @@ export class Tab3 {\n   }\n \n   presentModal() {\n-    //this.modalCtrl.create(MyModal).present();\n+    // this.modalCtrl.create(MyModal).present();\n   }\n \n   selectPrevious() {\n"", ""diff --git a/packages/core/src/SpringValue.ts b/packages/core/src/SpringValue.ts\nindex 18494a8..cbc4f27 100644\n--- a/packages/core/src/SpringValue.ts\n+++ b/packages/core/src/SpringValue.ts\n@@ -596,11 +596,11 @@ export class SpringValue<T = any> extends AnimationValue<T> {\n   /** Notify change observers */\n   protected _onChange(value: T, idle = false) {\n     const anim = this.animation\n-    if (!anim.changed) {\n+    if (!anim.changed && !idle) {\n       anim.changed = true\n       // The \""onStart\"" prop is called on the first change after entering the\n       // frameloop, but never for immediate animations.\n-      if (anim.onStart && !anim.immediate) {\n+      if (anim.onStart) {\n         anim.onStart(this)\n       }\n     }\n"", ""diff --git a/src/components/DataTable/DataTableTitle.js b/src/components/DataTable/DataTableTitle.js\nindex bfcf07e..d764fd5 100644\n--- a/src/components/DataTable/DataTableTitle.js\n+++ b/src/components/DataTable/DataTableTitle.js\n@@ -27,6 +27,10 @@ type Props = React.ElementConfig<typeof TouchableWithoutFeedback> & {|\n    */\n   sortDirection?: 'ascending' | 'descending',\n   /**\n+   * The number of lines to show.\n+   */\n+  numberOfLines?: number,\n+  /**\n    * Function to execute on press.\n    */\n   onPress?: () => mixed,\n@@ -44,6 +48,10 @@ type State = {\n class DataTableTitle extends React.Component<Props, State> {\n   static displayName = 'DataTable.Title';\n \n+  static defaultProps = {\n+    numberOfLines: 1,\n+  };\n+\n   state = {\n     spinAnim: new Animated.Value(\n       this.props.sortDirection === 'ascending' ? 0 : 1\n@@ -70,6 +78,7 @@ class DataTableTitle extends React.Component<Props, State> {\n       sortDirection,\n       theme,\n       style,\n+      numberOfLines,\n       ...rest\n     } = this.props;\n \n@@ -99,7 +108,7 @@ class DataTableTitle extends React.Component<Props, State> {\n               styles.cell,\n               sortDirection ? styles.sorted : { color: textColor },\n             ]}\n-            numberOfLines={1}\n+            numberOfLines={numberOfLines}\n           >\n             {children}\n           </Text>\n"", ""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n""]",4,"[""af880ac5b4fecbc6c4f3d1eee0d95f326e8bd9d1"", ""c8e0ae8612df3d6f2831acc004aaac332f6105e4"", ""f9a094918b62534614c47aa8a13f33aec751a1e0"", ""47ef9104e4a89e80d7cc6c1950bc080841da4a7b""]","[""docs"", ""fix"", ""feat"", ""refactor""]"
"print errors without stacktrace,assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,support use meta key select multiple element,add riscv64gc-unknown-linux-gnu","[""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n"", ""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n"", ""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n""]",4,"[""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3"", ""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8"", ""173553c0372e66e03bdab19e0e6c2dd44daa14a0""]","[""fix"", ""build"", ""feat"", ""cicd""]"
"add getter for protocol id,make it mode less,ensure checksum persist flushes to disk,fix build ordering","[""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n"", ""diff --git a/core/src/components/slides/slides.tsx b/core/src/components/slides/slides.tsx\nindex 48fd53f..d5c2f75 100644\n--- a/core/src/components/slides/slides.tsx\n+++ b/core/src/components/slides/slides.tsx\n@@ -1,7 +1,6 @@\n import { Component, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n \n import { Mode } from '../../interface.js';\n-import { createThemedClasses } from '../../utils/theme.js';\n \n import { Swiper } from './vendor/swiper.js';\n \n@@ -15,6 +14,7 @@ import { Swiper } from './vendor/swiper.js';\n   shadow: true\n })\n export class Slides {\n+\n   private container!: HTMLElement;\n   private swiper: any;\n \n@@ -391,12 +391,6 @@ export class Slides {\n     return { ...swiperOptions, ...this.options, ...eventOptions };\n   }\n \n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'slides')\n-    };\n-  }\n-\n   render() {\n     return (\n       <div class=\""swiper-container\"" ref={el => this.container = el as HTMLElement }>\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.scss b/core/src/components/thumbnail/thumbnail.ios.scss\ndeleted file mode 100644\nindex e3add45..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.ios.vars\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-ios-width};\n-  --border-radius: #{$thumbnail-ios-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.vars.scss b/core/src/components/thumbnail/thumbnail.ios.vars.scss\ndeleted file mode 100644\nindex 85d53e5..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.ios\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-ios-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-ios-height:                  $thumbnail-ios-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-ios-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.md.scss b/core/src/components/thumbnail/thumbnail.md.scss\ndeleted file mode 100644\nindex 0fbb2ca..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.md.vars\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-md-width};\n-  --border-radius: #{$thumbnail-md-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.md.vars.scss b/core/src/components/thumbnail/thumbnail.md.vars.scss\ndeleted file mode 100644\nindex 94e48b2..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.md\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-md-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-md-height:                  $thumbnail-md-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-md-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.scss b/core/src/components/thumbnail/thumbnail.scss\nindex 8ac3a22..8af268d 100644\n--- a/core/src/components/thumbnail/thumbnail.scss\n+++ b/core/src/components/thumbnail/thumbnail.scss\n@@ -9,6 +9,8 @@\n    * @prop --border-radius: Border radius of the thumbnail\n    * @prop --size: Size of the thumbnail\n    */\n+  --size: 48px;\n+  --border-radius: 0;\n \n   @include border-radius(var(--border-radius));\n \ndiff --git a/core/src/components/thumbnail/thumbnail.tsx b/core/src/components/thumbnail/thumbnail.tsx\nindex 50ff2c2..de76593 100644\n--- a/core/src/components/thumbnail/thumbnail.tsx\n+++ b/core/src/components/thumbnail/thumbnail.tsx\n@@ -1,25 +1,11 @@\n import { Component } from '@stencil/core';\n \n-import { Mode } from '../../interface';\n-import { createThemedClasses } from '../../utils/theme';\n-\n @Component({\n   tag: 'ion-thumbnail',\n-  styleUrls: {\n-    ios: 'thumbnail.ios.scss',\n-    md: 'thumbnail.md.scss'\n-  },\n+  styleUrl: 'thumbnail.scss',\n   shadow: true\n })\n export class Thumbnail {\n-  mode!: Mode;\n-\n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'thumbnail')\n-    };\n-  }\n-\n   render() {\n     return <slot></slot>;\n   }\n"", ""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n"", ""diff --git a/scripts/build.mjs b/scripts/build.mjs\nindex 204854f..b3cf067 100644\n--- a/scripts/build.mjs\n+++ b/scripts/build.mjs\n@@ -3,8 +3,8 @@ import { write } from 'fsxx';\n import { info, success } from './helpers.mjs';\n \n await $`rm -rf dist/*`;\n-await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n await $`unbuild`;\n+await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n \n const packages = [\n   'jsx-runtime',\n""]",4,"[""dc5238b2bda98a7c4f2fe9584fc3b0191a408109"", ""771857b1df9470ebc15357e8879118a72c649d5b"", ""b7ce2894fd1794064bd6db4ed730bb6cb7728739"", ""c323d59c607cabc91f17a78528d998f376f30b10""]","[""feat"", ""refactor"", ""test"", ""build""]"
"[gn win] link comctl32.lib to fix component build,ensure checksum persist flushes to disk,remove ubuntu-latest from job title where that is the only os,print errors without stacktrace","[""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n"", ""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n""]",4,"[""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""b7ce2894fd1794064bd6db4ed730bb6cb7728739"", ""74e9de5ec97dc013a52aa063dff0f40ac74c407b"", ""d129eaf9125a967ac86c6c7276bbae6b4d50af36""]","[""build"", ""test"", ""cicd"", ""fix""]"
"add spacing in comment fix lint (#8555),add props to get color and label from a route,upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.,run pyspark tests in parallel","[""diff --git a/src/components/nav/test/basic/app-module.ts b/src/components/nav/test/basic/app-module.ts\nindex 467917a..375e662 100644\n--- a/src/components/nav/test/basic/app-module.ts\n+++ b/src/components/nav/test/basic/app-module.ts\n@@ -633,7 +633,7 @@ export class Tab3 {\n   }\n \n   presentModal() {\n-    //this.modalCtrl.create(MyModal).present();\n+    // this.modalCtrl.create(MyModal).present();\n   }\n \n   selectPrevious() {\n"", ""diff --git a/src/components/BottomNavigation.js b/src/components/BottomNavigation.js\nindex 1b72302..7d8ea75 100644\n--- a/src/components/BottomNavigation.js\n+++ b/src/components/BottomNavigation.js\n@@ -24,8 +24,8 @@ const AnimatedPaper = Animated.createAnimatedComponent(Paper);\n \n type Route = {\n   key: string,\n-  title: string,\n-  icon: IconSource,\n+  title?: string,\n+  icon?: IconSource,\n   color?: string,\n };\n \n@@ -51,7 +51,7 @@ type Props<T> = {\n    * - `key`: a unique key to identify the route\n    * - `title`: title of the route to use as the tab label\n    * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n-   * - `color`: color to use as background color for shifting bottom navigation (optional)\n+   * - `color`: color to use as background color for shifting bottom navigation\n    *\n    * Example:\n    *\n@@ -115,11 +115,27 @@ type Props<T> = {\n   /**\n    * Callback which returns a React Element to be used as tab icon.\n    */\n-  renderIcon?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderIcon?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n   /**\n    * Callback which React Element to be used as tab label.\n    */\n-  renderLabel?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderLabel?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n+  /**\n+   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n+   */\n+  getLabelText?: (props: { route: T }) => string,\n+  /**\n+   * Get color for the tab, uses `route.color` by default.\n+   */\n+  getColor?: (props: { route: T }) => string,\n   /**\n    * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n    */\n@@ -159,6 +175,10 @@ type State = {\n    */\n   ripple: Animated.Value,\n   /**\n+   * Animation for the touch feedback, used to determine it's scale and opacity.\n+   */\n+  touch: Animated.Value,\n+  /**\n    * Layout of the tab bar. The width is used to determine the size and position of the ripple.\n    */\n   layout: { height: number, width: number, measured: boolean },\n@@ -173,7 +193,7 @@ const MIN_SHIFT_AMOUNT = 10;\n const MIN_TAB_WIDTH = 96;\n const MAX_TAB_WIDTH = 168;\n const BAR_HEIGHT = 56;\n-const SMALL_RIPPLE_SIZE = 72;\n+const SMALL_RIPPLE_SIZE = 96;\n const ACTIVE_LABEL_SIZE = 14;\n const INACTIVE_LABEL_SIZE = 12;\n \n@@ -251,6 +271,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ),\n       index: new Animated.Value(index),\n       ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n+      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n       layout: { height: 0, width: 0, measured: false },\n       previous: 0,\n     };\n@@ -349,6 +370,15 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n   _handleTabPress = (index: number) => {\n     const { navigationState } = this.props;\n \n+    this.state.touch.setValue(MIN_RIPPLE_SCALE);\n+\n+    Animated.timing(this.state.touch, {\n+      toValue: 1,\n+      duration: 300,\n+      easing: Easing.in(Easing.sin),\n+      useNativeDriver: true,\n+    }).start();\n+\n     if (index !== navigationState.index) {\n       this.props.onIndexChange(index);\n     }\n@@ -376,6 +406,8 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       renderScene,\n       renderIcon,\n       renderLabel,\n+      getLabelText = ({ route }) => route.title,\n+      getColor = ({ route }) => route.color,\n       barStyle,\n       style,\n       theme,\n@@ -400,7 +432,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ? this.state.index.interpolate({\n           inputRange: routes.map((_, i) => i),\n           outputRange: routes.map(\n-            route => route.color || approxBackgroundColor\n+            route => getColor({ route }) || approxBackgroundColor\n           ),\n         })\n       : approxBackgroundColor;\n@@ -416,7 +448,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n           .rgb()\n           .string();\n \n-    const rippleColor = color(textColor)\n+    const touchColor = color(textColor)\n       .alpha(0.12)\n       .rgb()\n       .string();\n@@ -430,22 +462,10 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n \n     // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n     // We need to move it from the left to the active tab and also account for how much that tab has shifted.\n-    const rippleShift =\n-      navigationState.index * tabWidth +\n-      tabWidth / 2 +\n-      this._calculateShift(\n-        this.state.previous,\n-        navigationState.index,\n-        routes.length\n-      );\n \n     return (\n       <View\n-        style={[\n-          styles.container,\n-          { backgroundColor: theme.dark ? white : black },\n-          style,\n-        ]}\n+        style={[styles.container, style]}\n         onLayout={this._handleLayout}\n         pointerEvents={layout.measured ? 'auto' : 'none'}\n       >\n@@ -485,25 +505,30 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n             style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n           >\n             {shifting ? (\n-              // Large ripple with the backround color\n               <Animated.View\n                 pointerEvents=\""none\""\n                 style={[\n                   styles.ripple,\n                   {\n                     // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - layout.width / 2,\n-                    left: rippleShift - layout.width / 2,\n-                    height: layout.width,\n-                    width: layout.width,\n+                    top: BAR_HEIGHT / 2 - layout.width / 8,\n+                    left:\n+                      navigationState.index * tabWidth +\n+                      tabWidth / 2 -\n+                      layout.width / 8,\n+                    height: layout.width / 4,\n+                    width: layout.width / 4,\n                     borderRadius: layout.width / 2,\n-                    backgroundColor: routes[navigationState.index].color,\n+                    backgroundColor: getColor({\n+                      route: routes[navigationState.index],\n+                    }),\n                     transform: [\n+                      { translateX: this.state.shifts[navigationState.index] },\n                       {\n                         // Scale to twice the size  to ensure it covers the whole tab bar\n                         scale: this.state.ripple.interpolate({\n                           inputRange: [0, 1],\n-                          outputRange: [0, 2],\n+                          outputRange: [0, 8],\n                         }),\n                       },\n                     ],\n@@ -515,36 +540,36 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                 ]}\n               />\n             ) : null}\n-            {shifting ? (\n-              // Small subtle ripple on touch\n-              <Animated.View\n-                pointerEvents=\""none\""\n-                style={[\n-                  styles.ripple,\n-                  {\n-                    // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n-                    left: rippleShift - SMALL_RIPPLE_SIZE / 2,\n-                    height: SMALL_RIPPLE_SIZE,\n-                    width: SMALL_RIPPLE_SIZE,\n-                    borderRadius: SMALL_RIPPLE_SIZE / 2,\n-                    backgroundColor: rippleColor,\n-                    transform: [\n-                      {\n-                        scale: this.state.ripple.interpolate({\n-                          inputRange: [0, 0.5, 1],\n-                          outputRange: [0, 1, 1],\n-                        }),\n-                      },\n-                    ],\n-                    opacity: this.state.ripple.interpolate({\n-                      inputRange: [0, MIN_RIPPLE_SCALE, 0.25, 0.5],\n-                      outputRange: [0, 0, 1, 0],\n-                    }),\n-                  },\n-                ]}\n-              />\n-            ) : null}\n+            <Animated.View\n+              pointerEvents=\""none\""\n+              style={[\n+                styles.ripple,\n+                {\n+                  // Set top and left values so that the ripple's center is same as the tab's center\n+                  top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n+                  left:\n+                    navigationState.index * tabWidth +\n+                    tabWidth / 2 -\n+                    SMALL_RIPPLE_SIZE / 2,\n+                  height: SMALL_RIPPLE_SIZE,\n+                  width: SMALL_RIPPLE_SIZE,\n+                  borderRadius: SMALL_RIPPLE_SIZE / 2,\n+                  backgroundColor: touchColor,\n+                  transform: [\n+                    {\n+                      translateX: shifting\n+                        ? this.state.shifts[navigationState.index]\n+                        : 0,\n+                    },\n+                    { scale: this.state.touch },\n+                  ],\n+                  opacity: this.state.touch.interpolate({\n+                    inputRange: [0, 0.5, 1],\n+                    outputRange: [0, 1, 0],\n+                  }),\n+                },\n+              ]}\n+            />\n             {routes.map((route, index) => {\n               const shift = this.state.shifts[index];\n               const focused = this.state.tabs[index];\n@@ -607,7 +632,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderIcon ? (\n-                          renderIcon({ route, focused: true })\n+                          renderIcon({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <Icon\n                             style={styles.icon}\n@@ -625,7 +654,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderIcon ? (\n-                            renderIcon({ route, focused: false })\n+                            renderIcon({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <Icon\n                               style={styles.icon}\n@@ -652,7 +685,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderLabel ? (\n-                          renderLabel({ route, focused: true })\n+                          renderLabel({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <AnimatedText\n                             style={[\n@@ -662,7 +699,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                               },\n                             ]}\n                           >\n-                            {route.title}\n+                            {getLabelText({ route })}\n                           </AnimatedText>\n                         )}\n                       </Animated.View>\n@@ -674,7 +711,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderLabel ? (\n-                            renderLabel({ route, focused: false })\n+                            renderLabel({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <AnimatedText\n                               style={[\n@@ -684,7 +725,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                                 },\n                               ]}\n                             >\n-                              {route.title}\n+                              {getLabelText({ route })}\n                             </AnimatedText>\n                           )}\n                         </Animated.View>\n"", ""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex e23088e..9708157 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -202,11 +202,11 @@ jobs:\n         run: poetry install --without dev --without docs --extras ${{ matrix.backend.name }} --extras geospatial\n \n       - name: \""run parallel tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name != 'pyspark' && matrix.backend.name != 'impala'\n+        if: matrix.backend.name != 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }} --numprocesses auto --dist=loadgroup\n \n       - name: \""run serial tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name == 'pyspark' || matrix.backend.name == 'impala'\n+        if: matrix.backend.name == 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }}\n         env:\n           IBIS_TEST_NN_HOST: localhost\n""]",4,"[""af880ac5b4fecbc6c4f3d1eee0d95f326e8bd9d1"", ""ded26d768ff432ad3bde3c0aa1e95ce50726100a"", ""454003841aabeb74396d73541378bfa59c75b5db"", ""4cbbd2552ba0de273e1dfe7d453c5b3efed751a3""]","[""docs"", ""feat"", ""build"", ""cicd""]"
"add comments for the Handler,export a modal transition preset,increment failing test retries,spring version, core version","[""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n"", ""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n"", ""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n"", ""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n""]",4,"[""036a0ff49a7dade0e04c9c07071a1ff49133ee24"", ""535708ae50aecb452560a23356fd396f99ef13a2"", ""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57"", ""c55591ba157298a9c5816693c102a89dfd058830""]","[""docs"", ""refactor"", ""cicd"", ""build""]"
"added suported tuple types,publish sdks after docs/build,wrong icon reference

Signed-off-by: Pranav C <pranavxc@gmail.com>,add .nullif() example","[""diff --git a/src/List/Tuple.ts b/src/List/Tuple.ts\nindex 4c59caa..6e45503 100644\n--- a/src/List/Tuple.ts\n+++ b/src/List/Tuple.ts\n@@ -1,15 +1,17 @@\n-/** A [[Tuple]]\n+import {NonNullable} from '../Object/NonNullable'\n+\n+/** A [[Tuple]] (supported)\n  * @param A its type\n- * @returns **`any[]`**\n+ * @returns **`A[]`**\n  * @example\n  * ```ts\n- * type list0 = [1, 2, 3]\n- * type list1 = number[]\n+ * type tuple0 = [1, 20, 42]\n+ * type tuple1 = ['at', 420]\n  * ```\n  */\n-export type Tuple = [\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-]\n+export type Tuple<A = any> = NonNullable<[\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+]>\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n"", ""diff --git a/packages/nc-gui/components.d.ts b/packages/nc-gui/components.d.ts\nindex b7e6585..bb86478 100644\n--- a/packages/nc-gui/components.d.ts\n+++ b/packages/nc-gui/components.d.ts\n@@ -81,7 +81,6 @@ declare module '@vue/runtime-core' {\n     ClaritySuccessLine: typeof import('~icons/clarity/success-line')['default']\n     EvaEmailOutline: typeof import('~icons/eva/email-outline')['default']\n     IcBaselineMoreVert: typeof import('~icons/ic/baseline-more-vert')['default']\n-    Icon: typeof import('~icons/ic/on')['default']\n     IcOutlineInsertDriveFile: typeof import('~icons/ic/outline-insert-drive-file')['default']\n     IcRoundEdit: typeof import('~icons/ic/round-edit')['default']\n     IcRoundKeyboardArrowDown: typeof import('~icons/ic/round-keyboard-arrow-down')['default']\n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n""]",4,"[""2954a0955ce9af6acb345ed1e8328e145ad30475"", ""6c9cb638cb4d1ecc42632fcf389c24898c5b3244"", ""d1d55e787b7d07f763852602b9939a5394607fd9"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21""]","[""refactor"", ""cicd"", ""fix"", ""docs""]"
"setup jest and add m.ts tests,run pyspark tests in parallel,Fix typo,add props to get color and label from a route","[""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex e23088e..9708157 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -202,11 +202,11 @@ jobs:\n         run: poetry install --without dev --without docs --extras ${{ matrix.backend.name }} --extras geospatial\n \n       - name: \""run parallel tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name != 'pyspark' && matrix.backend.name != 'impala'\n+        if: matrix.backend.name != 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }} --numprocesses auto --dist=loadgroup\n \n       - name: \""run serial tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name == 'pyspark' || matrix.backend.name == 'impala'\n+        if: matrix.backend.name == 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }}\n         env:\n           IBIS_TEST_NN_HOST: localhost\n"", ""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/src/components/BottomNavigation.js b/src/components/BottomNavigation.js\nindex 1b72302..7d8ea75 100644\n--- a/src/components/BottomNavigation.js\n+++ b/src/components/BottomNavigation.js\n@@ -24,8 +24,8 @@ const AnimatedPaper = Animated.createAnimatedComponent(Paper);\n \n type Route = {\n   key: string,\n-  title: string,\n-  icon: IconSource,\n+  title?: string,\n+  icon?: IconSource,\n   color?: string,\n };\n \n@@ -51,7 +51,7 @@ type Props<T> = {\n    * - `key`: a unique key to identify the route\n    * - `title`: title of the route to use as the tab label\n    * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n-   * - `color`: color to use as background color for shifting bottom navigation (optional)\n+   * - `color`: color to use as background color for shifting bottom navigation\n    *\n    * Example:\n    *\n@@ -115,11 +115,27 @@ type Props<T> = {\n   /**\n    * Callback which returns a React Element to be used as tab icon.\n    */\n-  renderIcon?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderIcon?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n   /**\n    * Callback which React Element to be used as tab label.\n    */\n-  renderLabel?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderLabel?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n+  /**\n+   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n+   */\n+  getLabelText?: (props: { route: T }) => string,\n+  /**\n+   * Get color for the tab, uses `route.color` by default.\n+   */\n+  getColor?: (props: { route: T }) => string,\n   /**\n    * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n    */\n@@ -159,6 +175,10 @@ type State = {\n    */\n   ripple: Animated.Value,\n   /**\n+   * Animation for the touch feedback, used to determine it's scale and opacity.\n+   */\n+  touch: Animated.Value,\n+  /**\n    * Layout of the tab bar. The width is used to determine the size and position of the ripple.\n    */\n   layout: { height: number, width: number, measured: boolean },\n@@ -173,7 +193,7 @@ const MIN_SHIFT_AMOUNT = 10;\n const MIN_TAB_WIDTH = 96;\n const MAX_TAB_WIDTH = 168;\n const BAR_HEIGHT = 56;\n-const SMALL_RIPPLE_SIZE = 72;\n+const SMALL_RIPPLE_SIZE = 96;\n const ACTIVE_LABEL_SIZE = 14;\n const INACTIVE_LABEL_SIZE = 12;\n \n@@ -251,6 +271,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ),\n       index: new Animated.Value(index),\n       ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n+      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n       layout: { height: 0, width: 0, measured: false },\n       previous: 0,\n     };\n@@ -349,6 +370,15 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n   _handleTabPress = (index: number) => {\n     const { navigationState } = this.props;\n \n+    this.state.touch.setValue(MIN_RIPPLE_SCALE);\n+\n+    Animated.timing(this.state.touch, {\n+      toValue: 1,\n+      duration: 300,\n+      easing: Easing.in(Easing.sin),\n+      useNativeDriver: true,\n+    }).start();\n+\n     if (index !== navigationState.index) {\n       this.props.onIndexChange(index);\n     }\n@@ -376,6 +406,8 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       renderScene,\n       renderIcon,\n       renderLabel,\n+      getLabelText = ({ route }) => route.title,\n+      getColor = ({ route }) => route.color,\n       barStyle,\n       style,\n       theme,\n@@ -400,7 +432,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ? this.state.index.interpolate({\n           inputRange: routes.map((_, i) => i),\n           outputRange: routes.map(\n-            route => route.color || approxBackgroundColor\n+            route => getColor({ route }) || approxBackgroundColor\n           ),\n         })\n       : approxBackgroundColor;\n@@ -416,7 +448,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n           .rgb()\n           .string();\n \n-    const rippleColor = color(textColor)\n+    const touchColor = color(textColor)\n       .alpha(0.12)\n       .rgb()\n       .string();\n@@ -430,22 +462,10 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n \n     // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n     // We need to move it from the left to the active tab and also account for how much that tab has shifted.\n-    const rippleShift =\n-      navigationState.index * tabWidth +\n-      tabWidth / 2 +\n-      this._calculateShift(\n-        this.state.previous,\n-        navigationState.index,\n-        routes.length\n-      );\n \n     return (\n       <View\n-        style={[\n-          styles.container,\n-          { backgroundColor: theme.dark ? white : black },\n-          style,\n-        ]}\n+        style={[styles.container, style]}\n         onLayout={this._handleLayout}\n         pointerEvents={layout.measured ? 'auto' : 'none'}\n       >\n@@ -485,25 +505,30 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n             style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n           >\n             {shifting ? (\n-              // Large ripple with the backround color\n               <Animated.View\n                 pointerEvents=\""none\""\n                 style={[\n                   styles.ripple,\n                   {\n                     // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - layout.width / 2,\n-                    left: rippleShift - layout.width / 2,\n-                    height: layout.width,\n-                    width: layout.width,\n+                    top: BAR_HEIGHT / 2 - layout.width / 8,\n+                    left:\n+                      navigationState.index * tabWidth +\n+                      tabWidth / 2 -\n+                      layout.width / 8,\n+                    height: layout.width / 4,\n+                    width: layout.width / 4,\n                     borderRadius: layout.width / 2,\n-                    backgroundColor: routes[navigationState.index].color,\n+                    backgroundColor: getColor({\n+                      route: routes[navigationState.index],\n+                    }),\n                     transform: [\n+                      { translateX: this.state.shifts[navigationState.index] },\n                       {\n                         // Scale to twice the size  to ensure it covers the whole tab bar\n                         scale: this.state.ripple.interpolate({\n                           inputRange: [0, 1],\n-                          outputRange: [0, 2],\n+                          outputRange: [0, 8],\n                         }),\n                       },\n                     ],\n@@ -515,36 +540,36 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                 ]}\n               />\n             ) : null}\n-            {shifting ? (\n-              // Small subtle ripple on touch\n-              <Animated.View\n-                pointerEvents=\""none\""\n-                style={[\n-                  styles.ripple,\n-                  {\n-                    // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n-                    left: rippleShift - SMALL_RIPPLE_SIZE / 2,\n-                    height: SMALL_RIPPLE_SIZE,\n-                    width: SMALL_RIPPLE_SIZE,\n-                    borderRadius: SMALL_RIPPLE_SIZE / 2,\n-                    backgroundColor: rippleColor,\n-                    transform: [\n-                      {\n-                        scale: this.state.ripple.interpolate({\n-                          inputRange: [0, 0.5, 1],\n-                          outputRange: [0, 1, 1],\n-                        }),\n-                      },\n-                    ],\n-                    opacity: this.state.ripple.interpolate({\n-                      inputRange: [0, MIN_RIPPLE_SCALE, 0.25, 0.5],\n-                      outputRange: [0, 0, 1, 0],\n-                    }),\n-                  },\n-                ]}\n-              />\n-            ) : null}\n+            <Animated.View\n+              pointerEvents=\""none\""\n+              style={[\n+                styles.ripple,\n+                {\n+                  // Set top and left values so that the ripple's center is same as the tab's center\n+                  top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n+                  left:\n+                    navigationState.index * tabWidth +\n+                    tabWidth / 2 -\n+                    SMALL_RIPPLE_SIZE / 2,\n+                  height: SMALL_RIPPLE_SIZE,\n+                  width: SMALL_RIPPLE_SIZE,\n+                  borderRadius: SMALL_RIPPLE_SIZE / 2,\n+                  backgroundColor: touchColor,\n+                  transform: [\n+                    {\n+                      translateX: shifting\n+                        ? this.state.shifts[navigationState.index]\n+                        : 0,\n+                    },\n+                    { scale: this.state.touch },\n+                  ],\n+                  opacity: this.state.touch.interpolate({\n+                    inputRange: [0, 0.5, 1],\n+                    outputRange: [0, 1, 0],\n+                  }),\n+                },\n+              ]}\n+            />\n             {routes.map((route, index) => {\n               const shift = this.state.shifts[index];\n               const focused = this.state.tabs[index];\n@@ -607,7 +632,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderIcon ? (\n-                          renderIcon({ route, focused: true })\n+                          renderIcon({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <Icon\n                             style={styles.icon}\n@@ -625,7 +654,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderIcon ? (\n-                            renderIcon({ route, focused: false })\n+                            renderIcon({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <Icon\n                               style={styles.icon}\n@@ -652,7 +685,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderLabel ? (\n-                          renderLabel({ route, focused: true })\n+                          renderLabel({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <AnimatedText\n                             style={[\n@@ -662,7 +699,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                               },\n                             ]}\n                           >\n-                            {route.title}\n+                            {getLabelText({ route })}\n                           </AnimatedText>\n                         )}\n                       </Animated.View>\n@@ -674,7 +711,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderLabel ? (\n-                            renderLabel({ route, focused: false })\n+                            renderLabel({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <AnimatedText\n                               style={[\n@@ -684,7 +725,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                                 },\n                               ]}\n                             >\n-                              {route.title}\n+                              {getLabelText({ route })}\n                             </AnimatedText>\n                           )}\n                         </Animated.View>\n""]",4,"[""229b53a632ea97d47c4be11f096bdd828fb415d8"", ""4cbbd2552ba0de273e1dfe7d453c5b3efed751a3"", ""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""ded26d768ff432ad3bde3c0aa1e95ce50726100a""]","[""test"", ""cicd"", ""docs"", ""feat""]"
"remove appear css animation,allow disabling dynamic queue,ensure checksum persist flushes to disk,terminated tasks linger for a bit

Signed-off-by: Eliza Weisman <eliza@buoyant.io>","[""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n"", ""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n"", ""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n"", ""diff --git a/console/src/main.rs b/console/src/main.rs\nindex ebfa315..5328d96 100644\n--- a/console/src/main.rs\n+++ b/console/src/main.rs\n@@ -69,6 +69,7 @@ async fn main() -> Result<(), Box<dyn std::error::Error>> {\n                 .wrap(Wrap { trim: true });\n             f.render_widget(header, chunks[0]);\n             tasks.render(f, chunks[1]);\n+            tasks.retain_active();\n         })?;\n     }\n \ndiff --git a/console/src/tasks.rs b/console/src/tasks.rs\nindex 7be39a4..eb41495 100644\n--- a/console/src/tasks.rs\n+++ b/console/src/tasks.rs\n@@ -19,6 +19,7 @@ struct Task {\n     fields: String,\n     kind: &'static str,\n     stats: Stats,\n+    completed_for: usize,\n }\n \n #[derive(Default, Debug)]\n@@ -28,10 +29,15 @@ struct Stats {\n     idle: Duration,\n     total: Duration,\n }\n+\n impl State {\n+    // How many updates to retain completed tasks for\n+    const RETAIN_COMPLETED_FOR: usize = 6;\n+\n     pub(crate) fn len(&self) -> usize {\n         self.tasks.len()\n     }\n+\n     pub(crate) fn update(&mut self, update: proto::tasks::TaskUpdate) {\n         let new_tasks = update.new_tasks.into_iter().filter_map(|task| {\n             if task.id.is_none() {\n@@ -48,6 +54,7 @@ impl State {\n                 fields: task.string_fields,\n                 kind,\n                 stats: Default::default(),\n+                completed_for: 0,\n             };\n             Some((id, task))\n         });\n@@ -60,7 +67,10 @@ impl State {\n         }\n \n         for proto::SpanId { id } in update.completed {\n-            if self.tasks.remove(&id).is_none() {\n+            if let Some(task) = self.tasks.get_mut(&id) {\n+                task.kind = \""!\"";\n+                task.completed_for = 1;\n+            } else {\n                 tracing::warn!(?id, \""tried to complete a task that didn't exist\"");\n             }\n         }\n@@ -79,7 +89,7 @@ impl State {\n         const DUR_PRECISION: usize = 4;\n         const POLLS_LEN: usize = 5;\n         let rows = self.tasks.values().map(|task| {\n-            let row = Row::new(vec![\n+            let mut row = Row::new(vec![\n                 Cell::from(task.id_hex.as_str()),\n                 // TODO(eliza): is there a way to write a `fmt::Debug` impl\n                 // directly to tui without doing an allocation?\n@@ -105,6 +115,9 @@ impl State {\n                 Cell::from(format!(\""{:>width$}\"", task.stats.polls, width = POLLS_LEN)),\n                 Cell::from(task.fields.as_str()),\n             ]);\n+            if task.completed_for > 0 {\n+                row = row.style(Style::default().add_modifier(style::Modifier::DIM));\n+            }\n             row\n         });\n         let t = Table::new(rows)\n@@ -126,6 +139,16 @@ impl State {\n \n         frame.render_widget(t, area)\n     }\n+\n+    pub(crate) fn retain_active(&mut self) {\n+        self.tasks.retain(|_, task| {\n+            if task.completed_for == 0 {\n+                return true;\n+            }\n+            task.completed_for += 1;\n+            task.completed_for <= Self::RETAIN_COMPLETED_FOR\n+        })\n+    }\n }\n \n impl From<proto::tasks::Stats> for Stats {\n""]",4,"[""47ef9104e4a89e80d7cc6c1950bc080841da4a7b"", ""9ef5c0d14193a9abb09b39856f58477d1f4b0d77"", ""b7ce2894fd1794064bd6db4ed730bb6cb7728739"", ""1bcf88670b50155b50071e707f98f30cea0b7a24""]","[""refactor"", ""fix"", ""test"", ""feat""]"
"nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>,add riscv64gc-unknown-linux-gnu,export a modal transition preset","[""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n"", ""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n"", ""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n"", ""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n""]",4,"[""e12d9e77a6fd531a22325337838a841b1c67f00d"", ""fd8e563cc19ca4684885d4692acee6bebcca4ada"", ""173553c0372e66e03bdab19e0e6c2dd44daa14a0"", ""535708ae50aecb452560a23356fd396f99ef13a2""]","[""docs"", ""feat"", ""cicd"", ""refactor""]"
"convert `run_tag_values_test_case` to a function,detach ViewControllers when not active,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,remove ubuntu-latest from job title where that is the only os","[""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n"", ""diff --git a/ionic/components/nav/nav-controller.ts b/ionic/components/nav/nav-controller.ts\nindex becdd99..1cc3c31 100644\n--- a/ionic/components/nav/nav-controller.ts\n+++ b/ionic/components/nav/nav-controller.ts\n@@ -1410,6 +1410,9 @@ export class NavController extends Ion {\n       // set the ComponentRef's instance to this ViewController\n       view.setInstance(component);\n \n+      // remember the ChangeDetectorRef for this ViewController\n+      view.setChangeDetector(hostViewRef.changeDetectorRef);\n+\n       // remember the ElementRef to the ion-page elementRef that was just created\n       view.setPageRef(pageElementRef);\n \ndiff --git a/ionic/components/nav/view-controller.ts b/ionic/components/nav/view-controller.ts\nindex 3207fa2..069c74d 100644\n--- a/ionic/components/nav/view-controller.ts\n+++ b/ionic/components/nav/view-controller.ts\n@@ -1,4 +1,4 @@\n-import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer} from 'angular2/core';\n+import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer, ChangeDetectorRef} from 'angular2/core';\n \n import {Navbar} from '../navbar/navbar';\n import {NavController, NavOptions} from './nav-controller';\n@@ -33,6 +33,7 @@ export class ViewController {\n   private _nbVwRef: ViewContainerRef;\n   private _onDismiss: Function = null;\n   private _pgRef: ElementRef;\n+  private _cd: ChangeDetectorRef;\n   protected _nav: NavController;\n \n   /**\n@@ -166,6 +167,13 @@ export class ViewController {\n   /**\n    * @private\n    */\n+  setChangeDetector(cd: ChangeDetectorRef) {\n+    this._cd = cd;\n+  }\n+\n+  /**\n+   * @private\n+   */\n   setInstance(instance: any) {\n     this.instance = instance;\n   }\n@@ -467,6 +475,14 @@ export class ViewController {\n    * The view is about to enter and become the active view.\n    */\n   willEnter() {\n+    if (this._cd) {\n+      // ensure this has been re-attached to the change detector\n+      this._cd.reattach();\n+\n+      // detect changes before we run any user code\n+      this._cd.detectChanges();\n+    }\n+\n     ctrlFn(this, 'onPageWillEnter');\n   }\n \n@@ -496,6 +512,10 @@ export class ViewController {\n    */\n   didLeave() {\n     ctrlFn(this, 'onPageDidLeave');\n+\n+    // when this is not the active page\n+    // we no longer need to detect changes\n+    this._cd && this._cd.detach();\n   }\n \n   /**\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n""]",4,"[""1db13ec43727aca872a0f3836e4023ed85db665e"", ""b282e90e2cbb74559aab79eee8443a4d7c85502a"", ""e12d9e77a6fd531a22325337838a841b1c67f00d"", ""74e9de5ec97dc013a52aa063dff0f40ac74c407b""]","[""refactor"", ""feat"", ""docs"", ""cicd""]"
"added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,remove ubuntu-latest from job title where that is the only os,added suported tuple types,Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.","[""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n"", ""diff --git a/src/List/Tuple.ts b/src/List/Tuple.ts\nindex 4c59caa..6e45503 100644\n--- a/src/List/Tuple.ts\n+++ b/src/List/Tuple.ts\n@@ -1,15 +1,17 @@\n-/** A [[Tuple]]\n+import {NonNullable} from '../Object/NonNullable'\n+\n+/** A [[Tuple]] (supported)\n  * @param A its type\n- * @returns **`any[]`**\n+ * @returns **`A[]`**\n  * @example\n  * ```ts\n- * type list0 = [1, 2, 3]\n- * type list1 = number[]\n+ * type tuple0 = [1, 20, 42]\n+ * type tuple1 = ['at', 420]\n  * ```\n  */\n-export type Tuple = [\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-]\n+export type Tuple<A = any> = NonNullable<[\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+]>\n"", ""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n""]",4,"[""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""74e9de5ec97dc013a52aa063dff0f40ac74c407b"", ""2954a0955ce9af6acb345ed1e8328e145ad30475"", ""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3""]","[""docs"", ""cicd"", ""refactor"", ""test""]"
"ensure checksum persist flushes to disk,add spacing in comment fix lint (#8555),publish sdks after docs/build,print errors without stacktrace","[""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n"", ""diff --git a/src/components/nav/test/basic/app-module.ts b/src/components/nav/test/basic/app-module.ts\nindex 467917a..375e662 100644\n--- a/src/components/nav/test/basic/app-module.ts\n+++ b/src/components/nav/test/basic/app-module.ts\n@@ -633,7 +633,7 @@ export class Tab3 {\n   }\n \n   presentModal() {\n-    //this.modalCtrl.create(MyModal).present();\n+    // this.modalCtrl.create(MyModal).present();\n   }\n \n   selectPrevious() {\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n"", ""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n""]",4,"[""b7ce2894fd1794064bd6db4ed730bb6cb7728739"", ""af880ac5b4fecbc6c4f3d1eee0d95f326e8bd9d1"", ""6c9cb638cb4d1ecc42632fcf389c24898c5b3244"", ""d129eaf9125a967ac86c6c7276bbae6b4d50af36""]","[""test"", ""docs"", ""cicd"", ""fix""]"
"increment failing test retries,cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.,add tests,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909","[""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n"", ""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n"", ""diff --git a/Cargo.lock b/Cargo.lock\nindex 84d5d07..6ad05da 100644\n--- a/Cargo.lock\n+++ b/Cargo.lock\n@@ -293,6 +293,7 @@ version = \""0.1.0\""\n dependencies = [\n  \""git-cliff-core\"",\n  \""log\"",\n+ \""pretty_assertions\"",\n  \""pretty_env_logger\"",\n  \""structopt\"",\n ]\ndiff --git a/git-cliff-core/src/lib.rs b/git-cliff-core/src/lib.rs\nindex 3b18ba0..a560c94 100644\n--- a/git-cliff-core/src/lib.rs\n+++ b/git-cliff-core/src/lib.rs\n@@ -1,6 +1,8 @@\n //! Highly customizable Changelog Generator\n #![warn(missing_docs, clippy::unwrap_used)]\n \n+/// Export regex crate.\n+pub use regex;\n /// Git commit.\n pub mod commit;\n /// Config file parser.\ndiff --git a/git-cliff/Cargo.toml b/git-cliff/Cargo.toml\nindex 41eb2e9..cc64b37 100644\n--- a/git-cliff/Cargo.toml\n+++ b/git-cliff/Cargo.toml\n@@ -20,3 +20,6 @@ log = \""0.4.14\""\n version = \""0.3\""\n default-features = false\n features = [\""suggestions\"", \""color\"", \""wrap_help\""]\n+\n+[dev-dependencies]\n+pretty_assertions = \""0.7\""\ndiff --git a/git-cliff/src/changelog.rs b/git-cliff/src/changelog.rs\nindex 3f9e994..23ea186 100644\n--- a/git-cliff/src/changelog.rs\n+++ b/git-cliff/src/changelog.rs\n@@ -115,3 +115,171 @@ impl<'a> Changelog<'a> {\n \t\tOk(())\n \t}\n }\n+\n+#[cfg(test)]\n+mod test {\n+\tuse super::*;\n+\tuse git_cliff_core::config::{\n+\t\tChangelogConfig,\n+\t\tCommitParser,\n+\t\tGitConfig,\n+\t};\n+\tuse git_cliff_core::regex::Regex;\n+\tuse pretty_assertions::assert_eq;\n+\tuse std::str;\n+\t#[test]\n+\tfn changelog_generator() -> Result<()> {\n+\t\tlet config = Config {\n+\t\t\tchangelog: ChangelogConfig {\n+\t\t\t\theader: Some(String::from(\""# Changelog\"")),\n+\t\t\t\tbody:   String::from(\n+\t\t\t\t\tr#\""{% if version %}\n+\t\t\t\t## Release [{{ version }}] - {{ timestamp | date(format=\""%Y-%m-%d\"") }}\n+\t\t\t\t({{ commit_id }}){% else %}\n+\t\t\t\t## Unreleased{% endif %}\n+\t\t\t\t{% for group, commits in commits | group_by(attribute=\""group\"") %}\n+\t\t\t\t### {{ group }}{% for group, commits in commits | group_by(attribute=\""scope\"") %}\n+\t\t\t\t#### {{ group }}{% for commit in commits %}\n+\t\t\t\t- {{ commit.message }}{% endfor %}\n+\t\t\t\t{% endfor %}{% endfor %}\""#,\n+\t\t\t\t)\n+\t\t\t\t.replace(\""\t\t\t\t\"", \""\""),\n+\t\t\t\tfooter: Some(String::from(\""------------\"")),\n+\t\t\t},\n+\t\t\tgit:       GitConfig {\n+\t\t\t\tconventional_commits: true,\n+\t\t\t\tcommit_parsers:       Some(vec![\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""feat*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""New features\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""fix*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Bug Fixes\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\"".*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Other\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t]),\n+\t\t\t\tfilter_commits:       Some(false),\n+\t\t\t\ttag_pattern:          String::new(),\n+\t\t\t\tskip_tags:            Regex::new(\""v3.*\"").ok(),\n+\t\t\t},\n+\t\t};\n+\t\tlet test_release = Release {\n+\t\t\tversion:   Some(String::from(\""v1.0.0\"")),\n+\t\t\tcommits:   vec![\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0bc123\""),\n+\t\t\t\t\tString::from(\""feat(app): add cool features\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0werty\""),\n+\t\t\t\t\tString::from(\""style(ui): make good stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0w3rty\""),\n+\t\t\t\t\tString::from(\""fix(ui): fix more stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0jkl12\""),\n+\t\t\t\t\tString::from(\""chore(app): do nothing\""),\n+\t\t\t\t),\n+\t\t\t],\n+\t\t\tcommit_id: Some(String::from(\""0bc123\"")),\n+\t\t\ttimestamp: 50000000,\n+\t\t\tprevious:  None,\n+\t\t};\n+\t\tlet releases = vec![\n+\t\t\ttest_release.clone(),\n+\t\t\tRelease {\n+\t\t\t\tversion: Some(String::from(\""v3.0.0\"")),\n+\t\t\t\tcommits: vec![Commit::new(\n+\t\t\t\t\tString::from(\""n0thin\""),\n+\t\t\t\t\tString::from(\""feat(xyz): skip commit\""),\n+\t\t\t\t)],\n+\t\t\t\t..Release::default()\n+\t\t\t},\n+\t\t\tRelease {\n+\t\t\t\tversion:   None,\n+\t\t\t\tcommits:   vec![\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc123\""),\n+\t\t\t\t\t\tString::from(\""feat(app): add xyz\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc124\""),\n+\t\t\t\t\t\tString::from(\""docs(app): document zyx\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(String::from(\""def789\""), String::from(\""merge #4\"")),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""qwerty\""),\n+\t\t\t\t\t\tString::from(\""fix(app): fix abc\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""hjkl12\""),\n+\t\t\t\t\t\tString::from(\""chore(ui): do boring stuff\""),\n+\t\t\t\t\t),\n+\t\t\t\t],\n+\t\t\t\tcommit_id: None,\n+\t\t\t\ttimestamp: 1000,\n+\t\t\t\tprevious:  Some(Box::new(test_release)),\n+\t\t\t},\n+\t\t];\n+\t\tlet changelog = Changelog::new(releases, &config)?;\n+\t\tlet mut out = Vec::new();\n+\t\tchangelog.generate(&mut out)?;\n+\t\tassert_eq!(\n+\t\t\tString::from(\n+\t\t\t\tr#\""# Changelog\n+\n+\t\t\t## Unreleased\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### app\n+\t\t\t- fix abc\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add xyz\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- document zyx\n+\n+\t\t\t#### ui\n+\t\t\t- do boring stuff\n+\n+\t\t\t## Release [v1.0.0] - 1971-08-02\n+\t\t\t(0bc123)\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### ui\n+\t\t\t- fix more stuff\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add cool features\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- do nothing\n+\n+\t\t\t#### ui\n+\t\t\t- make good stuff\n+\t\t\t------------\n+\t\t\t\""#\n+\t\t\t)\n+\t\t\t.replace(\""\t\t\t\"", \""\""),\n+\t\t\tstr::from_utf8(&out).unwrap()\n+\t\t);\n+\t\tOk(())\n+\t}\n+}\n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n""]",4,"[""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57"", ""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7"", ""8ee0611fbf0cd89abe7ae588f22e6ecb843598ea"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119""]","[""cicd"", ""refactor"", ""test"", ""docs""]"
"update `cargo-make` for `v0.35.3`,enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>,add benchmark for known-slow table expression,assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>","[""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n"", ""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n"", ""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n"", ""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n""]",4,"[""0cfc5633d37ea06f645649138323f1820e18bdee"", ""fd8e563cc19ca4684885d4692acee6bebcca4ada"", ""e9617f0854030e70365eb264bcb3b58078e79e9e"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3""]","[""docs"", ""feat"", ""test"", ""build""]"
"remove appear css animation,detach ViewControllers when not active,verify checkpoint listeners are notified,autostart feature fixed","[""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n"", ""diff --git a/ionic/components/nav/nav-controller.ts b/ionic/components/nav/nav-controller.ts\nindex becdd99..1cc3c31 100644\n--- a/ionic/components/nav/nav-controller.ts\n+++ b/ionic/components/nav/nav-controller.ts\n@@ -1410,6 +1410,9 @@ export class NavController extends Ion {\n       // set the ComponentRef's instance to this ViewController\n       view.setInstance(component);\n \n+      // remember the ChangeDetectorRef for this ViewController\n+      view.setChangeDetector(hostViewRef.changeDetectorRef);\n+\n       // remember the ElementRef to the ion-page elementRef that was just created\n       view.setPageRef(pageElementRef);\n \ndiff --git a/ionic/components/nav/view-controller.ts b/ionic/components/nav/view-controller.ts\nindex 3207fa2..069c74d 100644\n--- a/ionic/components/nav/view-controller.ts\n+++ b/ionic/components/nav/view-controller.ts\n@@ -1,4 +1,4 @@\n-import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer} from 'angular2/core';\n+import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer, ChangeDetectorRef} from 'angular2/core';\n \n import {Navbar} from '../navbar/navbar';\n import {NavController, NavOptions} from './nav-controller';\n@@ -33,6 +33,7 @@ export class ViewController {\n   private _nbVwRef: ViewContainerRef;\n   private _onDismiss: Function = null;\n   private _pgRef: ElementRef;\n+  private _cd: ChangeDetectorRef;\n   protected _nav: NavController;\n \n   /**\n@@ -166,6 +167,13 @@ export class ViewController {\n   /**\n    * @private\n    */\n+  setChangeDetector(cd: ChangeDetectorRef) {\n+    this._cd = cd;\n+  }\n+\n+  /**\n+   * @private\n+   */\n   setInstance(instance: any) {\n     this.instance = instance;\n   }\n@@ -467,6 +475,14 @@ export class ViewController {\n    * The view is about to enter and become the active view.\n    */\n   willEnter() {\n+    if (this._cd) {\n+      // ensure this has been re-attached to the change detector\n+      this._cd.reattach();\n+\n+      // detect changes before we run any user code\n+      this._cd.detectChanges();\n+    }\n+\n     ctrlFn(this, 'onPageWillEnter');\n   }\n \n@@ -496,6 +512,10 @@ export class ViewController {\n    */\n   didLeave() {\n     ctrlFn(this, 'onPageDidLeave');\n+\n+    // when this is not the active page\n+    // we no longer need to detect changes\n+    this._cd && this._cd.detach();\n   }\n \n   /**\n"", ""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n""]",4,"[""47ef9104e4a89e80d7cc6c1950bc080841da4a7b"", ""b282e90e2cbb74559aab79eee8443a4d7c85502a"", ""e0198f74b81da3663144cfe1d971939319f82a0f"", ""bed78248c941d57ad4cc20a455147e186e97c7a1""]","[""refactor"", ""feat"", ""test"", ""fix""]"
"upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.,add riscv64gc-unknown-linux-gnu,print errors without stacktrace,add fallible peek_last_token()","[""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n"", ""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n"", ""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n""]",4,"[""454003841aabeb74396d73541378bfa59c75b5db"", ""173553c0372e66e03bdab19e0e6c2dd44daa14a0"", ""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""63eab619e6166eb6cab948028a7b89bf059dd878""]","[""build"", ""cicd"", ""fix"", ""refactor""]"
"add benchmark for known-slow table expression,added suported tuple types,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909,buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23","[""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n"", ""diff --git a/src/List/Tuple.ts b/src/List/Tuple.ts\nindex 4c59caa..6e45503 100644\n--- a/src/List/Tuple.ts\n+++ b/src/List/Tuple.ts\n@@ -1,15 +1,17 @@\n-/** A [[Tuple]]\n+import {NonNullable} from '../Object/NonNullable'\n+\n+/** A [[Tuple]] (supported)\n  * @param A its type\n- * @returns **`any[]`**\n+ * @returns **`A[]`**\n  * @example\n  * ```ts\n- * type list0 = [1, 2, 3]\n- * type list1 = number[]\n+ * type tuple0 = [1, 20, 42]\n+ * type tuple1 = ['at', 420]\n  * ```\n  */\n-export type Tuple = [\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-]\n+export type Tuple<A = any> = NonNullable<[\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+]>\n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n"", ""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n""]",4,"[""e9617f0854030e70365eb264bcb3b58078e79e9e"", ""2954a0955ce9af6acb345ed1e8328e145ad30475"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119"", ""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d""]","[""test"", ""refactor"", ""docs"", ""feat""]"
"upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.,small error msg improvement

refs #1005,use `regexp_instr != 0` instead of `REGEXP` keyword,run pyspark tests in parallel","[""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n"", ""diff --git a/internal/pipe/git/errors.go b/internal/pipe/git/errors.go\nindex a8c15d5..13dfb56 100644\n--- a/internal/pipe/git/errors.go\n+++ b/internal/pipe/git/errors.go\n@@ -11,7 +11,7 @@ type ErrDirty struct {\n }\n \n func (e ErrDirty) Error() string {\n-\treturn fmt.Sprintf(\""git is currently in a dirty state:\\n%v\"", e.status)\n+\treturn fmt.Sprintf(\""git is currently in a dirty state, please check in your pipeline what can be changing the following files:\\n%v\"", e.status)\n }\n \n // ErrWrongRef happens when the HEAD reference is different from the tag being built\n"", ""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex e23088e..9708157 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -202,11 +202,11 @@ jobs:\n         run: poetry install --without dev --without docs --extras ${{ matrix.backend.name }} --extras geospatial\n \n       - name: \""run parallel tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name != 'pyspark' && matrix.backend.name != 'impala'\n+        if: matrix.backend.name != 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }} --numprocesses auto --dist=loadgroup\n \n       - name: \""run serial tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name == 'pyspark' || matrix.backend.name == 'impala'\n+        if: matrix.backend.name == 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }}\n         env:\n           IBIS_TEST_NN_HOST: localhost\n""]",4,"[""454003841aabeb74396d73541378bfa59c75b5db"", ""a62314d9bb632be6af026686615d14b912250512"", ""06e2be4e2019b6fa714e1fcb34485860ef1ede79"", ""4cbbd2552ba0de273e1dfe7d453c5b3efed751a3""]","[""build"", ""refactor"", ""fix"", ""cicd""]"
"detach ViewControllers when not active,skip flaky test,add fallible peek_last_token(),publish sdks after docs/build","[""diff --git a/ionic/components/nav/nav-controller.ts b/ionic/components/nav/nav-controller.ts\nindex becdd99..1cc3c31 100644\n--- a/ionic/components/nav/nav-controller.ts\n+++ b/ionic/components/nav/nav-controller.ts\n@@ -1410,6 +1410,9 @@ export class NavController extends Ion {\n       // set the ComponentRef's instance to this ViewController\n       view.setInstance(component);\n \n+      // remember the ChangeDetectorRef for this ViewController\n+      view.setChangeDetector(hostViewRef.changeDetectorRef);\n+\n       // remember the ElementRef to the ion-page elementRef that was just created\n       view.setPageRef(pageElementRef);\n \ndiff --git a/ionic/components/nav/view-controller.ts b/ionic/components/nav/view-controller.ts\nindex 3207fa2..069c74d 100644\n--- a/ionic/components/nav/view-controller.ts\n+++ b/ionic/components/nav/view-controller.ts\n@@ -1,4 +1,4 @@\n-import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer} from 'angular2/core';\n+import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer, ChangeDetectorRef} from 'angular2/core';\n \n import {Navbar} from '../navbar/navbar';\n import {NavController, NavOptions} from './nav-controller';\n@@ -33,6 +33,7 @@ export class ViewController {\n   private _nbVwRef: ViewContainerRef;\n   private _onDismiss: Function = null;\n   private _pgRef: ElementRef;\n+  private _cd: ChangeDetectorRef;\n   protected _nav: NavController;\n \n   /**\n@@ -166,6 +167,13 @@ export class ViewController {\n   /**\n    * @private\n    */\n+  setChangeDetector(cd: ChangeDetectorRef) {\n+    this._cd = cd;\n+  }\n+\n+  /**\n+   * @private\n+   */\n   setInstance(instance: any) {\n     this.instance = instance;\n   }\n@@ -467,6 +475,14 @@ export class ViewController {\n    * The view is about to enter and become the active view.\n    */\n   willEnter() {\n+    if (this._cd) {\n+      // ensure this has been re-attached to the change detector\n+      this._cd.reattach();\n+\n+      // detect changes before we run any user code\n+      this._cd.detectChanges();\n+    }\n+\n     ctrlFn(this, 'onPageWillEnter');\n   }\n \n@@ -496,6 +512,10 @@ export class ViewController {\n    */\n   didLeave() {\n     ctrlFn(this, 'onPageDidLeave');\n+\n+    // when this is not the active page\n+    // we no longer need to detect changes\n+    this._cd && this._cd.detach();\n   }\n \n   /**\n"", ""diff --git a/test/browser-pool/browser-pool.test.ts b/test/browser-pool/browser-pool.test.ts\nindex 9f21322..7a011b5 100644\n--- a/test/browser-pool/browser-pool.test.ts\n+++ b/test/browser-pool/browser-pool.test.ts\n@@ -128,7 +128,8 @@ describe.each([\n             expect(page.close).toBeDefined();\n         });\n \n-        test('should allow early aborting in case of outer timeout', async () => {\n+        // TODO: this test is very flaky in the CI\n+        test.skip('should allow early aborting in case of outer timeout', async () => {\n             const timeout = browserPool.operationTimeoutMillis;\n             browserPool.operationTimeoutMillis = 500;\n             // @ts-expect-error mocking private method\n"", ""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n""]",4,"[""b282e90e2cbb74559aab79eee8443a4d7c85502a"", ""e2e8ad25854bd1e7cdbc7f50b50bbd99e04ad47d"", ""63eab619e6166eb6cab948028a7b89bf059dd878"", ""6c9cb638cb4d1ecc42632fcf389c24898c5b3244""]","[""feat"", ""test"", ""refactor"", ""cicd""]"
"update `cargo-make` for `v0.35.3`,wrong icon reference

Signed-off-by: Pranav C <pranavxc@gmail.com>,skip flaky test,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.","[""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n"", ""diff --git a/packages/nc-gui/components.d.ts b/packages/nc-gui/components.d.ts\nindex b7e6585..bb86478 100644\n--- a/packages/nc-gui/components.d.ts\n+++ b/packages/nc-gui/components.d.ts\n@@ -81,7 +81,6 @@ declare module '@vue/runtime-core' {\n     ClaritySuccessLine: typeof import('~icons/clarity/success-line')['default']\n     EvaEmailOutline: typeof import('~icons/eva/email-outline')['default']\n     IcBaselineMoreVert: typeof import('~icons/ic/baseline-more-vert')['default']\n-    Icon: typeof import('~icons/ic/on')['default']\n     IcOutlineInsertDriveFile: typeof import('~icons/ic/outline-insert-drive-file')['default']\n     IcRoundEdit: typeof import('~icons/ic/round-edit')['default']\n     IcRoundKeyboardArrowDown: typeof import('~icons/ic/round-keyboard-arrow-down')['default']\n"", ""diff --git a/test/browser-pool/browser-pool.test.ts b/test/browser-pool/browser-pool.test.ts\nindex 9f21322..7a011b5 100644\n--- a/test/browser-pool/browser-pool.test.ts\n+++ b/test/browser-pool/browser-pool.test.ts\n@@ -128,7 +128,8 @@ describe.each([\n             expect(page.close).toBeDefined();\n         });\n \n-        test('should allow early aborting in case of outer timeout', async () => {\n+        // TODO: this test is very flaky in the CI\n+        test.skip('should allow early aborting in case of outer timeout', async () => {\n             const timeout = browserPool.operationTimeoutMillis;\n             browserPool.operationTimeoutMillis = 500;\n             // @ts-expect-error mocking private method\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n""]",4,"[""0cfc5633d37ea06f645649138323f1820e18bdee"", ""d1d55e787b7d07f763852602b9939a5394607fd9"", ""e2e8ad25854bd1e7cdbc7f50b50bbd99e04ad47d"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c""]","[""docs"", ""fix"", ""test"", ""refactor""]"
"remove appear css animation,print errors without stacktrace,update `cargo-make` for `v0.35.3`,do not use scripts and binaries from the libcc repo","[""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n"", ""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n""]",4,"[""47ef9104e4a89e80d7cc6c1950bc080841da4a7b"", ""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""0cfc5633d37ea06f645649138323f1820e18bdee"", ""45837af24a33308a70a3454f0f650f9fe728e272""]","[""refactor"", ""fix"", ""docs"", ""cicd""]"
"autostart feature fixed,assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,do not use scripts and binaries from the libcc repo,add tests","[""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n"", ""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/Cargo.lock b/Cargo.lock\nindex 84d5d07..6ad05da 100644\n--- a/Cargo.lock\n+++ b/Cargo.lock\n@@ -293,6 +293,7 @@ version = \""0.1.0\""\n dependencies = [\n  \""git-cliff-core\"",\n  \""log\"",\n+ \""pretty_assertions\"",\n  \""pretty_env_logger\"",\n  \""structopt\"",\n ]\ndiff --git a/git-cliff-core/src/lib.rs b/git-cliff-core/src/lib.rs\nindex 3b18ba0..a560c94 100644\n--- a/git-cliff-core/src/lib.rs\n+++ b/git-cliff-core/src/lib.rs\n@@ -1,6 +1,8 @@\n //! Highly customizable Changelog Generator\n #![warn(missing_docs, clippy::unwrap_used)]\n \n+/// Export regex crate.\n+pub use regex;\n /// Git commit.\n pub mod commit;\n /// Config file parser.\ndiff --git a/git-cliff/Cargo.toml b/git-cliff/Cargo.toml\nindex 41eb2e9..cc64b37 100644\n--- a/git-cliff/Cargo.toml\n+++ b/git-cliff/Cargo.toml\n@@ -20,3 +20,6 @@ log = \""0.4.14\""\n version = \""0.3\""\n default-features = false\n features = [\""suggestions\"", \""color\"", \""wrap_help\""]\n+\n+[dev-dependencies]\n+pretty_assertions = \""0.7\""\ndiff --git a/git-cliff/src/changelog.rs b/git-cliff/src/changelog.rs\nindex 3f9e994..23ea186 100644\n--- a/git-cliff/src/changelog.rs\n+++ b/git-cliff/src/changelog.rs\n@@ -115,3 +115,171 @@ impl<'a> Changelog<'a> {\n \t\tOk(())\n \t}\n }\n+\n+#[cfg(test)]\n+mod test {\n+\tuse super::*;\n+\tuse git_cliff_core::config::{\n+\t\tChangelogConfig,\n+\t\tCommitParser,\n+\t\tGitConfig,\n+\t};\n+\tuse git_cliff_core::regex::Regex;\n+\tuse pretty_assertions::assert_eq;\n+\tuse std::str;\n+\t#[test]\n+\tfn changelog_generator() -> Result<()> {\n+\t\tlet config = Config {\n+\t\t\tchangelog: ChangelogConfig {\n+\t\t\t\theader: Some(String::from(\""# Changelog\"")),\n+\t\t\t\tbody:   String::from(\n+\t\t\t\t\tr#\""{% if version %}\n+\t\t\t\t## Release [{{ version }}] - {{ timestamp | date(format=\""%Y-%m-%d\"") }}\n+\t\t\t\t({{ commit_id }}){% else %}\n+\t\t\t\t## Unreleased{% endif %}\n+\t\t\t\t{% for group, commits in commits | group_by(attribute=\""group\"") %}\n+\t\t\t\t### {{ group }}{% for group, commits in commits | group_by(attribute=\""scope\"") %}\n+\t\t\t\t#### {{ group }}{% for commit in commits %}\n+\t\t\t\t- {{ commit.message }}{% endfor %}\n+\t\t\t\t{% endfor %}{% endfor %}\""#,\n+\t\t\t\t)\n+\t\t\t\t.replace(\""\t\t\t\t\"", \""\""),\n+\t\t\t\tfooter: Some(String::from(\""------------\"")),\n+\t\t\t},\n+\t\t\tgit:       GitConfig {\n+\t\t\t\tconventional_commits: true,\n+\t\t\t\tcommit_parsers:       Some(vec![\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""feat*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""New features\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""fix*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Bug Fixes\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\"".*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Other\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t]),\n+\t\t\t\tfilter_commits:       Some(false),\n+\t\t\t\ttag_pattern:          String::new(),\n+\t\t\t\tskip_tags:            Regex::new(\""v3.*\"").ok(),\n+\t\t\t},\n+\t\t};\n+\t\tlet test_release = Release {\n+\t\t\tversion:   Some(String::from(\""v1.0.0\"")),\n+\t\t\tcommits:   vec![\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0bc123\""),\n+\t\t\t\t\tString::from(\""feat(app): add cool features\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0werty\""),\n+\t\t\t\t\tString::from(\""style(ui): make good stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0w3rty\""),\n+\t\t\t\t\tString::from(\""fix(ui): fix more stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0jkl12\""),\n+\t\t\t\t\tString::from(\""chore(app): do nothing\""),\n+\t\t\t\t),\n+\t\t\t],\n+\t\t\tcommit_id: Some(String::from(\""0bc123\"")),\n+\t\t\ttimestamp: 50000000,\n+\t\t\tprevious:  None,\n+\t\t};\n+\t\tlet releases = vec![\n+\t\t\ttest_release.clone(),\n+\t\t\tRelease {\n+\t\t\t\tversion: Some(String::from(\""v3.0.0\"")),\n+\t\t\t\tcommits: vec![Commit::new(\n+\t\t\t\t\tString::from(\""n0thin\""),\n+\t\t\t\t\tString::from(\""feat(xyz): skip commit\""),\n+\t\t\t\t)],\n+\t\t\t\t..Release::default()\n+\t\t\t},\n+\t\t\tRelease {\n+\t\t\t\tversion:   None,\n+\t\t\t\tcommits:   vec![\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc123\""),\n+\t\t\t\t\t\tString::from(\""feat(app): add xyz\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc124\""),\n+\t\t\t\t\t\tString::from(\""docs(app): document zyx\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(String::from(\""def789\""), String::from(\""merge #4\"")),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""qwerty\""),\n+\t\t\t\t\t\tString::from(\""fix(app): fix abc\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""hjkl12\""),\n+\t\t\t\t\t\tString::from(\""chore(ui): do boring stuff\""),\n+\t\t\t\t\t),\n+\t\t\t\t],\n+\t\t\t\tcommit_id: None,\n+\t\t\t\ttimestamp: 1000,\n+\t\t\t\tprevious:  Some(Box::new(test_release)),\n+\t\t\t},\n+\t\t];\n+\t\tlet changelog = Changelog::new(releases, &config)?;\n+\t\tlet mut out = Vec::new();\n+\t\tchangelog.generate(&mut out)?;\n+\t\tassert_eq!(\n+\t\t\tString::from(\n+\t\t\t\tr#\""# Changelog\n+\n+\t\t\t## Unreleased\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### app\n+\t\t\t- fix abc\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add xyz\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- document zyx\n+\n+\t\t\t#### ui\n+\t\t\t- do boring stuff\n+\n+\t\t\t## Release [v1.0.0] - 1971-08-02\n+\t\t\t(0bc123)\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### ui\n+\t\t\t- fix more stuff\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add cool features\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- do nothing\n+\n+\t\t\t#### ui\n+\t\t\t- make good stuff\n+\t\t\t------------\n+\t\t\t\""#\n+\t\t\t)\n+\t\t\t.replace(\""\t\t\t\"", \""\""),\n+\t\t\tstr::from_utf8(&out).unwrap()\n+\t\t);\n+\t\tOk(())\n+\t}\n+}\n""]",4,"[""bed78248c941d57ad4cc20a455147e186e97c7a1"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3"", ""45837af24a33308a70a3454f0f650f9fe728e272"", ""8ee0611fbf0cd89abe7ae588f22e6ecb843598ea""]","[""fix"", ""build"", ""cicd"", ""test""]"
"upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.,autostart feature fixed,do not use scripts and binaries from the libcc repo,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909","[""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n""]",4,"[""454003841aabeb74396d73541378bfa59c75b5db"", ""bed78248c941d57ad4cc20a455147e186e97c7a1"", ""45837af24a33308a70a3454f0f650f9fe728e272"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119""]","[""build"", ""fix"", ""cicd"", ""docs""]"
"only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,restructure ClusterTopology to track completed change,wrong icon reference

Signed-off-by: Pranav C <pranavxc@gmail.com>,add .nullif() example","[""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n"", ""diff --git a/packages/nc-gui/components.d.ts b/packages/nc-gui/components.d.ts\nindex b7e6585..bb86478 100644\n--- a/packages/nc-gui/components.d.ts\n+++ b/packages/nc-gui/components.d.ts\n@@ -81,7 +81,6 @@ declare module '@vue/runtime-core' {\n     ClaritySuccessLine: typeof import('~icons/clarity/success-line')['default']\n     EvaEmailOutline: typeof import('~icons/eva/email-outline')['default']\n     IcBaselineMoreVert: typeof import('~icons/ic/baseline-more-vert')['default']\n-    Icon: typeof import('~icons/ic/on')['default']\n     IcOutlineInsertDriveFile: typeof import('~icons/ic/outline-insert-drive-file')['default']\n     IcRoundEdit: typeof import('~icons/ic/round-edit')['default']\n     IcRoundKeyboardArrowDown: typeof import('~icons/ic/round-keyboard-arrow-down')['default']\n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n""]",4,"[""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2"", ""d1d55e787b7d07f763852602b9939a5394607fd9"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21""]","[""cicd"", ""refactor"", ""fix"", ""docs""]"
"initialize threejs objects in defaultRef, to fix undefined type errors,publish sdks after docs/build,Fix typo,make it mode less","[""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n"", ""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/core/src/components/slides/slides.tsx b/core/src/components/slides/slides.tsx\nindex 48fd53f..d5c2f75 100644\n--- a/core/src/components/slides/slides.tsx\n+++ b/core/src/components/slides/slides.tsx\n@@ -1,7 +1,6 @@\n import { Component, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n \n import { Mode } from '../../interface.js';\n-import { createThemedClasses } from '../../utils/theme.js';\n \n import { Swiper } from './vendor/swiper.js';\n \n@@ -15,6 +14,7 @@ import { Swiper } from './vendor/swiper.js';\n   shadow: true\n })\n export class Slides {\n+\n   private container!: HTMLElement;\n   private swiper: any;\n \n@@ -391,12 +391,6 @@ export class Slides {\n     return { ...swiperOptions, ...this.options, ...eventOptions };\n   }\n \n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'slides')\n-    };\n-  }\n-\n   render() {\n     return (\n       <div class=\""swiper-container\"" ref={el => this.container = el as HTMLElement }>\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.scss b/core/src/components/thumbnail/thumbnail.ios.scss\ndeleted file mode 100644\nindex e3add45..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.ios.vars\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-ios-width};\n-  --border-radius: #{$thumbnail-ios-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.vars.scss b/core/src/components/thumbnail/thumbnail.ios.vars.scss\ndeleted file mode 100644\nindex 85d53e5..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.ios\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-ios-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-ios-height:                  $thumbnail-ios-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-ios-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.md.scss b/core/src/components/thumbnail/thumbnail.md.scss\ndeleted file mode 100644\nindex 0fbb2ca..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.md.vars\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-md-width};\n-  --border-radius: #{$thumbnail-md-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.md.vars.scss b/core/src/components/thumbnail/thumbnail.md.vars.scss\ndeleted file mode 100644\nindex 94e48b2..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.md\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-md-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-md-height:                  $thumbnail-md-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-md-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.scss b/core/src/components/thumbnail/thumbnail.scss\nindex 8ac3a22..8af268d 100644\n--- a/core/src/components/thumbnail/thumbnail.scss\n+++ b/core/src/components/thumbnail/thumbnail.scss\n@@ -9,6 +9,8 @@\n    * @prop --border-radius: Border radius of the thumbnail\n    * @prop --size: Size of the thumbnail\n    */\n+  --size: 48px;\n+  --border-radius: 0;\n \n   @include border-radius(var(--border-radius));\n \ndiff --git a/core/src/components/thumbnail/thumbnail.tsx b/core/src/components/thumbnail/thumbnail.tsx\nindex 50ff2c2..de76593 100644\n--- a/core/src/components/thumbnail/thumbnail.tsx\n+++ b/core/src/components/thumbnail/thumbnail.tsx\n@@ -1,25 +1,11 @@\n import { Component } from '@stencil/core';\n \n-import { Mode } from '../../interface';\n-import { createThemedClasses } from '../../utils/theme';\n-\n @Component({\n   tag: 'ion-thumbnail',\n-  styleUrls: {\n-    ios: 'thumbnail.ios.scss',\n-    md: 'thumbnail.md.scss'\n-  },\n+  styleUrl: 'thumbnail.scss',\n   shadow: true\n })\n export class Thumbnail {\n-  mode!: Mode;\n-\n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'thumbnail')\n-    };\n-  }\n-\n   render() {\n     return <slot></slot>;\n   }\n""]",4,"[""2561f4ade46fc9d59f289f328cc77733a6443697"", ""6c9cb638cb4d1ecc42632fcf389c24898c5b3244"", ""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""771857b1df9470ebc15357e8879118a72c649d5b""]","[""fix"", ""cicd"", ""docs"", ""refactor""]"
"use `regexp_instr != 0` instead of `REGEXP` keyword,enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>,updated react demo parcel command,add .nullif() example","[""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n"", ""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n"", ""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n""]",4,"[""06e2be4e2019b6fa714e1fcb34485860ef1ede79"", ""fd8e563cc19ca4684885d4692acee6bebcca4ada"", ""32b92cfa0b74a6c25990e32ac6aab12b8496794c"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21""]","[""fix"", ""feat"", ""build"", ""docs""]"
"spring version, core version,do not use scripts and binaries from the libcc repo,ensure checksum persist flushes to disk,add getter for protocol id","[""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n"", ""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n""]",4,"[""c55591ba157298a9c5816693c102a89dfd058830"", ""45837af24a33308a70a3454f0f650f9fe728e272"", ""b7ce2894fd1794064bd6db4ed730bb6cb7728739"", ""dc5238b2bda98a7c4f2fe9584fc3b0191a408109""]","[""build"", ""cicd"", ""test"", ""feat""]"
"add riscv64gc-unknown-linux-gnu,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>,setup jest and add m.ts tests","[""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n""]",4,"[""173553c0372e66e03bdab19e0e6c2dd44daa14a0"", ""e12d9e77a6fd531a22325337838a841b1c67f00d"", ""f823cf28652987d43c8324b4f5b203240032383a"", ""229b53a632ea97d47c4be11f096bdd828fb415d8""]","[""cicd"", ""docs"", ""feat"", ""test""]"
"cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.,added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,setup jest and add m.ts tests","[""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n"", ""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n""]",4,"[""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7"", ""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""229b53a632ea97d47c4be11f096bdd828fb415d8""]","[""refactor"", ""docs"", ""cicd"", ""test""]"
"update `cargo-make` for `v0.35.3`,convert `run_tag_values_test_case` to a function,setup jest and add m.ts tests,fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.","[""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n"", ""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n"", ""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n""]",4,"[""0cfc5633d37ea06f645649138323f1820e18bdee"", ""1db13ec43727aca872a0f3836e4023ed85db665e"", ""229b53a632ea97d47c4be11f096bdd828fb415d8"", ""9be725fa3906323d4bc9788f54eccf74109d632b""]","[""docs"", ""refactor"", ""test"", ""fix""]"
"add a branch name to Slack notifications (#14793),Fix typo,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.,xfail on to_parquet and to_csv that use pyarrow write options","[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n"", ""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n"", ""diff --git a/ibis/backends/tests/test_export.py b/ibis/backends/tests/test_export.py\nindex 4d536d7..5bb9775 100644\n--- a/ibis/backends/tests/test_export.py\n+++ b/ibis/backends/tests/test_export.py\n@@ -222,18 +222,23 @@ def test_table_to_parquet(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\""), [({\""version\"": \""1.0\""}), ({\""version\"": \""2.6\""})])\n-def test_table_to_parquet_writer_kwargs(kwargs, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.NotSupportedError,\n+)\n+@pytest.mark.parametrize(\""version\"", [\""1.0\"", \""2.6\""])\n+def test_table_to_parquet_writer_kwargs(version, tmp_path, backend, awards_players):\n     outparquet = tmp_path / \""out.parquet\""\n-    awards_players.to_parquet(outparquet, **kwargs)\n+    awards_players.to_parquet(outparquet, version=version)\n \n     df = pd.read_parquet(outparquet)\n \n     backend.assert_frame_equal(awards_players.to_pandas(), df)\n \n-    file = pa.parquet.ParquetFile(outparquet)\n+    md = pa.parquet.read_metadata(outparquet)\n \n-    assert file.metadata.format_version == kwargs[\""version\""]\n+    assert md.format_version == version\n \n \n @pytest.mark.notimpl(\n@@ -316,14 +321,20 @@ def test_table_to_csv(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\"", \""delimiter\""), [({\""write_options\"": pcsv.WriteOptions(delimiter=\"";\"")}, \"";\""), ({\""write_options\"": pcsv.WriteOptions(delimiter=\""\\t\"")}, \""\\t\"")])\n-def test_table_to_csv_writer_kwargs(kwargs, delimiter, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.ProgrammingError,\n+)\n+@pytest.mark.parametrize(\""delimiter\"", [\"";\"", \""\\t\""], ids=[\""semicolon\"", \""tab\""])\n+def test_table_to_csv_writer_kwargs(delimiter, tmp_path, awards_players):\n     outcsv = tmp_path / \""out.csv\""\n     # avoid pandas NaNonense\n     awards_players = awards_players.select(\""playerID\"", \""awardID\"", \""yearID\"", \""lgID\"")\n \n-    awards_players.to_csv(outcsv, **kwargs)\n-    pd.read_csv(outcsv, delimiter=delimiter)\n+    awards_players.to_csv(outcsv, write_options=pcsv.WriteOptions(delimiter=delimiter))\n+    df = pd.read_csv(outcsv, delimiter=delimiter, nrows=1)\n+    assert len(df) == 1\n \n \n @pytest.mark.parametrize(\n""]",4,"[""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da"", ""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c"", ""bedc7950b24c37809e36a585b7985d5aa5e3e458""]","[""cicd"", ""docs"", ""refactor"", ""test""]"
"fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.,add comments for the Handler,do not use scripts and binaries from the libcc repo,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>","[""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n"", ""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n""]",4,"[""9be725fa3906323d4bc9788f54eccf74109d632b"", ""036a0ff49a7dade0e04c9c07071a1ff49133ee24"", ""45837af24a33308a70a3454f0f650f9fe728e272"", ""f823cf28652987d43c8324b4f5b203240032383a""]","[""fix"", ""docs"", ""cicd"", ""feat""]"
"Fix typo,verify checkpoint listeners are notified,fix netty dependency

netty-bom 4.1.70 contains the changes from pull request
https://github.com/netty/netty/pull/11798, which moved the classes out
of the native modules to make sure the same classes don't end up on the
classpath multiple times. For us it means that we need to depend on both
the native and classes modules. However, since we don't use the native
module directly (only classes that were moved to this classes module),
we need to force the dependency plugin to consider the native module as
used.,add props to get color and label from a route","[""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n"", ""diff --git a/atomix/cluster/pom.xml b/atomix/cluster/pom.xml\nindex a477873..b6db695 100644\n--- a/atomix/cluster/pom.xml\n+++ b/atomix/cluster/pom.xml\n@@ -69,6 +69,10 @@\n     </dependency>\n     <dependency>\n       <groupId>io.netty</groupId>\n+      <artifactId>netty-transport-classes-epoll</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.netty</groupId>\n       <artifactId>netty-transport-native-epoll</artifactId>\n       <classifier>linux-x86_64</classifier>\n     </dependency>\n@@ -278,6 +282,7 @@\n             <dependency>uk.co.real-logic:sbe-tool</dependency>\n             <dependency>net.jqwik:jqwik</dependency>\n             <dependency>io.netty:netty-tcnative-boringssl-static</dependency>\n+            <dependency>io.netty:netty-transport-native-epoll</dependency>\n           </usedDependencies>\n         </configuration>\n       </plugin>\n"", ""diff --git a/src/components/BottomNavigation.js b/src/components/BottomNavigation.js\nindex 1b72302..7d8ea75 100644\n--- a/src/components/BottomNavigation.js\n+++ b/src/components/BottomNavigation.js\n@@ -24,8 +24,8 @@ const AnimatedPaper = Animated.createAnimatedComponent(Paper);\n \n type Route = {\n   key: string,\n-  title: string,\n-  icon: IconSource,\n+  title?: string,\n+  icon?: IconSource,\n   color?: string,\n };\n \n@@ -51,7 +51,7 @@ type Props<T> = {\n    * - `key`: a unique key to identify the route\n    * - `title`: title of the route to use as the tab label\n    * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n-   * - `color`: color to use as background color for shifting bottom navigation (optional)\n+   * - `color`: color to use as background color for shifting bottom navigation\n    *\n    * Example:\n    *\n@@ -115,11 +115,27 @@ type Props<T> = {\n   /**\n    * Callback which returns a React Element to be used as tab icon.\n    */\n-  renderIcon?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderIcon?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n   /**\n    * Callback which React Element to be used as tab label.\n    */\n-  renderLabel?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderLabel?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n+  /**\n+   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n+   */\n+  getLabelText?: (props: { route: T }) => string,\n+  /**\n+   * Get color for the tab, uses `route.color` by default.\n+   */\n+  getColor?: (props: { route: T }) => string,\n   /**\n    * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n    */\n@@ -159,6 +175,10 @@ type State = {\n    */\n   ripple: Animated.Value,\n   /**\n+   * Animation for the touch feedback, used to determine it's scale and opacity.\n+   */\n+  touch: Animated.Value,\n+  /**\n    * Layout of the tab bar. The width is used to determine the size and position of the ripple.\n    */\n   layout: { height: number, width: number, measured: boolean },\n@@ -173,7 +193,7 @@ const MIN_SHIFT_AMOUNT = 10;\n const MIN_TAB_WIDTH = 96;\n const MAX_TAB_WIDTH = 168;\n const BAR_HEIGHT = 56;\n-const SMALL_RIPPLE_SIZE = 72;\n+const SMALL_RIPPLE_SIZE = 96;\n const ACTIVE_LABEL_SIZE = 14;\n const INACTIVE_LABEL_SIZE = 12;\n \n@@ -251,6 +271,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ),\n       index: new Animated.Value(index),\n       ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n+      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n       layout: { height: 0, width: 0, measured: false },\n       previous: 0,\n     };\n@@ -349,6 +370,15 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n   _handleTabPress = (index: number) => {\n     const { navigationState } = this.props;\n \n+    this.state.touch.setValue(MIN_RIPPLE_SCALE);\n+\n+    Animated.timing(this.state.touch, {\n+      toValue: 1,\n+      duration: 300,\n+      easing: Easing.in(Easing.sin),\n+      useNativeDriver: true,\n+    }).start();\n+\n     if (index !== navigationState.index) {\n       this.props.onIndexChange(index);\n     }\n@@ -376,6 +406,8 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       renderScene,\n       renderIcon,\n       renderLabel,\n+      getLabelText = ({ route }) => route.title,\n+      getColor = ({ route }) => route.color,\n       barStyle,\n       style,\n       theme,\n@@ -400,7 +432,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ? this.state.index.interpolate({\n           inputRange: routes.map((_, i) => i),\n           outputRange: routes.map(\n-            route => route.color || approxBackgroundColor\n+            route => getColor({ route }) || approxBackgroundColor\n           ),\n         })\n       : approxBackgroundColor;\n@@ -416,7 +448,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n           .rgb()\n           .string();\n \n-    const rippleColor = color(textColor)\n+    const touchColor = color(textColor)\n       .alpha(0.12)\n       .rgb()\n       .string();\n@@ -430,22 +462,10 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n \n     // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n     // We need to move it from the left to the active tab and also account for how much that tab has shifted.\n-    const rippleShift =\n-      navigationState.index * tabWidth +\n-      tabWidth / 2 +\n-      this._calculateShift(\n-        this.state.previous,\n-        navigationState.index,\n-        routes.length\n-      );\n \n     return (\n       <View\n-        style={[\n-          styles.container,\n-          { backgroundColor: theme.dark ? white : black },\n-          style,\n-        ]}\n+        style={[styles.container, style]}\n         onLayout={this._handleLayout}\n         pointerEvents={layout.measured ? 'auto' : 'none'}\n       >\n@@ -485,25 +505,30 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n             style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n           >\n             {shifting ? (\n-              // Large ripple with the backround color\n               <Animated.View\n                 pointerEvents=\""none\""\n                 style={[\n                   styles.ripple,\n                   {\n                     // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - layout.width / 2,\n-                    left: rippleShift - layout.width / 2,\n-                    height: layout.width,\n-                    width: layout.width,\n+                    top: BAR_HEIGHT / 2 - layout.width / 8,\n+                    left:\n+                      navigationState.index * tabWidth +\n+                      tabWidth / 2 -\n+                      layout.width / 8,\n+                    height: layout.width / 4,\n+                    width: layout.width / 4,\n                     borderRadius: layout.width / 2,\n-                    backgroundColor: routes[navigationState.index].color,\n+                    backgroundColor: getColor({\n+                      route: routes[navigationState.index],\n+                    }),\n                     transform: [\n+                      { translateX: this.state.shifts[navigationState.index] },\n                       {\n                         // Scale to twice the size  to ensure it covers the whole tab bar\n                         scale: this.state.ripple.interpolate({\n                           inputRange: [0, 1],\n-                          outputRange: [0, 2],\n+                          outputRange: [0, 8],\n                         }),\n                       },\n                     ],\n@@ -515,36 +540,36 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                 ]}\n               />\n             ) : null}\n-            {shifting ? (\n-              // Small subtle ripple on touch\n-              <Animated.View\n-                pointerEvents=\""none\""\n-                style={[\n-                  styles.ripple,\n-                  {\n-                    // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n-                    left: rippleShift - SMALL_RIPPLE_SIZE / 2,\n-                    height: SMALL_RIPPLE_SIZE,\n-                    width: SMALL_RIPPLE_SIZE,\n-                    borderRadius: SMALL_RIPPLE_SIZE / 2,\n-                    backgroundColor: rippleColor,\n-                    transform: [\n-                      {\n-                        scale: this.state.ripple.interpolate({\n-                          inputRange: [0, 0.5, 1],\n-                          outputRange: [0, 1, 1],\n-                        }),\n-                      },\n-                    ],\n-                    opacity: this.state.ripple.interpolate({\n-                      inputRange: [0, MIN_RIPPLE_SCALE, 0.25, 0.5],\n-                      outputRange: [0, 0, 1, 0],\n-                    }),\n-                  },\n-                ]}\n-              />\n-            ) : null}\n+            <Animated.View\n+              pointerEvents=\""none\""\n+              style={[\n+                styles.ripple,\n+                {\n+                  // Set top and left values so that the ripple's center is same as the tab's center\n+                  top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n+                  left:\n+                    navigationState.index * tabWidth +\n+                    tabWidth / 2 -\n+                    SMALL_RIPPLE_SIZE / 2,\n+                  height: SMALL_RIPPLE_SIZE,\n+                  width: SMALL_RIPPLE_SIZE,\n+                  borderRadius: SMALL_RIPPLE_SIZE / 2,\n+                  backgroundColor: touchColor,\n+                  transform: [\n+                    {\n+                      translateX: shifting\n+                        ? this.state.shifts[navigationState.index]\n+                        : 0,\n+                    },\n+                    { scale: this.state.touch },\n+                  ],\n+                  opacity: this.state.touch.interpolate({\n+                    inputRange: [0, 0.5, 1],\n+                    outputRange: [0, 1, 0],\n+                  }),\n+                },\n+              ]}\n+            />\n             {routes.map((route, index) => {\n               const shift = this.state.shifts[index];\n               const focused = this.state.tabs[index];\n@@ -607,7 +632,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderIcon ? (\n-                          renderIcon({ route, focused: true })\n+                          renderIcon({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <Icon\n                             style={styles.icon}\n@@ -625,7 +654,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderIcon ? (\n-                            renderIcon({ route, focused: false })\n+                            renderIcon({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <Icon\n                               style={styles.icon}\n@@ -652,7 +685,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderLabel ? (\n-                          renderLabel({ route, focused: true })\n+                          renderLabel({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <AnimatedText\n                             style={[\n@@ -662,7 +699,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                               },\n                             ]}\n                           >\n-                            {route.title}\n+                            {getLabelText({ route })}\n                           </AnimatedText>\n                         )}\n                       </Animated.View>\n@@ -674,7 +711,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderLabel ? (\n-                            renderLabel({ route, focused: false })\n+                            renderLabel({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <AnimatedText\n                               style={[\n@@ -684,7 +725,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                                 },\n                               ]}\n                             >\n-                              {route.title}\n+                              {getLabelText({ route })}\n                             </AnimatedText>\n                           )}\n                         </Animated.View>\n""]",4,"[""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""e0198f74b81da3663144cfe1d971939319f82a0f"", ""f00a4d3e307b89842250358ee432e6800bb24362"", ""ded26d768ff432ad3bde3c0aa1e95ce50726100a""]","[""docs"", ""test"", ""build"", ""feat""]"
"added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,convert `run_tag_values_test_case` to a function,Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.,initialize threejs objects in defaultRef, to fix undefined type errors","[""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n"", ""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n"", ""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n""]",4,"[""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""1db13ec43727aca872a0f3836e4023ed85db665e"", ""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3"", ""2561f4ade46fc9d59f289f328cc77733a6443697""]","[""docs"", ""refactor"", ""test"", ""fix""]"
"verify checkpoint listeners are notified,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>,added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,add remote [skip ci]","[""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n"", ""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/.github/workflows/ibis-rebase-nightly.yml b/.github/workflows/ibis-rebase-nightly.yml\nindex 06c9003..e19c703 100644\n--- a/.github/workflows/ibis-rebase-nightly.yml\n+++ b/.github/workflows/ibis-rebase-nightly.yml\n@@ -47,7 +47,10 @@ jobs:\n           git config --global user.email 'ibis-squawk-bot[bot]@users.noreply.github.com'\n \n       - name: fetch and rebase on top of upstream\n-        run: git pull --rebase -X ours https://github.com/ibis-project/ibis master\n+        run: |\n+          git remote add upstream https://github.com/ibis-project/ibis\n+          git fetch upstream\n+          git rebase -X ours upstream/master\n \n       - uses: tibdex/github-app-token@v1\n         id: generate_pr_token\n""]",4,"[""e0198f74b81da3663144cfe1d971939319f82a0f"", ""f823cf28652987d43c8324b4f5b203240032383a"", ""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""e96487ad7ce90b141219d9032fa2bed68d5dae6a""]","[""test"", ""feat"", ""docs"", ""cicd""]"
"add fallible peek_last_token(),updated react demo parcel command,enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>,licensing","[""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n"", ""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n"", ""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n""]",4,"[""63eab619e6166eb6cab948028a7b89bf059dd878"", ""32b92cfa0b74a6c25990e32ac6aab12b8496794c"", ""fd8e563cc19ca4684885d4692acee6bebcca4ada"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0""]","[""refactor"", ""build"", ""feat"", ""docs""]"
"docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>,never call ""onStart"" prop when idle,fixed docker link tests,terminated tasks linger for a bit

Signed-off-by: Eliza Weisman <eliza@buoyant.io>","[""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n"", ""diff --git a/packages/core/src/SpringValue.ts b/packages/core/src/SpringValue.ts\nindex 18494a8..cbc4f27 100644\n--- a/packages/core/src/SpringValue.ts\n+++ b/packages/core/src/SpringValue.ts\n@@ -596,11 +596,11 @@ export class SpringValue<T = any> extends AnimationValue<T> {\n   /** Notify change observers */\n   protected _onChange(value: T, idle = false) {\n     const anim = this.animation\n-    if (!anim.changed) {\n+    if (!anim.changed && !idle) {\n       anim.changed = true\n       // The \""onStart\"" prop is called on the first change after entering the\n       // frameloop, but never for immediate animations.\n-      if (anim.onStart && !anim.immediate) {\n+      if (anim.onStart) {\n         anim.onStart(this)\n       }\n     }\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n"", ""diff --git a/console/src/main.rs b/console/src/main.rs\nindex ebfa315..5328d96 100644\n--- a/console/src/main.rs\n+++ b/console/src/main.rs\n@@ -69,6 +69,7 @@ async fn main() -> Result<(), Box<dyn std::error::Error>> {\n                 .wrap(Wrap { trim: true });\n             f.render_widget(header, chunks[0]);\n             tasks.render(f, chunks[1]);\n+            tasks.retain_active();\n         })?;\n     }\n \ndiff --git a/console/src/tasks.rs b/console/src/tasks.rs\nindex 7be39a4..eb41495 100644\n--- a/console/src/tasks.rs\n+++ b/console/src/tasks.rs\n@@ -19,6 +19,7 @@ struct Task {\n     fields: String,\n     kind: &'static str,\n     stats: Stats,\n+    completed_for: usize,\n }\n \n #[derive(Default, Debug)]\n@@ -28,10 +29,15 @@ struct Stats {\n     idle: Duration,\n     total: Duration,\n }\n+\n impl State {\n+    // How many updates to retain completed tasks for\n+    const RETAIN_COMPLETED_FOR: usize = 6;\n+\n     pub(crate) fn len(&self) -> usize {\n         self.tasks.len()\n     }\n+\n     pub(crate) fn update(&mut self, update: proto::tasks::TaskUpdate) {\n         let new_tasks = update.new_tasks.into_iter().filter_map(|task| {\n             if task.id.is_none() {\n@@ -48,6 +54,7 @@ impl State {\n                 fields: task.string_fields,\n                 kind,\n                 stats: Default::default(),\n+                completed_for: 0,\n             };\n             Some((id, task))\n         });\n@@ -60,7 +67,10 @@ impl State {\n         }\n \n         for proto::SpanId { id } in update.completed {\n-            if self.tasks.remove(&id).is_none() {\n+            if let Some(task) = self.tasks.get_mut(&id) {\n+                task.kind = \""!\"";\n+                task.completed_for = 1;\n+            } else {\n                 tracing::warn!(?id, \""tried to complete a task that didn't exist\"");\n             }\n         }\n@@ -79,7 +89,7 @@ impl State {\n         const DUR_PRECISION: usize = 4;\n         const POLLS_LEN: usize = 5;\n         let rows = self.tasks.values().map(|task| {\n-            let row = Row::new(vec![\n+            let mut row = Row::new(vec![\n                 Cell::from(task.id_hex.as_str()),\n                 // TODO(eliza): is there a way to write a `fmt::Debug` impl\n                 // directly to tui without doing an allocation?\n@@ -105,6 +115,9 @@ impl State {\n                 Cell::from(format!(\""{:>width$}\"", task.stats.polls, width = POLLS_LEN)),\n                 Cell::from(task.fields.as_str()),\n             ]);\n+            if task.completed_for > 0 {\n+                row = row.style(Style::default().add_modifier(style::Modifier::DIM));\n+            }\n             row\n         });\n         let t = Table::new(rows)\n@@ -126,6 +139,16 @@ impl State {\n \n         frame.render_widget(t, area)\n     }\n+\n+    pub(crate) fn retain_active(&mut self) {\n+        self.tasks.retain(|_, task| {\n+            if task.completed_for == 0 {\n+                return true;\n+            }\n+            task.completed_for += 1;\n+            task.completed_for <= Self::RETAIN_COMPLETED_FOR\n+        })\n+    }\n }\n \n impl From<proto::tasks::Stats> for Stats {\n""]",4,"[""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf"", ""c8e0ae8612df3d6f2831acc004aaac332f6105e4"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f"", ""1bcf88670b50155b50071e707f98f30cea0b7a24""]","[""build"", ""fix"", ""test"", ""feat""]"
"make it mode less,publish sdks after docs/build,add .nullif() example,upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.","[""diff --git a/core/src/components/slides/slides.tsx b/core/src/components/slides/slides.tsx\nindex 48fd53f..d5c2f75 100644\n--- a/core/src/components/slides/slides.tsx\n+++ b/core/src/components/slides/slides.tsx\n@@ -1,7 +1,6 @@\n import { Component, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n \n import { Mode } from '../../interface.js';\n-import { createThemedClasses } from '../../utils/theme.js';\n \n import { Swiper } from './vendor/swiper.js';\n \n@@ -15,6 +14,7 @@ import { Swiper } from './vendor/swiper.js';\n   shadow: true\n })\n export class Slides {\n+\n   private container!: HTMLElement;\n   private swiper: any;\n \n@@ -391,12 +391,6 @@ export class Slides {\n     return { ...swiperOptions, ...this.options, ...eventOptions };\n   }\n \n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'slides')\n-    };\n-  }\n-\n   render() {\n     return (\n       <div class=\""swiper-container\"" ref={el => this.container = el as HTMLElement }>\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.scss b/core/src/components/thumbnail/thumbnail.ios.scss\ndeleted file mode 100644\nindex e3add45..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.ios.vars\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-ios-width};\n-  --border-radius: #{$thumbnail-ios-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.vars.scss b/core/src/components/thumbnail/thumbnail.ios.vars.scss\ndeleted file mode 100644\nindex 85d53e5..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.ios\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-ios-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-ios-height:                  $thumbnail-ios-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-ios-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.md.scss b/core/src/components/thumbnail/thumbnail.md.scss\ndeleted file mode 100644\nindex 0fbb2ca..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.md.vars\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-md-width};\n-  --border-radius: #{$thumbnail-md-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.md.vars.scss b/core/src/components/thumbnail/thumbnail.md.vars.scss\ndeleted file mode 100644\nindex 94e48b2..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.md\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-md-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-md-height:                  $thumbnail-md-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-md-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.scss b/core/src/components/thumbnail/thumbnail.scss\nindex 8ac3a22..8af268d 100644\n--- a/core/src/components/thumbnail/thumbnail.scss\n+++ b/core/src/components/thumbnail/thumbnail.scss\n@@ -9,6 +9,8 @@\n    * @prop --border-radius: Border radius of the thumbnail\n    * @prop --size: Size of the thumbnail\n    */\n+  --size: 48px;\n+  --border-radius: 0;\n \n   @include border-radius(var(--border-radius));\n \ndiff --git a/core/src/components/thumbnail/thumbnail.tsx b/core/src/components/thumbnail/thumbnail.tsx\nindex 50ff2c2..de76593 100644\n--- a/core/src/components/thumbnail/thumbnail.tsx\n+++ b/core/src/components/thumbnail/thumbnail.tsx\n@@ -1,25 +1,11 @@\n import { Component } from '@stencil/core';\n \n-import { Mode } from '../../interface';\n-import { createThemedClasses } from '../../utils/theme';\n-\n @Component({\n   tag: 'ion-thumbnail',\n-  styleUrls: {\n-    ios: 'thumbnail.ios.scss',\n-    md: 'thumbnail.md.scss'\n-  },\n+  styleUrl: 'thumbnail.scss',\n   shadow: true\n })\n export class Thumbnail {\n-  mode!: Mode;\n-\n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'thumbnail')\n-    };\n-  }\n-\n   render() {\n     return <slot></slot>;\n   }\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n"", ""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n""]",4,"[""771857b1df9470ebc15357e8879118a72c649d5b"", ""6c9cb638cb4d1ecc42632fcf389c24898c5b3244"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21"", ""454003841aabeb74396d73541378bfa59c75b5db""]","[""refactor"", ""cicd"", ""docs"", ""build""]"
"fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.,Fix typo,export a modal transition preset,run pyspark tests in parallel,xfail on to_parquet and to_csv that use pyarrow write options","[""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n"", ""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex e23088e..9708157 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -202,11 +202,11 @@ jobs:\n         run: poetry install --without dev --without docs --extras ${{ matrix.backend.name }} --extras geospatial\n \n       - name: \""run parallel tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name != 'pyspark' && matrix.backend.name != 'impala'\n+        if: matrix.backend.name != 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }} --numprocesses auto --dist=loadgroup\n \n       - name: \""run serial tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name == 'pyspark' || matrix.backend.name == 'impala'\n+        if: matrix.backend.name == 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }}\n         env:\n           IBIS_TEST_NN_HOST: localhost\n"", ""diff --git a/ibis/backends/tests/test_export.py b/ibis/backends/tests/test_export.py\nindex 4d536d7..5bb9775 100644\n--- a/ibis/backends/tests/test_export.py\n+++ b/ibis/backends/tests/test_export.py\n@@ -222,18 +222,23 @@ def test_table_to_parquet(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\""), [({\""version\"": \""1.0\""}), ({\""version\"": \""2.6\""})])\n-def test_table_to_parquet_writer_kwargs(kwargs, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.NotSupportedError,\n+)\n+@pytest.mark.parametrize(\""version\"", [\""1.0\"", \""2.6\""])\n+def test_table_to_parquet_writer_kwargs(version, tmp_path, backend, awards_players):\n     outparquet = tmp_path / \""out.parquet\""\n-    awards_players.to_parquet(outparquet, **kwargs)\n+    awards_players.to_parquet(outparquet, version=version)\n \n     df = pd.read_parquet(outparquet)\n \n     backend.assert_frame_equal(awards_players.to_pandas(), df)\n \n-    file = pa.parquet.ParquetFile(outparquet)\n+    md = pa.parquet.read_metadata(outparquet)\n \n-    assert file.metadata.format_version == kwargs[\""version\""]\n+    assert md.format_version == version\n \n \n @pytest.mark.notimpl(\n@@ -316,14 +321,20 @@ def test_table_to_csv(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\"", \""delimiter\""), [({\""write_options\"": pcsv.WriteOptions(delimiter=\"";\"")}, \"";\""), ({\""write_options\"": pcsv.WriteOptions(delimiter=\""\\t\"")}, \""\\t\"")])\n-def test_table_to_csv_writer_kwargs(kwargs, delimiter, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.ProgrammingError,\n+)\n+@pytest.mark.parametrize(\""delimiter\"", [\"";\"", \""\\t\""], ids=[\""semicolon\"", \""tab\""])\n+def test_table_to_csv_writer_kwargs(delimiter, tmp_path, awards_players):\n     outcsv = tmp_path / \""out.csv\""\n     # avoid pandas NaNonense\n     awards_players = awards_players.select(\""playerID\"", \""awardID\"", \""yearID\"", \""lgID\"")\n \n-    awards_players.to_csv(outcsv, **kwargs)\n-    pd.read_csv(outcsv, delimiter=delimiter)\n+    awards_players.to_csv(outcsv, write_options=pcsv.WriteOptions(delimiter=delimiter))\n+    df = pd.read_csv(outcsv, delimiter=delimiter, nrows=1)\n+    assert len(df) == 1\n \n \n @pytest.mark.parametrize(\n""]",5,"[""9be725fa3906323d4bc9788f54eccf74109d632b"", ""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""535708ae50aecb452560a23356fd396f99ef13a2"", ""4cbbd2552ba0de273e1dfe7d453c5b3efed751a3"", ""bedc7950b24c37809e36a585b7985d5aa5e3e458""]","[""fix"", ""docs"", ""refactor"", ""cicd"", ""test""]"
"setup jest and add m.ts tests,Fix typo,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.,remove deprecated settings

Removes deprecated ZEEBE_HOST environment variable, and removes
unnecessary log level environment variable, since it's already the
default in the log file,enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>","[""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n"", ""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n"", ""diff --git a/Dockerfile b/Dockerfile\nindex 6762a39..7f380cd 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -34,7 +34,6 @@ RUN wget -O - https://github.com/jvm-profiling-tools/async-profiler/releases/dow\n FROM ${APP_ENV} as app\n \n ENV ZB_HOME=/usr/local/zeebe \\\n-    ZEEBE_LOG_LEVEL=info \\\n     ZEEBE_BROKER_GATEWAY_NETWORK_HOST=0.0.0.0 \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \""${ZB_HOME}/bin:${PATH}\""\ndiff --git a/docker/utils/startup.sh b/docker/utils/startup.sh\nindex bc8d2fc..0fcde2b 100755\n--- a/docker/utils/startup.sh\n+++ b/docker/utils/startup.sh\n@@ -1,17 +1,14 @@\n #!/bin/bash -xeu\n \n-# legacy support\n-# This environment variable was used to set the gatewway cluster host in standalone and embedded mode.\n-# Now, there are two dedicated environment variables for the two different deployment scenarios.\n-export ZEEBE_HOST=${ZEEBE_HOST:-$(hostname -i)}\n-# Legacy support\n+HOST=$(hostname -i)\n \n if [ \""$ZEEBE_STANDALONE_GATEWAY\"" = \""true\"" ]; then\n-    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_GATEWAY_NETWORK_HOST=${ZEEBE_GATEWAY_NETWORK_HOST:-${HOST}}\n+    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${HOST}}\n \n     exec /usr/local/zeebe/bin/gateway\n else\n-    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${HOST}}\n     export ZEEBE_BROKER_GATEWAY_CLUSTER_HOST=${ZEEBE_BROKER_GATEWAY_CLUSTER_HOST:-${ZEEBE_BROKER_NETWORK_HOST}}\n \n     exec /usr/local/zeebe/bin/broker\n"", ""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n""]",5,"[""229b53a632ea97d47c4be11f096bdd828fb415d8"", ""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c"", ""e4a11fd5c34942ba12737f1c8c084489428ee274"", ""fd8e563cc19ca4684885d4692acee6bebcca4ada""]","[""test"", ""docs"", ""refactor"", ""build"", ""feat""]"
"update wrapping tests for v7,increment failing test retries,wrong icon reference

Signed-off-by: Pranav C <pranavxc@gmail.com>,fix netty dependency

netty-bom 4.1.70 contains the changes from pull request
https://github.com/netty/netty/pull/11798, which moved the classes out
of the native modules to make sure the same classes don't end up on the
classpath multiple times. For us it means that we need to depend on both
the native and classes modules. However, since we don't use the native
module directly (only classes that were moved to this classes module),
we need to force the dependency plugin to consider the native module as
used.,make it mode less","[""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n"", ""diff --git a/packages/nc-gui/components.d.ts b/packages/nc-gui/components.d.ts\nindex b7e6585..bb86478 100644\n--- a/packages/nc-gui/components.d.ts\n+++ b/packages/nc-gui/components.d.ts\n@@ -81,7 +81,6 @@ declare module '@vue/runtime-core' {\n     ClaritySuccessLine: typeof import('~icons/clarity/success-line')['default']\n     EvaEmailOutline: typeof import('~icons/eva/email-outline')['default']\n     IcBaselineMoreVert: typeof import('~icons/ic/baseline-more-vert')['default']\n-    Icon: typeof import('~icons/ic/on')['default']\n     IcOutlineInsertDriveFile: typeof import('~icons/ic/outline-insert-drive-file')['default']\n     IcRoundEdit: typeof import('~icons/ic/round-edit')['default']\n     IcRoundKeyboardArrowDown: typeof import('~icons/ic/round-keyboard-arrow-down')['default']\n"", ""diff --git a/atomix/cluster/pom.xml b/atomix/cluster/pom.xml\nindex a477873..b6db695 100644\n--- a/atomix/cluster/pom.xml\n+++ b/atomix/cluster/pom.xml\n@@ -69,6 +69,10 @@\n     </dependency>\n     <dependency>\n       <groupId>io.netty</groupId>\n+      <artifactId>netty-transport-classes-epoll</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.netty</groupId>\n       <artifactId>netty-transport-native-epoll</artifactId>\n       <classifier>linux-x86_64</classifier>\n     </dependency>\n@@ -278,6 +282,7 @@\n             <dependency>uk.co.real-logic:sbe-tool</dependency>\n             <dependency>net.jqwik:jqwik</dependency>\n             <dependency>io.netty:netty-tcnative-boringssl-static</dependency>\n+            <dependency>io.netty:netty-transport-native-epoll</dependency>\n           </usedDependencies>\n         </configuration>\n       </plugin>\n"", ""diff --git a/core/src/components/slides/slides.tsx b/core/src/components/slides/slides.tsx\nindex 48fd53f..d5c2f75 100644\n--- a/core/src/components/slides/slides.tsx\n+++ b/core/src/components/slides/slides.tsx\n@@ -1,7 +1,6 @@\n import { Component, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n \n import { Mode } from '../../interface.js';\n-import { createThemedClasses } from '../../utils/theme.js';\n \n import { Swiper } from './vendor/swiper.js';\n \n@@ -15,6 +14,7 @@ import { Swiper } from './vendor/swiper.js';\n   shadow: true\n })\n export class Slides {\n+\n   private container!: HTMLElement;\n   private swiper: any;\n \n@@ -391,12 +391,6 @@ export class Slides {\n     return { ...swiperOptions, ...this.options, ...eventOptions };\n   }\n \n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'slides')\n-    };\n-  }\n-\n   render() {\n     return (\n       <div class=\""swiper-container\"" ref={el => this.container = el as HTMLElement }>\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.scss b/core/src/components/thumbnail/thumbnail.ios.scss\ndeleted file mode 100644\nindex e3add45..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.ios.vars\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-ios-width};\n-  --border-radius: #{$thumbnail-ios-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.vars.scss b/core/src/components/thumbnail/thumbnail.ios.vars.scss\ndeleted file mode 100644\nindex 85d53e5..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.ios\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-ios-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-ios-height:                  $thumbnail-ios-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-ios-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.md.scss b/core/src/components/thumbnail/thumbnail.md.scss\ndeleted file mode 100644\nindex 0fbb2ca..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.md.vars\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-md-width};\n-  --border-radius: #{$thumbnail-md-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.md.vars.scss b/core/src/components/thumbnail/thumbnail.md.vars.scss\ndeleted file mode 100644\nindex 94e48b2..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.md\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-md-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-md-height:                  $thumbnail-md-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-md-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.scss b/core/src/components/thumbnail/thumbnail.scss\nindex 8ac3a22..8af268d 100644\n--- a/core/src/components/thumbnail/thumbnail.scss\n+++ b/core/src/components/thumbnail/thumbnail.scss\n@@ -9,6 +9,8 @@\n    * @prop --border-radius: Border radius of the thumbnail\n    * @prop --size: Size of the thumbnail\n    */\n+  --size: 48px;\n+  --border-radius: 0;\n \n   @include border-radius(var(--border-radius));\n \ndiff --git a/core/src/components/thumbnail/thumbnail.tsx b/core/src/components/thumbnail/thumbnail.tsx\nindex 50ff2c2..de76593 100644\n--- a/core/src/components/thumbnail/thumbnail.tsx\n+++ b/core/src/components/thumbnail/thumbnail.tsx\n@@ -1,25 +1,11 @@\n import { Component } from '@stencil/core';\n \n-import { Mode } from '../../interface';\n-import { createThemedClasses } from '../../utils/theme';\n-\n @Component({\n   tag: 'ion-thumbnail',\n-  styleUrls: {\n-    ios: 'thumbnail.ios.scss',\n-    md: 'thumbnail.md.scss'\n-  },\n+  styleUrl: 'thumbnail.scss',\n   shadow: true\n })\n export class Thumbnail {\n-  mode!: Mode;\n-\n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'thumbnail')\n-    };\n-  }\n-\n   render() {\n     return <slot></slot>;\n   }\n""]",5,"[""317f4eefecddfb1392ca71d551840f446feee302"", ""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57"", ""d1d55e787b7d07f763852602b9939a5394607fd9"", ""f00a4d3e307b89842250358ee432e6800bb24362"", ""771857b1df9470ebc15357e8879118a72c649d5b""]","[""test"", ""cicd"", ""fix"", ""build"", ""refactor""]"
"increment failing test retries,remove appear css animation,[gn win] link comctl32.lib to fix component build,xfail on to_parquet and to_csv that use pyarrow write options,allow disabling dynamic queue","[""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n"", ""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/ibis/backends/tests/test_export.py b/ibis/backends/tests/test_export.py\nindex 4d536d7..5bb9775 100644\n--- a/ibis/backends/tests/test_export.py\n+++ b/ibis/backends/tests/test_export.py\n@@ -222,18 +222,23 @@ def test_table_to_parquet(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\""), [({\""version\"": \""1.0\""}), ({\""version\"": \""2.6\""})])\n-def test_table_to_parquet_writer_kwargs(kwargs, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.NotSupportedError,\n+)\n+@pytest.mark.parametrize(\""version\"", [\""1.0\"", \""2.6\""])\n+def test_table_to_parquet_writer_kwargs(version, tmp_path, backend, awards_players):\n     outparquet = tmp_path / \""out.parquet\""\n-    awards_players.to_parquet(outparquet, **kwargs)\n+    awards_players.to_parquet(outparquet, version=version)\n \n     df = pd.read_parquet(outparquet)\n \n     backend.assert_frame_equal(awards_players.to_pandas(), df)\n \n-    file = pa.parquet.ParquetFile(outparquet)\n+    md = pa.parquet.read_metadata(outparquet)\n \n-    assert file.metadata.format_version == kwargs[\""version\""]\n+    assert md.format_version == version\n \n \n @pytest.mark.notimpl(\n@@ -316,14 +321,20 @@ def test_table_to_csv(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\"", \""delimiter\""), [({\""write_options\"": pcsv.WriteOptions(delimiter=\"";\"")}, \"";\""), ({\""write_options\"": pcsv.WriteOptions(delimiter=\""\\t\"")}, \""\\t\"")])\n-def test_table_to_csv_writer_kwargs(kwargs, delimiter, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.ProgrammingError,\n+)\n+@pytest.mark.parametrize(\""delimiter\"", [\"";\"", \""\\t\""], ids=[\""semicolon\"", \""tab\""])\n+def test_table_to_csv_writer_kwargs(delimiter, tmp_path, awards_players):\n     outcsv = tmp_path / \""out.csv\""\n     # avoid pandas NaNonense\n     awards_players = awards_players.select(\""playerID\"", \""awardID\"", \""yearID\"", \""lgID\"")\n \n-    awards_players.to_csv(outcsv, **kwargs)\n-    pd.read_csv(outcsv, delimiter=delimiter)\n+    awards_players.to_csv(outcsv, write_options=pcsv.WriteOptions(delimiter=delimiter))\n+    df = pd.read_csv(outcsv, delimiter=delimiter, nrows=1)\n+    assert len(df) == 1\n \n \n @pytest.mark.parametrize(\n"", ""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n""]",5,"[""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57"", ""47ef9104e4a89e80d7cc6c1950bc080841da4a7b"", ""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""bedc7950b24c37809e36a585b7985d5aa5e3e458"", ""9ef5c0d14193a9abb09b39856f58477d1f4b0d77""]","[""cicd"", ""refactor"", ""build"", ""test"", ""fix""]"
"remove deprecated settings

Removes deprecated ZEEBE_HOST environment variable, and removes
unnecessary log level environment variable, since it's already the
default in the log file,allow disabling dynamic queue,add getter for protocol id,make it mode less,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909","[""diff --git a/Dockerfile b/Dockerfile\nindex 6762a39..7f380cd 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -34,7 +34,6 @@ RUN wget -O - https://github.com/jvm-profiling-tools/async-profiler/releases/dow\n FROM ${APP_ENV} as app\n \n ENV ZB_HOME=/usr/local/zeebe \\\n-    ZEEBE_LOG_LEVEL=info \\\n     ZEEBE_BROKER_GATEWAY_NETWORK_HOST=0.0.0.0 \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \""${ZB_HOME}/bin:${PATH}\""\ndiff --git a/docker/utils/startup.sh b/docker/utils/startup.sh\nindex bc8d2fc..0fcde2b 100755\n--- a/docker/utils/startup.sh\n+++ b/docker/utils/startup.sh\n@@ -1,17 +1,14 @@\n #!/bin/bash -xeu\n \n-# legacy support\n-# This environment variable was used to set the gatewway cluster host in standalone and embedded mode.\n-# Now, there are two dedicated environment variables for the two different deployment scenarios.\n-export ZEEBE_HOST=${ZEEBE_HOST:-$(hostname -i)}\n-# Legacy support\n+HOST=$(hostname -i)\n \n if [ \""$ZEEBE_STANDALONE_GATEWAY\"" = \""true\"" ]; then\n-    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_GATEWAY_NETWORK_HOST=${ZEEBE_GATEWAY_NETWORK_HOST:-${HOST}}\n+    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${HOST}}\n \n     exec /usr/local/zeebe/bin/gateway\n else\n-    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${HOST}}\n     export ZEEBE_BROKER_GATEWAY_CLUSTER_HOST=${ZEEBE_BROKER_GATEWAY_CLUSTER_HOST:-${ZEEBE_BROKER_NETWORK_HOST}}\n \n     exec /usr/local/zeebe/bin/broker\n"", ""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n"", ""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n"", ""diff --git a/core/src/components/slides/slides.tsx b/core/src/components/slides/slides.tsx\nindex 48fd53f..d5c2f75 100644\n--- a/core/src/components/slides/slides.tsx\n+++ b/core/src/components/slides/slides.tsx\n@@ -1,7 +1,6 @@\n import { Component, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n \n import { Mode } from '../../interface.js';\n-import { createThemedClasses } from '../../utils/theme.js';\n \n import { Swiper } from './vendor/swiper.js';\n \n@@ -15,6 +14,7 @@ import { Swiper } from './vendor/swiper.js';\n   shadow: true\n })\n export class Slides {\n+\n   private container!: HTMLElement;\n   private swiper: any;\n \n@@ -391,12 +391,6 @@ export class Slides {\n     return { ...swiperOptions, ...this.options, ...eventOptions };\n   }\n \n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'slides')\n-    };\n-  }\n-\n   render() {\n     return (\n       <div class=\""swiper-container\"" ref={el => this.container = el as HTMLElement }>\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.scss b/core/src/components/thumbnail/thumbnail.ios.scss\ndeleted file mode 100644\nindex e3add45..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.ios.vars\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-ios-width};\n-  --border-radius: #{$thumbnail-ios-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.vars.scss b/core/src/components/thumbnail/thumbnail.ios.vars.scss\ndeleted file mode 100644\nindex 85d53e5..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.ios\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-ios-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-ios-height:                  $thumbnail-ios-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-ios-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.md.scss b/core/src/components/thumbnail/thumbnail.md.scss\ndeleted file mode 100644\nindex 0fbb2ca..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.md.vars\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-md-width};\n-  --border-radius: #{$thumbnail-md-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.md.vars.scss b/core/src/components/thumbnail/thumbnail.md.vars.scss\ndeleted file mode 100644\nindex 94e48b2..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.md\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-md-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-md-height:                  $thumbnail-md-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-md-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.scss b/core/src/components/thumbnail/thumbnail.scss\nindex 8ac3a22..8af268d 100644\n--- a/core/src/components/thumbnail/thumbnail.scss\n+++ b/core/src/components/thumbnail/thumbnail.scss\n@@ -9,6 +9,8 @@\n    * @prop --border-radius: Border radius of the thumbnail\n    * @prop --size: Size of the thumbnail\n    */\n+  --size: 48px;\n+  --border-radius: 0;\n \n   @include border-radius(var(--border-radius));\n \ndiff --git a/core/src/components/thumbnail/thumbnail.tsx b/core/src/components/thumbnail/thumbnail.tsx\nindex 50ff2c2..de76593 100644\n--- a/core/src/components/thumbnail/thumbnail.tsx\n+++ b/core/src/components/thumbnail/thumbnail.tsx\n@@ -1,25 +1,11 @@\n import { Component } from '@stencil/core';\n \n-import { Mode } from '../../interface';\n-import { createThemedClasses } from '../../utils/theme';\n-\n @Component({\n   tag: 'ion-thumbnail',\n-  styleUrls: {\n-    ios: 'thumbnail.ios.scss',\n-    md: 'thumbnail.md.scss'\n-  },\n+  styleUrl: 'thumbnail.scss',\n   shadow: true\n })\n export class Thumbnail {\n-  mode!: Mode;\n-\n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'thumbnail')\n-    };\n-  }\n-\n   render() {\n     return <slot></slot>;\n   }\n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n""]",5,"[""e4a11fd5c34942ba12737f1c8c084489428ee274"", ""9ef5c0d14193a9abb09b39856f58477d1f4b0d77"", ""dc5238b2bda98a7c4f2fe9584fc3b0191a408109"", ""771857b1df9470ebc15357e8879118a72c649d5b"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119""]","[""build"", ""fix"", ""feat"", ""refactor"", ""docs""]"
"Fix typo,setup jest and add m.ts tests,spring version, core version,use `regexp_instr != 0` instead of `REGEXP` keyword,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>","[""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n"", ""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n""]",5,"[""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""229b53a632ea97d47c4be11f096bdd828fb415d8"", ""c55591ba157298a9c5816693c102a89dfd058830"", ""06e2be4e2019b6fa714e1fcb34485860ef1ede79"", ""f823cf28652987d43c8324b4f5b203240032383a""]","[""docs"", ""test"", ""build"", ""fix"", ""feat""]"
"increment failing test retries,spring version, core version,print errors without stacktrace,setup jest and add m.ts tests,terminated tasks linger for a bit

Signed-off-by: Eliza Weisman <eliza@buoyant.io>","[""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n"", ""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n"", ""diff --git a/console/src/main.rs b/console/src/main.rs\nindex ebfa315..5328d96 100644\n--- a/console/src/main.rs\n+++ b/console/src/main.rs\n@@ -69,6 +69,7 @@ async fn main() -> Result<(), Box<dyn std::error::Error>> {\n                 .wrap(Wrap { trim: true });\n             f.render_widget(header, chunks[0]);\n             tasks.render(f, chunks[1]);\n+            tasks.retain_active();\n         })?;\n     }\n \ndiff --git a/console/src/tasks.rs b/console/src/tasks.rs\nindex 7be39a4..eb41495 100644\n--- a/console/src/tasks.rs\n+++ b/console/src/tasks.rs\n@@ -19,6 +19,7 @@ struct Task {\n     fields: String,\n     kind: &'static str,\n     stats: Stats,\n+    completed_for: usize,\n }\n \n #[derive(Default, Debug)]\n@@ -28,10 +29,15 @@ struct Stats {\n     idle: Duration,\n     total: Duration,\n }\n+\n impl State {\n+    // How many updates to retain completed tasks for\n+    const RETAIN_COMPLETED_FOR: usize = 6;\n+\n     pub(crate) fn len(&self) -> usize {\n         self.tasks.len()\n     }\n+\n     pub(crate) fn update(&mut self, update: proto::tasks::TaskUpdate) {\n         let new_tasks = update.new_tasks.into_iter().filter_map(|task| {\n             if task.id.is_none() {\n@@ -48,6 +54,7 @@ impl State {\n                 fields: task.string_fields,\n                 kind,\n                 stats: Default::default(),\n+                completed_for: 0,\n             };\n             Some((id, task))\n         });\n@@ -60,7 +67,10 @@ impl State {\n         }\n \n         for proto::SpanId { id } in update.completed {\n-            if self.tasks.remove(&id).is_none() {\n+            if let Some(task) = self.tasks.get_mut(&id) {\n+                task.kind = \""!\"";\n+                task.completed_for = 1;\n+            } else {\n                 tracing::warn!(?id, \""tried to complete a task that didn't exist\"");\n             }\n         }\n@@ -79,7 +89,7 @@ impl State {\n         const DUR_PRECISION: usize = 4;\n         const POLLS_LEN: usize = 5;\n         let rows = self.tasks.values().map(|task| {\n-            let row = Row::new(vec![\n+            let mut row = Row::new(vec![\n                 Cell::from(task.id_hex.as_str()),\n                 // TODO(eliza): is there a way to write a `fmt::Debug` impl\n                 // directly to tui without doing an allocation?\n@@ -105,6 +115,9 @@ impl State {\n                 Cell::from(format!(\""{:>width$}\"", task.stats.polls, width = POLLS_LEN)),\n                 Cell::from(task.fields.as_str()),\n             ]);\n+            if task.completed_for > 0 {\n+                row = row.style(Style::default().add_modifier(style::Modifier::DIM));\n+            }\n             row\n         });\n         let t = Table::new(rows)\n@@ -126,6 +139,16 @@ impl State {\n \n         frame.render_widget(t, area)\n     }\n+\n+    pub(crate) fn retain_active(&mut self) {\n+        self.tasks.retain(|_, task| {\n+            if task.completed_for == 0 {\n+                return true;\n+            }\n+            task.completed_for += 1;\n+            task.completed_for <= Self::RETAIN_COMPLETED_FOR\n+        })\n+    }\n }\n \n impl From<proto::tasks::Stats> for Stats {\n""]",5,"[""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57"", ""c55591ba157298a9c5816693c102a89dfd058830"", ""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""229b53a632ea97d47c4be11f096bdd828fb415d8"", ""1bcf88670b50155b50071e707f98f30cea0b7a24""]","[""cicd"", ""build"", ""fix"", ""test"", ""feat""]"
"initialize threejs objects in defaultRef, to fix undefined type errors,ensure checksum persist flushes to disk,assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,add remote [skip ci],cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.","[""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n"", ""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n"", ""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n"", ""diff --git a/.github/workflows/ibis-rebase-nightly.yml b/.github/workflows/ibis-rebase-nightly.yml\nindex 06c9003..e19c703 100644\n--- a/.github/workflows/ibis-rebase-nightly.yml\n+++ b/.github/workflows/ibis-rebase-nightly.yml\n@@ -47,7 +47,10 @@ jobs:\n           git config --global user.email 'ibis-squawk-bot[bot]@users.noreply.github.com'\n \n       - name: fetch and rebase on top of upstream\n-        run: git pull --rebase -X ours https://github.com/ibis-project/ibis master\n+        run: |\n+          git remote add upstream https://github.com/ibis-project/ibis\n+          git fetch upstream\n+          git rebase -X ours upstream/master\n \n       - uses: tibdex/github-app-token@v1\n         id: generate_pr_token\n"", ""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n""]",5,"[""2561f4ade46fc9d59f289f328cc77733a6443697"", ""b7ce2894fd1794064bd6db4ed730bb6cb7728739"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3"", ""e96487ad7ce90b141219d9032fa2bed68d5dae6a"", ""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7""]","[""fix"", ""test"", ""build"", ""cicd"", ""refactor""]"
"Fix typo,increment failing test retries,export a modal transition preset,fixed docker link tests,use `regexp_instr != 0` instead of `REGEXP` keyword","[""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n"", ""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n"", ""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n""]",5,"[""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57"", ""535708ae50aecb452560a23356fd396f99ef13a2"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f"", ""06e2be4e2019b6fa714e1fcb34485860ef1ede79""]","[""docs"", ""cicd"", ""refactor"", ""test"", ""fix""]"
"cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909,spring version, core version,add hardware back button

Closes #5071,allow disabling dynamic queue","[""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n"", ""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/ionic/components/app/app.ts b/ionic/components/app/app.ts\nindex 04d8c57..08aab92 100644\n--- a/ionic/components/app/app.ts\n+++ b/ionic/components/app/app.ts\n@@ -3,8 +3,7 @@ import {Title} from 'angular2/platform/browser';\n \n import {Config} from '../../config/config';\n import {ClickBlock} from '../../util/click-block';\n-import {Nav} from '../nav/nav';\n-import {Tabs} from '../tabs/tabs';\n+import {Platform} from '../../platform/platform';\n \n \n /**\n@@ -23,8 +22,20 @@ export class IonicApp {\n \n   constructor(\n     private _config: Config,\n-    private _clickBlock: ClickBlock\n-  ) {}\n+    private _clickBlock: ClickBlock,\n+    platform: Platform\n+  ) {\n+    platform.backButton.subscribe(() => {\n+      let activeNav = this.getActiveNav();\n+      if (activeNav) {\n+        if (activeNav.length() === 1) {\n+          platform.exitApp();\n+        } else {\n+          activeNav.pop();\n+        }\n+      }\n+    });\n+  }\n \n   /**\n    * Sets the document title.\n@@ -102,7 +113,7 @@ export class IonicApp {\n   /**\n    * @private\n    */\n-  getActiveNav(): Nav | Tabs {\n+  getActiveNav(): any {\n     var nav = this._rootNav || null;\n     var activeChildNav;\n \n"", ""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n""]",5,"[""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119"", ""c55591ba157298a9c5816693c102a89dfd058830"", ""68278b00450f2679761a2999500f6d87a579376b"", ""9ef5c0d14193a9abb09b39856f58477d1f4b0d77""]","[""refactor"", ""docs"", ""build"", ""feat"", ""fix""]"
"add props to get color and label from a route,fix build ordering,initialize threejs objects in defaultRef, to fix undefined type errors,do not use scripts and binaries from the libcc repo,verify checkpoint listeners are notified","[""diff --git a/src/components/BottomNavigation.js b/src/components/BottomNavigation.js\nindex 1b72302..7d8ea75 100644\n--- a/src/components/BottomNavigation.js\n+++ b/src/components/BottomNavigation.js\n@@ -24,8 +24,8 @@ const AnimatedPaper = Animated.createAnimatedComponent(Paper);\n \n type Route = {\n   key: string,\n-  title: string,\n-  icon: IconSource,\n+  title?: string,\n+  icon?: IconSource,\n   color?: string,\n };\n \n@@ -51,7 +51,7 @@ type Props<T> = {\n    * - `key`: a unique key to identify the route\n    * - `title`: title of the route to use as the tab label\n    * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n-   * - `color`: color to use as background color for shifting bottom navigation (optional)\n+   * - `color`: color to use as background color for shifting bottom navigation\n    *\n    * Example:\n    *\n@@ -115,11 +115,27 @@ type Props<T> = {\n   /**\n    * Callback which returns a React Element to be used as tab icon.\n    */\n-  renderIcon?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderIcon?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n   /**\n    * Callback which React Element to be used as tab label.\n    */\n-  renderLabel?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderLabel?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n+  /**\n+   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n+   */\n+  getLabelText?: (props: { route: T }) => string,\n+  /**\n+   * Get color for the tab, uses `route.color` by default.\n+   */\n+  getColor?: (props: { route: T }) => string,\n   /**\n    * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n    */\n@@ -159,6 +175,10 @@ type State = {\n    */\n   ripple: Animated.Value,\n   /**\n+   * Animation for the touch feedback, used to determine it's scale and opacity.\n+   */\n+  touch: Animated.Value,\n+  /**\n    * Layout of the tab bar. The width is used to determine the size and position of the ripple.\n    */\n   layout: { height: number, width: number, measured: boolean },\n@@ -173,7 +193,7 @@ const MIN_SHIFT_AMOUNT = 10;\n const MIN_TAB_WIDTH = 96;\n const MAX_TAB_WIDTH = 168;\n const BAR_HEIGHT = 56;\n-const SMALL_RIPPLE_SIZE = 72;\n+const SMALL_RIPPLE_SIZE = 96;\n const ACTIVE_LABEL_SIZE = 14;\n const INACTIVE_LABEL_SIZE = 12;\n \n@@ -251,6 +271,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ),\n       index: new Animated.Value(index),\n       ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n+      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n       layout: { height: 0, width: 0, measured: false },\n       previous: 0,\n     };\n@@ -349,6 +370,15 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n   _handleTabPress = (index: number) => {\n     const { navigationState } = this.props;\n \n+    this.state.touch.setValue(MIN_RIPPLE_SCALE);\n+\n+    Animated.timing(this.state.touch, {\n+      toValue: 1,\n+      duration: 300,\n+      easing: Easing.in(Easing.sin),\n+      useNativeDriver: true,\n+    }).start();\n+\n     if (index !== navigationState.index) {\n       this.props.onIndexChange(index);\n     }\n@@ -376,6 +406,8 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       renderScene,\n       renderIcon,\n       renderLabel,\n+      getLabelText = ({ route }) => route.title,\n+      getColor = ({ route }) => route.color,\n       barStyle,\n       style,\n       theme,\n@@ -400,7 +432,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ? this.state.index.interpolate({\n           inputRange: routes.map((_, i) => i),\n           outputRange: routes.map(\n-            route => route.color || approxBackgroundColor\n+            route => getColor({ route }) || approxBackgroundColor\n           ),\n         })\n       : approxBackgroundColor;\n@@ -416,7 +448,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n           .rgb()\n           .string();\n \n-    const rippleColor = color(textColor)\n+    const touchColor = color(textColor)\n       .alpha(0.12)\n       .rgb()\n       .string();\n@@ -430,22 +462,10 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n \n     // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n     // We need to move it from the left to the active tab and also account for how much that tab has shifted.\n-    const rippleShift =\n-      navigationState.index * tabWidth +\n-      tabWidth / 2 +\n-      this._calculateShift(\n-        this.state.previous,\n-        navigationState.index,\n-        routes.length\n-      );\n \n     return (\n       <View\n-        style={[\n-          styles.container,\n-          { backgroundColor: theme.dark ? white : black },\n-          style,\n-        ]}\n+        style={[styles.container, style]}\n         onLayout={this._handleLayout}\n         pointerEvents={layout.measured ? 'auto' : 'none'}\n       >\n@@ -485,25 +505,30 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n             style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n           >\n             {shifting ? (\n-              // Large ripple with the backround color\n               <Animated.View\n                 pointerEvents=\""none\""\n                 style={[\n                   styles.ripple,\n                   {\n                     // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - layout.width / 2,\n-                    left: rippleShift - layout.width / 2,\n-                    height: layout.width,\n-                    width: layout.width,\n+                    top: BAR_HEIGHT / 2 - layout.width / 8,\n+                    left:\n+                      navigationState.index * tabWidth +\n+                      tabWidth / 2 -\n+                      layout.width / 8,\n+                    height: layout.width / 4,\n+                    width: layout.width / 4,\n                     borderRadius: layout.width / 2,\n-                    backgroundColor: routes[navigationState.index].color,\n+                    backgroundColor: getColor({\n+                      route: routes[navigationState.index],\n+                    }),\n                     transform: [\n+                      { translateX: this.state.shifts[navigationState.index] },\n                       {\n                         // Scale to twice the size  to ensure it covers the whole tab bar\n                         scale: this.state.ripple.interpolate({\n                           inputRange: [0, 1],\n-                          outputRange: [0, 2],\n+                          outputRange: [0, 8],\n                         }),\n                       },\n                     ],\n@@ -515,36 +540,36 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                 ]}\n               />\n             ) : null}\n-            {shifting ? (\n-              // Small subtle ripple on touch\n-              <Animated.View\n-                pointerEvents=\""none\""\n-                style={[\n-                  styles.ripple,\n-                  {\n-                    // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n-                    left: rippleShift - SMALL_RIPPLE_SIZE / 2,\n-                    height: SMALL_RIPPLE_SIZE,\n-                    width: SMALL_RIPPLE_SIZE,\n-                    borderRadius: SMALL_RIPPLE_SIZE / 2,\n-                    backgroundColor: rippleColor,\n-                    transform: [\n-                      {\n-                        scale: this.state.ripple.interpolate({\n-                          inputRange: [0, 0.5, 1],\n-                          outputRange: [0, 1, 1],\n-                        }),\n-                      },\n-                    ],\n-                    opacity: this.state.ripple.interpolate({\n-                      inputRange: [0, MIN_RIPPLE_SCALE, 0.25, 0.5],\n-                      outputRange: [0, 0, 1, 0],\n-                    }),\n-                  },\n-                ]}\n-              />\n-            ) : null}\n+            <Animated.View\n+              pointerEvents=\""none\""\n+              style={[\n+                styles.ripple,\n+                {\n+                  // Set top and left values so that the ripple's center is same as the tab's center\n+                  top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n+                  left:\n+                    navigationState.index * tabWidth +\n+                    tabWidth / 2 -\n+                    SMALL_RIPPLE_SIZE / 2,\n+                  height: SMALL_RIPPLE_SIZE,\n+                  width: SMALL_RIPPLE_SIZE,\n+                  borderRadius: SMALL_RIPPLE_SIZE / 2,\n+                  backgroundColor: touchColor,\n+                  transform: [\n+                    {\n+                      translateX: shifting\n+                        ? this.state.shifts[navigationState.index]\n+                        : 0,\n+                    },\n+                    { scale: this.state.touch },\n+                  ],\n+                  opacity: this.state.touch.interpolate({\n+                    inputRange: [0, 0.5, 1],\n+                    outputRange: [0, 1, 0],\n+                  }),\n+                },\n+              ]}\n+            />\n             {routes.map((route, index) => {\n               const shift = this.state.shifts[index];\n               const focused = this.state.tabs[index];\n@@ -607,7 +632,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderIcon ? (\n-                          renderIcon({ route, focused: true })\n+                          renderIcon({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <Icon\n                             style={styles.icon}\n@@ -625,7 +654,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderIcon ? (\n-                            renderIcon({ route, focused: false })\n+                            renderIcon({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <Icon\n                               style={styles.icon}\n@@ -652,7 +685,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderLabel ? (\n-                          renderLabel({ route, focused: true })\n+                          renderLabel({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <AnimatedText\n                             style={[\n@@ -662,7 +699,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                               },\n                             ]}\n                           >\n-                            {route.title}\n+                            {getLabelText({ route })}\n                           </AnimatedText>\n                         )}\n                       </Animated.View>\n@@ -674,7 +711,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderLabel ? (\n-                            renderLabel({ route, focused: false })\n+                            renderLabel({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <AnimatedText\n                               style={[\n@@ -684,7 +725,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                                 },\n                               ]}\n                             >\n-                              {route.title}\n+                              {getLabelText({ route })}\n                             </AnimatedText>\n                           )}\n                         </Animated.View>\n"", ""diff --git a/scripts/build.mjs b/scripts/build.mjs\nindex 204854f..b3cf067 100644\n--- a/scripts/build.mjs\n+++ b/scripts/build.mjs\n@@ -3,8 +3,8 @@ import { write } from 'fsxx';\n import { info, success } from './helpers.mjs';\n \n await $`rm -rf dist/*`;\n-await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n await $`unbuild`;\n+await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n \n const packages = [\n   'jsx-runtime',\n"", ""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n""]",5,"[""ded26d768ff432ad3bde3c0aa1e95ce50726100a"", ""c323d59c607cabc91f17a78528d998f376f30b10"", ""2561f4ade46fc9d59f289f328cc77733a6443697"", ""45837af24a33308a70a3454f0f650f9fe728e272"", ""e0198f74b81da3663144cfe1d971939319f82a0f""]","[""feat"", ""build"", ""fix"", ""cicd"", ""test""]"
"add remote [skip ci],small error msg improvement

refs #1005,fixed docker link tests,buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23,allow disabling dynamic queue","[""diff --git a/.github/workflows/ibis-rebase-nightly.yml b/.github/workflows/ibis-rebase-nightly.yml\nindex 06c9003..e19c703 100644\n--- a/.github/workflows/ibis-rebase-nightly.yml\n+++ b/.github/workflows/ibis-rebase-nightly.yml\n@@ -47,7 +47,10 @@ jobs:\n           git config --global user.email 'ibis-squawk-bot[bot]@users.noreply.github.com'\n \n       - name: fetch and rebase on top of upstream\n-        run: git pull --rebase -X ours https://github.com/ibis-project/ibis master\n+        run: |\n+          git remote add upstream https://github.com/ibis-project/ibis\n+          git fetch upstream\n+          git rebase -X ours upstream/master\n \n       - uses: tibdex/github-app-token@v1\n         id: generate_pr_token\n"", ""diff --git a/internal/pipe/git/errors.go b/internal/pipe/git/errors.go\nindex a8c15d5..13dfb56 100644\n--- a/internal/pipe/git/errors.go\n+++ b/internal/pipe/git/errors.go\n@@ -11,7 +11,7 @@ type ErrDirty struct {\n }\n \n func (e ErrDirty) Error() string {\n-\treturn fmt.Sprintf(\""git is currently in a dirty state:\\n%v\"", e.status)\n+\treturn fmt.Sprintf(\""git is currently in a dirty state, please check in your pipeline what can be changing the following files:\\n%v\"", e.status)\n }\n \n // ErrWrongRef happens when the HEAD reference is different from the tag being built\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n"", ""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n"", ""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n""]",5,"[""e96487ad7ce90b141219d9032fa2bed68d5dae6a"", ""a62314d9bb632be6af026686615d14b912250512"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f"", ""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d"", ""9ef5c0d14193a9abb09b39856f58477d1f4b0d77""]","[""cicd"", ""refactor"", ""test"", ""feat"", ""fix""]"
"spring version, core version,add fallible peek_last_token(),add a branch name to Slack notifications (#14793),add comments for the Handler,fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.","[""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n"", ""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n"", ""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n""]",5,"[""c55591ba157298a9c5816693c102a89dfd058830"", ""63eab619e6166eb6cab948028a7b89bf059dd878"", ""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da"", ""036a0ff49a7dade0e04c9c07071a1ff49133ee24"", ""9be725fa3906323d4bc9788f54eccf74109d632b""]","[""build"", ""refactor"", ""cicd"", ""docs"", ""fix""]"
"Fix typo,add riscv64gc-unknown-linux-gnu,export a modal transition preset,assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>","[""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n"", ""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n"", ""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n""]",5,"[""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""173553c0372e66e03bdab19e0e6c2dd44daa14a0"", ""535708ae50aecb452560a23356fd396f99ef13a2"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3"", ""f823cf28652987d43c8324b4f5b203240032383a""]","[""docs"", ""cicd"", ""refactor"", ""build"", ""feat""]"
"xfail on to_parquet and to_csv that use pyarrow write options,enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.,never call ""onStart"" prop when idle,add comments for the Handler","[""diff --git a/ibis/backends/tests/test_export.py b/ibis/backends/tests/test_export.py\nindex 4d536d7..5bb9775 100644\n--- a/ibis/backends/tests/test_export.py\n+++ b/ibis/backends/tests/test_export.py\n@@ -222,18 +222,23 @@ def test_table_to_parquet(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\""), [({\""version\"": \""1.0\""}), ({\""version\"": \""2.6\""})])\n-def test_table_to_parquet_writer_kwargs(kwargs, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.NotSupportedError,\n+)\n+@pytest.mark.parametrize(\""version\"", [\""1.0\"", \""2.6\""])\n+def test_table_to_parquet_writer_kwargs(version, tmp_path, backend, awards_players):\n     outparquet = tmp_path / \""out.parquet\""\n-    awards_players.to_parquet(outparquet, **kwargs)\n+    awards_players.to_parquet(outparquet, version=version)\n \n     df = pd.read_parquet(outparquet)\n \n     backend.assert_frame_equal(awards_players.to_pandas(), df)\n \n-    file = pa.parquet.ParquetFile(outparquet)\n+    md = pa.parquet.read_metadata(outparquet)\n \n-    assert file.metadata.format_version == kwargs[\""version\""]\n+    assert md.format_version == version\n \n \n @pytest.mark.notimpl(\n@@ -316,14 +321,20 @@ def test_table_to_csv(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\"", \""delimiter\""), [({\""write_options\"": pcsv.WriteOptions(delimiter=\"";\"")}, \"";\""), ({\""write_options\"": pcsv.WriteOptions(delimiter=\""\\t\"")}, \""\\t\"")])\n-def test_table_to_csv_writer_kwargs(kwargs, delimiter, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.ProgrammingError,\n+)\n+@pytest.mark.parametrize(\""delimiter\"", [\"";\"", \""\\t\""], ids=[\""semicolon\"", \""tab\""])\n+def test_table_to_csv_writer_kwargs(delimiter, tmp_path, awards_players):\n     outcsv = tmp_path / \""out.csv\""\n     # avoid pandas NaNonense\n     awards_players = awards_players.select(\""playerID\"", \""awardID\"", \""yearID\"", \""lgID\"")\n \n-    awards_players.to_csv(outcsv, **kwargs)\n-    pd.read_csv(outcsv, delimiter=delimiter)\n+    awards_players.to_csv(outcsv, write_options=pcsv.WriteOptions(delimiter=delimiter))\n+    df = pd.read_csv(outcsv, delimiter=delimiter, nrows=1)\n+    assert len(df) == 1\n \n \n @pytest.mark.parametrize(\n"", ""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n"", ""diff --git a/packages/core/src/SpringValue.ts b/packages/core/src/SpringValue.ts\nindex 18494a8..cbc4f27 100644\n--- a/packages/core/src/SpringValue.ts\n+++ b/packages/core/src/SpringValue.ts\n@@ -596,11 +596,11 @@ export class SpringValue<T = any> extends AnimationValue<T> {\n   /** Notify change observers */\n   protected _onChange(value: T, idle = false) {\n     const anim = this.animation\n-    if (!anim.changed) {\n+    if (!anim.changed && !idle) {\n       anim.changed = true\n       // The \""onStart\"" prop is called on the first change after entering the\n       // frameloop, but never for immediate animations.\n-      if (anim.onStart && !anim.immediate) {\n+      if (anim.onStart) {\n         anim.onStart(this)\n       }\n     }\n"", ""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n""]",5,"[""bedc7950b24c37809e36a585b7985d5aa5e3e458"", ""fd8e563cc19ca4684885d4692acee6bebcca4ada"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c"", ""c8e0ae8612df3d6f2831acc004aaac332f6105e4"", ""036a0ff49a7dade0e04c9c07071a1ff49133ee24""]","[""test"", ""feat"", ""refactor"", ""fix"", ""docs""]"
"update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909,assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,increment failing test retries,autostart feature fixed,add benchmark for known-slow table expression","[""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n"", ""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n"", ""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n"", ""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n""]",5,"[""c2ee5cd5e709afd15c5565ee009a0d204403a119"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3"", ""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57"", ""bed78248c941d57ad4cc20a455147e186e97c7a1"", ""e9617f0854030e70365eb264bcb3b58078e79e9e""]","[""docs"", ""build"", ""cicd"", ""fix"", ""test""]"
"restructure ClusterTopology to track completed change,only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,fixed docker link tests,docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>","[""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n"", ""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n"", ""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n""]",5,"[""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2"", ""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""e12d9e77a6fd531a22325337838a841b1c67f00d"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f"", ""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf""]","[""refactor"", ""cicd"", ""docs"", ""test"", ""build""]"
"setup jest and add m.ts tests,detach ViewControllers when not active,only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,restructure ClusterTopology to track completed change,update flushed index before truncating","[""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n"", ""diff --git a/ionic/components/nav/nav-controller.ts b/ionic/components/nav/nav-controller.ts\nindex becdd99..1cc3c31 100644\n--- a/ionic/components/nav/nav-controller.ts\n+++ b/ionic/components/nav/nav-controller.ts\n@@ -1410,6 +1410,9 @@ export class NavController extends Ion {\n       // set the ComponentRef's instance to this ViewController\n       view.setInstance(component);\n \n+      // remember the ChangeDetectorRef for this ViewController\n+      view.setChangeDetector(hostViewRef.changeDetectorRef);\n+\n       // remember the ElementRef to the ion-page elementRef that was just created\n       view.setPageRef(pageElementRef);\n \ndiff --git a/ionic/components/nav/view-controller.ts b/ionic/components/nav/view-controller.ts\nindex 3207fa2..069c74d 100644\n--- a/ionic/components/nav/view-controller.ts\n+++ b/ionic/components/nav/view-controller.ts\n@@ -1,4 +1,4 @@\n-import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer} from 'angular2/core';\n+import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer, ChangeDetectorRef} from 'angular2/core';\n \n import {Navbar} from '../navbar/navbar';\n import {NavController, NavOptions} from './nav-controller';\n@@ -33,6 +33,7 @@ export class ViewController {\n   private _nbVwRef: ViewContainerRef;\n   private _onDismiss: Function = null;\n   private _pgRef: ElementRef;\n+  private _cd: ChangeDetectorRef;\n   protected _nav: NavController;\n \n   /**\n@@ -166,6 +167,13 @@ export class ViewController {\n   /**\n    * @private\n    */\n+  setChangeDetector(cd: ChangeDetectorRef) {\n+    this._cd = cd;\n+  }\n+\n+  /**\n+   * @private\n+   */\n   setInstance(instance: any) {\n     this.instance = instance;\n   }\n@@ -467,6 +475,14 @@ export class ViewController {\n    * The view is about to enter and become the active view.\n    */\n   willEnter() {\n+    if (this._cd) {\n+      // ensure this has been re-attached to the change detector\n+      this._cd.reattach();\n+\n+      // detect changes before we run any user code\n+      this._cd.detectChanges();\n+    }\n+\n     ctrlFn(this, 'onPageWillEnter');\n   }\n \n@@ -496,6 +512,10 @@ export class ViewController {\n    */\n   didLeave() {\n     ctrlFn(this, 'onPageDidLeave');\n+\n+    // when this is not the active page\n+    // we no longer need to detect changes\n+    this._cd && this._cd.detach();\n   }\n \n   /**\n"", ""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n"", ""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n""]",5,"[""229b53a632ea97d47c4be11f096bdd828fb415d8"", ""b282e90e2cbb74559aab79eee8443a4d7c85502a"", ""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2"", ""933ab6bb86372913c992567cf9660009900911a7""]","[""test"", ""feat"", ""cicd"", ""refactor"", ""fix""]"
"docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>,use `regexp_instr != 0` instead of `REGEXP` keyword,add a branch name to Slack notifications (#14793),convert `run_tag_values_test_case` to a function,licensing","[""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n"", ""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n"", ""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n""]",5,"[""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf"", ""06e2be4e2019b6fa714e1fcb34485860ef1ede79"", ""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da"", ""1db13ec43727aca872a0f3836e4023ed85db665e"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0""]","[""build"", ""fix"", ""cicd"", ""refactor"", ""docs""]"
"[gn] fix include_dirs ordering error,add .nullif() example,increment failing test retries,Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>","[""diff --git a/BUILD.gn b/BUILD.gn\nindex 11adaa7..ed64b17 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -240,6 +240,14 @@ static_library(\""electron_lib\"") {\n     \""brightray\"",\n     \""build/node\"",\n   ]\n+  include_dirs = [\n+    \""chromium_src\"",\n+    \"".\"",\n+    \""$target_gen_dir\"",\n+    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n+    # API of blink, then delete this include dir.\n+    \""//third_party/WebKit/Source\"",\n+  ]\n   if (enable_desktop_capturer) {\n     deps += [ \""//third_party/webrtc/modules/desktop_capture\"" ]\n   }\n@@ -275,14 +283,6 @@ static_library(\""electron_lib\"") {\n     # Disable warnings for g_settings_list_schemas.\n     \""GLIB_DISABLE_DEPRECATION_WARNINGS\"",\n   ]\n-  include_dirs = [\n-    \""chromium_src\"",\n-    \"".\"",\n-    \""$target_gen_dir\"",\n-    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n-    # API of blink, then delete this include dir.\n-    \""//third_party/WebKit/Source\"",\n-  ]\n   if (is_component_build) {\n     defines += [\n       # Import V8 symbols from shared library (node.dll / libnode.so)\n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n"", ""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n"", ""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n""]",5,"[""c44cf88a6ec54e5ddd99d8348bcc57b301ec7945"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21"", ""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57"", ""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3"", ""f823cf28652987d43c8324b4f5b203240032383a""]","[""build"", ""docs"", ""cicd"", ""test"", ""feat""]"
"Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>,never call ""onStart"" prop when idle,remove appear css animation,remove deprecated settings

Removes deprecated ZEEBE_HOST environment variable, and removes
unnecessary log level environment variable, since it's already the
default in the log file,fixed docker link tests","[""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n"", ""diff --git a/packages/core/src/SpringValue.ts b/packages/core/src/SpringValue.ts\nindex 18494a8..cbc4f27 100644\n--- a/packages/core/src/SpringValue.ts\n+++ b/packages/core/src/SpringValue.ts\n@@ -596,11 +596,11 @@ export class SpringValue<T = any> extends AnimationValue<T> {\n   /** Notify change observers */\n   protected _onChange(value: T, idle = false) {\n     const anim = this.animation\n-    if (!anim.changed) {\n+    if (!anim.changed && !idle) {\n       anim.changed = true\n       // The \""onStart\"" prop is called on the first change after entering the\n       // frameloop, but never for immediate animations.\n-      if (anim.onStart && !anim.immediate) {\n+      if (anim.onStart) {\n         anim.onStart(this)\n       }\n     }\n"", ""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n"", ""diff --git a/Dockerfile b/Dockerfile\nindex 6762a39..7f380cd 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -34,7 +34,6 @@ RUN wget -O - https://github.com/jvm-profiling-tools/async-profiler/releases/dow\n FROM ${APP_ENV} as app\n \n ENV ZB_HOME=/usr/local/zeebe \\\n-    ZEEBE_LOG_LEVEL=info \\\n     ZEEBE_BROKER_GATEWAY_NETWORK_HOST=0.0.0.0 \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \""${ZB_HOME}/bin:${PATH}\""\ndiff --git a/docker/utils/startup.sh b/docker/utils/startup.sh\nindex bc8d2fc..0fcde2b 100755\n--- a/docker/utils/startup.sh\n+++ b/docker/utils/startup.sh\n@@ -1,17 +1,14 @@\n #!/bin/bash -xeu\n \n-# legacy support\n-# This environment variable was used to set the gatewway cluster host in standalone and embedded mode.\n-# Now, there are two dedicated environment variables for the two different deployment scenarios.\n-export ZEEBE_HOST=${ZEEBE_HOST:-$(hostname -i)}\n-# Legacy support\n+HOST=$(hostname -i)\n \n if [ \""$ZEEBE_STANDALONE_GATEWAY\"" = \""true\"" ]; then\n-    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_GATEWAY_NETWORK_HOST=${ZEEBE_GATEWAY_NETWORK_HOST:-${HOST}}\n+    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${HOST}}\n \n     exec /usr/local/zeebe/bin/gateway\n else\n-    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${HOST}}\n     export ZEEBE_BROKER_GATEWAY_CLUSTER_HOST=${ZEEBE_BROKER_GATEWAY_CLUSTER_HOST:-${ZEEBE_BROKER_NETWORK_HOST}}\n \n     exec /usr/local/zeebe/bin/broker\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n""]",5,"[""f823cf28652987d43c8324b4f5b203240032383a"", ""c8e0ae8612df3d6f2831acc004aaac332f6105e4"", ""47ef9104e4a89e80d7cc6c1950bc080841da4a7b"", ""e4a11fd5c34942ba12737f1c8c084489428ee274"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f""]","[""feat"", ""fix"", ""refactor"", ""build"", ""test""]"
"convert `run_tag_values_test_case` to a function,updated react demo parcel command,add remote [skip ci],add .nullif() example,skip flaky test","[""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n"", ""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n"", ""diff --git a/.github/workflows/ibis-rebase-nightly.yml b/.github/workflows/ibis-rebase-nightly.yml\nindex 06c9003..e19c703 100644\n--- a/.github/workflows/ibis-rebase-nightly.yml\n+++ b/.github/workflows/ibis-rebase-nightly.yml\n@@ -47,7 +47,10 @@ jobs:\n           git config --global user.email 'ibis-squawk-bot[bot]@users.noreply.github.com'\n \n       - name: fetch and rebase on top of upstream\n-        run: git pull --rebase -X ours https://github.com/ibis-project/ibis master\n+        run: |\n+          git remote add upstream https://github.com/ibis-project/ibis\n+          git fetch upstream\n+          git rebase -X ours upstream/master\n \n       - uses: tibdex/github-app-token@v1\n         id: generate_pr_token\n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n"", ""diff --git a/test/browser-pool/browser-pool.test.ts b/test/browser-pool/browser-pool.test.ts\nindex 9f21322..7a011b5 100644\n--- a/test/browser-pool/browser-pool.test.ts\n+++ b/test/browser-pool/browser-pool.test.ts\n@@ -128,7 +128,8 @@ describe.each([\n             expect(page.close).toBeDefined();\n         });\n \n-        test('should allow early aborting in case of outer timeout', async () => {\n+        // TODO: this test is very flaky in the CI\n+        test.skip('should allow early aborting in case of outer timeout', async () => {\n             const timeout = browserPool.operationTimeoutMillis;\n             browserPool.operationTimeoutMillis = 500;\n             // @ts-expect-error mocking private method\n""]",5,"[""1db13ec43727aca872a0f3836e4023ed85db665e"", ""32b92cfa0b74a6c25990e32ac6aab12b8496794c"", ""e96487ad7ce90b141219d9032fa2bed68d5dae6a"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21"", ""e2e8ad25854bd1e7cdbc7f50b50bbd99e04ad47d""]","[""refactor"", ""build"", ""cicd"", ""docs"", ""test""]"
"docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>,Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.,convert `run_tag_values_test_case` to a function,add a branch name to Slack notifications (#14793),print errors without stacktrace","[""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n"", ""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n"", ""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n"", ""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n""]",5,"[""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf"", ""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3"", ""1db13ec43727aca872a0f3836e4023ed85db665e"", ""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da"", ""d129eaf9125a967ac86c6c7276bbae6b4d50af36""]","[""build"", ""test"", ""refactor"", ""cicd"", ""fix""]"
"spring version, core version,licensing,publish sdks after docs/build,fixed docker link tests,autostart feature fixed","[""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n""]",5,"[""c55591ba157298a9c5816693c102a89dfd058830"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""6c9cb638cb4d1ecc42632fcf389c24898c5b3244"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f"", ""bed78248c941d57ad4cc20a455147e186e97c7a1""]","[""build"", ""docs"", ""cicd"", ""test"", ""fix""]"
"allow disabling dynamic queue,only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23,remove deprecated settings

Removes deprecated ZEEBE_HOST environment variable, and removes
unnecessary log level environment variable, since it's already the
default in the log file,convert `run_tag_values_test_case` to a function","[""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n"", ""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n"", ""diff --git a/Dockerfile b/Dockerfile\nindex 6762a39..7f380cd 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -34,7 +34,6 @@ RUN wget -O - https://github.com/jvm-profiling-tools/async-profiler/releases/dow\n FROM ${APP_ENV} as app\n \n ENV ZB_HOME=/usr/local/zeebe \\\n-    ZEEBE_LOG_LEVEL=info \\\n     ZEEBE_BROKER_GATEWAY_NETWORK_HOST=0.0.0.0 \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \""${ZB_HOME}/bin:${PATH}\""\ndiff --git a/docker/utils/startup.sh b/docker/utils/startup.sh\nindex bc8d2fc..0fcde2b 100755\n--- a/docker/utils/startup.sh\n+++ b/docker/utils/startup.sh\n@@ -1,17 +1,14 @@\n #!/bin/bash -xeu\n \n-# legacy support\n-# This environment variable was used to set the gatewway cluster host in standalone and embedded mode.\n-# Now, there are two dedicated environment variables for the two different deployment scenarios.\n-export ZEEBE_HOST=${ZEEBE_HOST:-$(hostname -i)}\n-# Legacy support\n+HOST=$(hostname -i)\n \n if [ \""$ZEEBE_STANDALONE_GATEWAY\"" = \""true\"" ]; then\n-    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_GATEWAY_NETWORK_HOST=${ZEEBE_GATEWAY_NETWORK_HOST:-${HOST}}\n+    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${HOST}}\n \n     exec /usr/local/zeebe/bin/gateway\n else\n-    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${HOST}}\n     export ZEEBE_BROKER_GATEWAY_CLUSTER_HOST=${ZEEBE_BROKER_GATEWAY_CLUSTER_HOST:-${ZEEBE_BROKER_NETWORK_HOST}}\n \n     exec /usr/local/zeebe/bin/broker\n"", ""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n""]",5,"[""9ef5c0d14193a9abb09b39856f58477d1f4b0d77"", ""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d"", ""e4a11fd5c34942ba12737f1c8c084489428ee274"", ""1db13ec43727aca872a0f3836e4023ed85db665e""]","[""fix"", ""cicd"", ""feat"", ""build"", ""refactor""]"
"autostart feature fixed,remove deprecated settings

Removes deprecated ZEEBE_HOST environment variable, and removes
unnecessary log level environment variable, since it's already the
default in the log file,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>,fixed docker link tests","[""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n"", ""diff --git a/Dockerfile b/Dockerfile\nindex 6762a39..7f380cd 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -34,7 +34,6 @@ RUN wget -O - https://github.com/jvm-profiling-tools/async-profiler/releases/dow\n FROM ${APP_ENV} as app\n \n ENV ZB_HOME=/usr/local/zeebe \\\n-    ZEEBE_LOG_LEVEL=info \\\n     ZEEBE_BROKER_GATEWAY_NETWORK_HOST=0.0.0.0 \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \""${ZB_HOME}/bin:${PATH}\""\ndiff --git a/docker/utils/startup.sh b/docker/utils/startup.sh\nindex bc8d2fc..0fcde2b 100755\n--- a/docker/utils/startup.sh\n+++ b/docker/utils/startup.sh\n@@ -1,17 +1,14 @@\n #!/bin/bash -xeu\n \n-# legacy support\n-# This environment variable was used to set the gatewway cluster host in standalone and embedded mode.\n-# Now, there are two dedicated environment variables for the two different deployment scenarios.\n-export ZEEBE_HOST=${ZEEBE_HOST:-$(hostname -i)}\n-# Legacy support\n+HOST=$(hostname -i)\n \n if [ \""$ZEEBE_STANDALONE_GATEWAY\"" = \""true\"" ]; then\n-    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_GATEWAY_NETWORK_HOST=${ZEEBE_GATEWAY_NETWORK_HOST:-${HOST}}\n+    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${HOST}}\n \n     exec /usr/local/zeebe/bin/gateway\n else\n-    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${HOST}}\n     export ZEEBE_BROKER_GATEWAY_CLUSTER_HOST=${ZEEBE_BROKER_GATEWAY_CLUSTER_HOST:-${ZEEBE_BROKER_NETWORK_HOST}}\n \n     exec /usr/local/zeebe/bin/broker\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n""]",5,"[""bed78248c941d57ad4cc20a455147e186e97c7a1"", ""e4a11fd5c34942ba12737f1c8c084489428ee274"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c"", ""f823cf28652987d43c8324b4f5b203240032383a"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f""]","[""fix"", ""build"", ""refactor"", ""feat"", ""test""]"
"repository creation,xfail on to_parquet and to_csv that use pyarrow write options,add props to get color and label from a route,licensing,fix build ordering","[""diff --git a/server/src/services/repository.service.ts b/server/src/services/repository.service.ts\nindex 3869c98..d675b30 100644\n--- a/server/src/services/repository.service.ts\n+++ b/server/src/services/repository.service.ts\n@@ -19,6 +19,8 @@ export class RepositoryService {\n       return;\n     }\n \n+    await this.createTeam(this.github, this.getTeamName(course), course.id);\n+\n     const studentRepo = getCustomRepository(StudentRepository);\n     const students = await studentRepo.findActiveByCourseId(this.courseId);\n \n@@ -31,8 +33,8 @@ export class RepositoryService {\n         if (mentorGithubId) {\n           await this.inviteMentor(mentorGithubId, course);\n         }\n-        await this.addTeamToRepository(this.github, course, student.githubId);\n       }\n+      await this.addTeamToRepository(this.github, course, student.githubId);\n       if (record?.repository) {\n         result.push({ repository: record.repository });\n       }\n"", ""diff --git a/ibis/backends/tests/test_export.py b/ibis/backends/tests/test_export.py\nindex 4d536d7..5bb9775 100644\n--- a/ibis/backends/tests/test_export.py\n+++ b/ibis/backends/tests/test_export.py\n@@ -222,18 +222,23 @@ def test_table_to_parquet(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\""), [({\""version\"": \""1.0\""}), ({\""version\"": \""2.6\""})])\n-def test_table_to_parquet_writer_kwargs(kwargs, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.NotSupportedError,\n+)\n+@pytest.mark.parametrize(\""version\"", [\""1.0\"", \""2.6\""])\n+def test_table_to_parquet_writer_kwargs(version, tmp_path, backend, awards_players):\n     outparquet = tmp_path / \""out.parquet\""\n-    awards_players.to_parquet(outparquet, **kwargs)\n+    awards_players.to_parquet(outparquet, version=version)\n \n     df = pd.read_parquet(outparquet)\n \n     backend.assert_frame_equal(awards_players.to_pandas(), df)\n \n-    file = pa.parquet.ParquetFile(outparquet)\n+    md = pa.parquet.read_metadata(outparquet)\n \n-    assert file.metadata.format_version == kwargs[\""version\""]\n+    assert md.format_version == version\n \n \n @pytest.mark.notimpl(\n@@ -316,14 +321,20 @@ def test_table_to_csv(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\"", \""delimiter\""), [({\""write_options\"": pcsv.WriteOptions(delimiter=\"";\"")}, \"";\""), ({\""write_options\"": pcsv.WriteOptions(delimiter=\""\\t\"")}, \""\\t\"")])\n-def test_table_to_csv_writer_kwargs(kwargs, delimiter, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.ProgrammingError,\n+)\n+@pytest.mark.parametrize(\""delimiter\"", [\"";\"", \""\\t\""], ids=[\""semicolon\"", \""tab\""])\n+def test_table_to_csv_writer_kwargs(delimiter, tmp_path, awards_players):\n     outcsv = tmp_path / \""out.csv\""\n     # avoid pandas NaNonense\n     awards_players = awards_players.select(\""playerID\"", \""awardID\"", \""yearID\"", \""lgID\"")\n \n-    awards_players.to_csv(outcsv, **kwargs)\n-    pd.read_csv(outcsv, delimiter=delimiter)\n+    awards_players.to_csv(outcsv, write_options=pcsv.WriteOptions(delimiter=delimiter))\n+    df = pd.read_csv(outcsv, delimiter=delimiter, nrows=1)\n+    assert len(df) == 1\n \n \n @pytest.mark.parametrize(\n"", ""diff --git a/src/components/BottomNavigation.js b/src/components/BottomNavigation.js\nindex 1b72302..7d8ea75 100644\n--- a/src/components/BottomNavigation.js\n+++ b/src/components/BottomNavigation.js\n@@ -24,8 +24,8 @@ const AnimatedPaper = Animated.createAnimatedComponent(Paper);\n \n type Route = {\n   key: string,\n-  title: string,\n-  icon: IconSource,\n+  title?: string,\n+  icon?: IconSource,\n   color?: string,\n };\n \n@@ -51,7 +51,7 @@ type Props<T> = {\n    * - `key`: a unique key to identify the route\n    * - `title`: title of the route to use as the tab label\n    * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n-   * - `color`: color to use as background color for shifting bottom navigation (optional)\n+   * - `color`: color to use as background color for shifting bottom navigation\n    *\n    * Example:\n    *\n@@ -115,11 +115,27 @@ type Props<T> = {\n   /**\n    * Callback which returns a React Element to be used as tab icon.\n    */\n-  renderIcon?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderIcon?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n   /**\n    * Callback which React Element to be used as tab label.\n    */\n-  renderLabel?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderLabel?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n+  /**\n+   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n+   */\n+  getLabelText?: (props: { route: T }) => string,\n+  /**\n+   * Get color for the tab, uses `route.color` by default.\n+   */\n+  getColor?: (props: { route: T }) => string,\n   /**\n    * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n    */\n@@ -159,6 +175,10 @@ type State = {\n    */\n   ripple: Animated.Value,\n   /**\n+   * Animation for the touch feedback, used to determine it's scale and opacity.\n+   */\n+  touch: Animated.Value,\n+  /**\n    * Layout of the tab bar. The width is used to determine the size and position of the ripple.\n    */\n   layout: { height: number, width: number, measured: boolean },\n@@ -173,7 +193,7 @@ const MIN_SHIFT_AMOUNT = 10;\n const MIN_TAB_WIDTH = 96;\n const MAX_TAB_WIDTH = 168;\n const BAR_HEIGHT = 56;\n-const SMALL_RIPPLE_SIZE = 72;\n+const SMALL_RIPPLE_SIZE = 96;\n const ACTIVE_LABEL_SIZE = 14;\n const INACTIVE_LABEL_SIZE = 12;\n \n@@ -251,6 +271,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ),\n       index: new Animated.Value(index),\n       ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n+      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n       layout: { height: 0, width: 0, measured: false },\n       previous: 0,\n     };\n@@ -349,6 +370,15 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n   _handleTabPress = (index: number) => {\n     const { navigationState } = this.props;\n \n+    this.state.touch.setValue(MIN_RIPPLE_SCALE);\n+\n+    Animated.timing(this.state.touch, {\n+      toValue: 1,\n+      duration: 300,\n+      easing: Easing.in(Easing.sin),\n+      useNativeDriver: true,\n+    }).start();\n+\n     if (index !== navigationState.index) {\n       this.props.onIndexChange(index);\n     }\n@@ -376,6 +406,8 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       renderScene,\n       renderIcon,\n       renderLabel,\n+      getLabelText = ({ route }) => route.title,\n+      getColor = ({ route }) => route.color,\n       barStyle,\n       style,\n       theme,\n@@ -400,7 +432,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ? this.state.index.interpolate({\n           inputRange: routes.map((_, i) => i),\n           outputRange: routes.map(\n-            route => route.color || approxBackgroundColor\n+            route => getColor({ route }) || approxBackgroundColor\n           ),\n         })\n       : approxBackgroundColor;\n@@ -416,7 +448,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n           .rgb()\n           .string();\n \n-    const rippleColor = color(textColor)\n+    const touchColor = color(textColor)\n       .alpha(0.12)\n       .rgb()\n       .string();\n@@ -430,22 +462,10 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n \n     // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n     // We need to move it from the left to the active tab and also account for how much that tab has shifted.\n-    const rippleShift =\n-      navigationState.index * tabWidth +\n-      tabWidth / 2 +\n-      this._calculateShift(\n-        this.state.previous,\n-        navigationState.index,\n-        routes.length\n-      );\n \n     return (\n       <View\n-        style={[\n-          styles.container,\n-          { backgroundColor: theme.dark ? white : black },\n-          style,\n-        ]}\n+        style={[styles.container, style]}\n         onLayout={this._handleLayout}\n         pointerEvents={layout.measured ? 'auto' : 'none'}\n       >\n@@ -485,25 +505,30 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n             style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n           >\n             {shifting ? (\n-              // Large ripple with the backround color\n               <Animated.View\n                 pointerEvents=\""none\""\n                 style={[\n                   styles.ripple,\n                   {\n                     // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - layout.width / 2,\n-                    left: rippleShift - layout.width / 2,\n-                    height: layout.width,\n-                    width: layout.width,\n+                    top: BAR_HEIGHT / 2 - layout.width / 8,\n+                    left:\n+                      navigationState.index * tabWidth +\n+                      tabWidth / 2 -\n+                      layout.width / 8,\n+                    height: layout.width / 4,\n+                    width: layout.width / 4,\n                     borderRadius: layout.width / 2,\n-                    backgroundColor: routes[navigationState.index].color,\n+                    backgroundColor: getColor({\n+                      route: routes[navigationState.index],\n+                    }),\n                     transform: [\n+                      { translateX: this.state.shifts[navigationState.index] },\n                       {\n                         // Scale to twice the size  to ensure it covers the whole tab bar\n                         scale: this.state.ripple.interpolate({\n                           inputRange: [0, 1],\n-                          outputRange: [0, 2],\n+                          outputRange: [0, 8],\n                         }),\n                       },\n                     ],\n@@ -515,36 +540,36 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                 ]}\n               />\n             ) : null}\n-            {shifting ? (\n-              // Small subtle ripple on touch\n-              <Animated.View\n-                pointerEvents=\""none\""\n-                style={[\n-                  styles.ripple,\n-                  {\n-                    // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n-                    left: rippleShift - SMALL_RIPPLE_SIZE / 2,\n-                    height: SMALL_RIPPLE_SIZE,\n-                    width: SMALL_RIPPLE_SIZE,\n-                    borderRadius: SMALL_RIPPLE_SIZE / 2,\n-                    backgroundColor: rippleColor,\n-                    transform: [\n-                      {\n-                        scale: this.state.ripple.interpolate({\n-                          inputRange: [0, 0.5, 1],\n-                          outputRange: [0, 1, 1],\n-                        }),\n-                      },\n-                    ],\n-                    opacity: this.state.ripple.interpolate({\n-                      inputRange: [0, MIN_RIPPLE_SCALE, 0.25, 0.5],\n-                      outputRange: [0, 0, 1, 0],\n-                    }),\n-                  },\n-                ]}\n-              />\n-            ) : null}\n+            <Animated.View\n+              pointerEvents=\""none\""\n+              style={[\n+                styles.ripple,\n+                {\n+                  // Set top and left values so that the ripple's center is same as the tab's center\n+                  top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n+                  left:\n+                    navigationState.index * tabWidth +\n+                    tabWidth / 2 -\n+                    SMALL_RIPPLE_SIZE / 2,\n+                  height: SMALL_RIPPLE_SIZE,\n+                  width: SMALL_RIPPLE_SIZE,\n+                  borderRadius: SMALL_RIPPLE_SIZE / 2,\n+                  backgroundColor: touchColor,\n+                  transform: [\n+                    {\n+                      translateX: shifting\n+                        ? this.state.shifts[navigationState.index]\n+                        : 0,\n+                    },\n+                    { scale: this.state.touch },\n+                  ],\n+                  opacity: this.state.touch.interpolate({\n+                    inputRange: [0, 0.5, 1],\n+                    outputRange: [0, 1, 0],\n+                  }),\n+                },\n+              ]}\n+            />\n             {routes.map((route, index) => {\n               const shift = this.state.shifts[index];\n               const focused = this.state.tabs[index];\n@@ -607,7 +632,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderIcon ? (\n-                          renderIcon({ route, focused: true })\n+                          renderIcon({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <Icon\n                             style={styles.icon}\n@@ -625,7 +654,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderIcon ? (\n-                            renderIcon({ route, focused: false })\n+                            renderIcon({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <Icon\n                               style={styles.icon}\n@@ -652,7 +685,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderLabel ? (\n-                          renderLabel({ route, focused: true })\n+                          renderLabel({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <AnimatedText\n                             style={[\n@@ -662,7 +699,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                               },\n                             ]}\n                           >\n-                            {route.title}\n+                            {getLabelText({ route })}\n                           </AnimatedText>\n                         )}\n                       </Animated.View>\n@@ -674,7 +711,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderLabel ? (\n-                            renderLabel({ route, focused: false })\n+                            renderLabel({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <AnimatedText\n                               style={[\n@@ -684,7 +725,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                                 },\n                               ]}\n                             >\n-                              {route.title}\n+                              {getLabelText({ route })}\n                             </AnimatedText>\n                           )}\n                         </Animated.View>\n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/scripts/build.mjs b/scripts/build.mjs\nindex 204854f..b3cf067 100644\n--- a/scripts/build.mjs\n+++ b/scripts/build.mjs\n@@ -3,8 +3,8 @@ import { write } from 'fsxx';\n import { info, success } from './helpers.mjs';\n \n await $`rm -rf dist/*`;\n-await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n await $`unbuild`;\n+await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n \n const packages = [\n   'jsx-runtime',\n""]",5,"[""87d5d4e55ab7149b593d29410f1fe426ba2447d4"", ""bedc7950b24c37809e36a585b7985d5aa5e3e458"", ""ded26d768ff432ad3bde3c0aa1e95ce50726100a"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""c323d59c607cabc91f17a78528d998f376f30b10""]","[""fix"", ""test"", ""feat"", ""docs"", ""build""]"
"add tests,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909,enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>,assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,use `regexp_instr != 0` instead of `REGEXP` keyword","[""diff --git a/Cargo.lock b/Cargo.lock\nindex 84d5d07..6ad05da 100644\n--- a/Cargo.lock\n+++ b/Cargo.lock\n@@ -293,6 +293,7 @@ version = \""0.1.0\""\n dependencies = [\n  \""git-cliff-core\"",\n  \""log\"",\n+ \""pretty_assertions\"",\n  \""pretty_env_logger\"",\n  \""structopt\"",\n ]\ndiff --git a/git-cliff-core/src/lib.rs b/git-cliff-core/src/lib.rs\nindex 3b18ba0..a560c94 100644\n--- a/git-cliff-core/src/lib.rs\n+++ b/git-cliff-core/src/lib.rs\n@@ -1,6 +1,8 @@\n //! Highly customizable Changelog Generator\n #![warn(missing_docs, clippy::unwrap_used)]\n \n+/// Export regex crate.\n+pub use regex;\n /// Git commit.\n pub mod commit;\n /// Config file parser.\ndiff --git a/git-cliff/Cargo.toml b/git-cliff/Cargo.toml\nindex 41eb2e9..cc64b37 100644\n--- a/git-cliff/Cargo.toml\n+++ b/git-cliff/Cargo.toml\n@@ -20,3 +20,6 @@ log = \""0.4.14\""\n version = \""0.3\""\n default-features = false\n features = [\""suggestions\"", \""color\"", \""wrap_help\""]\n+\n+[dev-dependencies]\n+pretty_assertions = \""0.7\""\ndiff --git a/git-cliff/src/changelog.rs b/git-cliff/src/changelog.rs\nindex 3f9e994..23ea186 100644\n--- a/git-cliff/src/changelog.rs\n+++ b/git-cliff/src/changelog.rs\n@@ -115,3 +115,171 @@ impl<'a> Changelog<'a> {\n \t\tOk(())\n \t}\n }\n+\n+#[cfg(test)]\n+mod test {\n+\tuse super::*;\n+\tuse git_cliff_core::config::{\n+\t\tChangelogConfig,\n+\t\tCommitParser,\n+\t\tGitConfig,\n+\t};\n+\tuse git_cliff_core::regex::Regex;\n+\tuse pretty_assertions::assert_eq;\n+\tuse std::str;\n+\t#[test]\n+\tfn changelog_generator() -> Result<()> {\n+\t\tlet config = Config {\n+\t\t\tchangelog: ChangelogConfig {\n+\t\t\t\theader: Some(String::from(\""# Changelog\"")),\n+\t\t\t\tbody:   String::from(\n+\t\t\t\t\tr#\""{% if version %}\n+\t\t\t\t## Release [{{ version }}] - {{ timestamp | date(format=\""%Y-%m-%d\"") }}\n+\t\t\t\t({{ commit_id }}){% else %}\n+\t\t\t\t## Unreleased{% endif %}\n+\t\t\t\t{% for group, commits in commits | group_by(attribute=\""group\"") %}\n+\t\t\t\t### {{ group }}{% for group, commits in commits | group_by(attribute=\""scope\"") %}\n+\t\t\t\t#### {{ group }}{% for commit in commits %}\n+\t\t\t\t- {{ commit.message }}{% endfor %}\n+\t\t\t\t{% endfor %}{% endfor %}\""#,\n+\t\t\t\t)\n+\t\t\t\t.replace(\""\t\t\t\t\"", \""\""),\n+\t\t\t\tfooter: Some(String::from(\""------------\"")),\n+\t\t\t},\n+\t\t\tgit:       GitConfig {\n+\t\t\t\tconventional_commits: true,\n+\t\t\t\tcommit_parsers:       Some(vec![\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""feat*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""New features\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""fix*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Bug Fixes\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\"".*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Other\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t]),\n+\t\t\t\tfilter_commits:       Some(false),\n+\t\t\t\ttag_pattern:          String::new(),\n+\t\t\t\tskip_tags:            Regex::new(\""v3.*\"").ok(),\n+\t\t\t},\n+\t\t};\n+\t\tlet test_release = Release {\n+\t\t\tversion:   Some(String::from(\""v1.0.0\"")),\n+\t\t\tcommits:   vec![\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0bc123\""),\n+\t\t\t\t\tString::from(\""feat(app): add cool features\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0werty\""),\n+\t\t\t\t\tString::from(\""style(ui): make good stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0w3rty\""),\n+\t\t\t\t\tString::from(\""fix(ui): fix more stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0jkl12\""),\n+\t\t\t\t\tString::from(\""chore(app): do nothing\""),\n+\t\t\t\t),\n+\t\t\t],\n+\t\t\tcommit_id: Some(String::from(\""0bc123\"")),\n+\t\t\ttimestamp: 50000000,\n+\t\t\tprevious:  None,\n+\t\t};\n+\t\tlet releases = vec![\n+\t\t\ttest_release.clone(),\n+\t\t\tRelease {\n+\t\t\t\tversion: Some(String::from(\""v3.0.0\"")),\n+\t\t\t\tcommits: vec![Commit::new(\n+\t\t\t\t\tString::from(\""n0thin\""),\n+\t\t\t\t\tString::from(\""feat(xyz): skip commit\""),\n+\t\t\t\t)],\n+\t\t\t\t..Release::default()\n+\t\t\t},\n+\t\t\tRelease {\n+\t\t\t\tversion:   None,\n+\t\t\t\tcommits:   vec![\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc123\""),\n+\t\t\t\t\t\tString::from(\""feat(app): add xyz\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc124\""),\n+\t\t\t\t\t\tString::from(\""docs(app): document zyx\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(String::from(\""def789\""), String::from(\""merge #4\"")),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""qwerty\""),\n+\t\t\t\t\t\tString::from(\""fix(app): fix abc\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""hjkl12\""),\n+\t\t\t\t\t\tString::from(\""chore(ui): do boring stuff\""),\n+\t\t\t\t\t),\n+\t\t\t\t],\n+\t\t\t\tcommit_id: None,\n+\t\t\t\ttimestamp: 1000,\n+\t\t\t\tprevious:  Some(Box::new(test_release)),\n+\t\t\t},\n+\t\t];\n+\t\tlet changelog = Changelog::new(releases, &config)?;\n+\t\tlet mut out = Vec::new();\n+\t\tchangelog.generate(&mut out)?;\n+\t\tassert_eq!(\n+\t\t\tString::from(\n+\t\t\t\tr#\""# Changelog\n+\n+\t\t\t## Unreleased\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### app\n+\t\t\t- fix abc\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add xyz\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- document zyx\n+\n+\t\t\t#### ui\n+\t\t\t- do boring stuff\n+\n+\t\t\t## Release [v1.0.0] - 1971-08-02\n+\t\t\t(0bc123)\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### ui\n+\t\t\t- fix more stuff\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add cool features\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- do nothing\n+\n+\t\t\t#### ui\n+\t\t\t- make good stuff\n+\t\t\t------------\n+\t\t\t\""#\n+\t\t\t)\n+\t\t\t.replace(\""\t\t\t\"", \""\""),\n+\t\t\tstr::from_utf8(&out).unwrap()\n+\t\t);\n+\t\tOk(())\n+\t}\n+}\n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n"", ""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n"", ""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n"", ""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n""]",5,"[""8ee0611fbf0cd89abe7ae588f22e6ecb843598ea"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119"", ""fd8e563cc19ca4684885d4692acee6bebcca4ada"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3"", ""06e2be4e2019b6fa714e1fcb34485860ef1ede79""]","[""test"", ""docs"", ""feat"", ""build"", ""fix""]"
"licensing,add numberOfLines prop to DataTableTitle (#863)

Closes #848,assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,export a modal transition preset,verify checkpoint listeners are notified","[""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/src/components/DataTable/DataTableTitle.js b/src/components/DataTable/DataTableTitle.js\nindex bfcf07e..d764fd5 100644\n--- a/src/components/DataTable/DataTableTitle.js\n+++ b/src/components/DataTable/DataTableTitle.js\n@@ -27,6 +27,10 @@ type Props = React.ElementConfig<typeof TouchableWithoutFeedback> & {|\n    */\n   sortDirection?: 'ascending' | 'descending',\n   /**\n+   * The number of lines to show.\n+   */\n+  numberOfLines?: number,\n+  /**\n    * Function to execute on press.\n    */\n   onPress?: () => mixed,\n@@ -44,6 +48,10 @@ type State = {\n class DataTableTitle extends React.Component<Props, State> {\n   static displayName = 'DataTable.Title';\n \n+  static defaultProps = {\n+    numberOfLines: 1,\n+  };\n+\n   state = {\n     spinAnim: new Animated.Value(\n       this.props.sortDirection === 'ascending' ? 0 : 1\n@@ -70,6 +78,7 @@ class DataTableTitle extends React.Component<Props, State> {\n       sortDirection,\n       theme,\n       style,\n+      numberOfLines,\n       ...rest\n     } = this.props;\n \n@@ -99,7 +108,7 @@ class DataTableTitle extends React.Component<Props, State> {\n               styles.cell,\n               sortDirection ? styles.sorted : { color: textColor },\n             ]}\n-            numberOfLines={1}\n+            numberOfLines={numberOfLines}\n           >\n             {children}\n           </Text>\n"", ""diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh\nindex 4a484f2..f9f8f9f 100644\n--- a/scripts/helmcharts/build_deploy.sh\n+++ b/scripts/helmcharts/build_deploy.sh\n@@ -24,7 +24,7 @@ echo $DOCKER_REPO\n     docker login $DOCKER_REPO\n     cd ../../backend\n     bash build.sh $@\n-    cd ../../assist-stats/\n+    cd ../assist-stats/\n     bash build.sh $@\n     cd ../assist\n     bash build.sh $@\ndiff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh\nindex 47ada0c..cb4e3f4 100644\n--- a/scripts/helmcharts/build_deploy_parallel.sh\n+++ b/scripts/helmcharts/build_deploy_parallel.sh\n@@ -15,7 +15,7 @@ export PUSH_IMAGE=1\n export AWS_DEFAULT_REGION=\""eu-central-1\""\n export SIGN_KEY=\""awskms:///alias/openreplay-container-sign\""\n echo $DOCKER_REPO\n-[[ -z DOCKER_REPO ]] && {\n+[[ -z $DOCKER_REPO ]] && {\n     echo Set DOCKER_REPO=\""your docker registry\""\n     exit 1\n } || {\n@@ -30,7 +30,8 @@ echo $DOCKER_REPO\n     tmux split-window \""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux split-window \""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \\\n       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \\\n-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@\""\n+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \\\n+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@\""\n     tmux select-layout tiled\n \n }\n"", ""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n"", ""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n""]",5,"[""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""f9a094918b62534614c47aa8a13f33aec751a1e0"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3"", ""535708ae50aecb452560a23356fd396f99ef13a2"", ""e0198f74b81da3663144cfe1d971939319f82a0f""]","[""docs"", ""feat"", ""build"", ""refactor"", ""test""]"
"print errors without stacktrace,add hardware back button

Closes #5071,skip flaky test,make it mode less,fix netty dependency

netty-bom 4.1.70 contains the changes from pull request
https://github.com/netty/netty/pull/11798, which moved the classes out
of the native modules to make sure the same classes don't end up on the
classpath multiple times. For us it means that we need to depend on both
the native and classes modules. However, since we don't use the native
module directly (only classes that were moved to this classes module),
we need to force the dependency plugin to consider the native module as
used.","[""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/ionic/components/app/app.ts b/ionic/components/app/app.ts\nindex 04d8c57..08aab92 100644\n--- a/ionic/components/app/app.ts\n+++ b/ionic/components/app/app.ts\n@@ -3,8 +3,7 @@ import {Title} from 'angular2/platform/browser';\n \n import {Config} from '../../config/config';\n import {ClickBlock} from '../../util/click-block';\n-import {Nav} from '../nav/nav';\n-import {Tabs} from '../tabs/tabs';\n+import {Platform} from '../../platform/platform';\n \n \n /**\n@@ -23,8 +22,20 @@ export class IonicApp {\n \n   constructor(\n     private _config: Config,\n-    private _clickBlock: ClickBlock\n-  ) {}\n+    private _clickBlock: ClickBlock,\n+    platform: Platform\n+  ) {\n+    platform.backButton.subscribe(() => {\n+      let activeNav = this.getActiveNav();\n+      if (activeNav) {\n+        if (activeNav.length() === 1) {\n+          platform.exitApp();\n+        } else {\n+          activeNav.pop();\n+        }\n+      }\n+    });\n+  }\n \n   /**\n    * Sets the document title.\n@@ -102,7 +113,7 @@ export class IonicApp {\n   /**\n    * @private\n    */\n-  getActiveNav(): Nav | Tabs {\n+  getActiveNav(): any {\n     var nav = this._rootNav || null;\n     var activeChildNav;\n \n"", ""diff --git a/test/browser-pool/browser-pool.test.ts b/test/browser-pool/browser-pool.test.ts\nindex 9f21322..7a011b5 100644\n--- a/test/browser-pool/browser-pool.test.ts\n+++ b/test/browser-pool/browser-pool.test.ts\n@@ -128,7 +128,8 @@ describe.each([\n             expect(page.close).toBeDefined();\n         });\n \n-        test('should allow early aborting in case of outer timeout', async () => {\n+        // TODO: this test is very flaky in the CI\n+        test.skip('should allow early aborting in case of outer timeout', async () => {\n             const timeout = browserPool.operationTimeoutMillis;\n             browserPool.operationTimeoutMillis = 500;\n             // @ts-expect-error mocking private method\n"", ""diff --git a/core/src/components/slides/slides.tsx b/core/src/components/slides/slides.tsx\nindex 48fd53f..d5c2f75 100644\n--- a/core/src/components/slides/slides.tsx\n+++ b/core/src/components/slides/slides.tsx\n@@ -1,7 +1,6 @@\n import { Component, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n \n import { Mode } from '../../interface.js';\n-import { createThemedClasses } from '../../utils/theme.js';\n \n import { Swiper } from './vendor/swiper.js';\n \n@@ -15,6 +14,7 @@ import { Swiper } from './vendor/swiper.js';\n   shadow: true\n })\n export class Slides {\n+\n   private container!: HTMLElement;\n   private swiper: any;\n \n@@ -391,12 +391,6 @@ export class Slides {\n     return { ...swiperOptions, ...this.options, ...eventOptions };\n   }\n \n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'slides')\n-    };\n-  }\n-\n   render() {\n     return (\n       <div class=\""swiper-container\"" ref={el => this.container = el as HTMLElement }>\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.scss b/core/src/components/thumbnail/thumbnail.ios.scss\ndeleted file mode 100644\nindex e3add45..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.ios.vars\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-ios-width};\n-  --border-radius: #{$thumbnail-ios-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.vars.scss b/core/src/components/thumbnail/thumbnail.ios.vars.scss\ndeleted file mode 100644\nindex 85d53e5..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.ios\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-ios-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-ios-height:                  $thumbnail-ios-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-ios-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.md.scss b/core/src/components/thumbnail/thumbnail.md.scss\ndeleted file mode 100644\nindex 0fbb2ca..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.md.vars\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-md-width};\n-  --border-radius: #{$thumbnail-md-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.md.vars.scss b/core/src/components/thumbnail/thumbnail.md.vars.scss\ndeleted file mode 100644\nindex 94e48b2..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.md\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-md-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-md-height:                  $thumbnail-md-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-md-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.scss b/core/src/components/thumbnail/thumbnail.scss\nindex 8ac3a22..8af268d 100644\n--- a/core/src/components/thumbnail/thumbnail.scss\n+++ b/core/src/components/thumbnail/thumbnail.scss\n@@ -9,6 +9,8 @@\n    * @prop --border-radius: Border radius of the thumbnail\n    * @prop --size: Size of the thumbnail\n    */\n+  --size: 48px;\n+  --border-radius: 0;\n \n   @include border-radius(var(--border-radius));\n \ndiff --git a/core/src/components/thumbnail/thumbnail.tsx b/core/src/components/thumbnail/thumbnail.tsx\nindex 50ff2c2..de76593 100644\n--- a/core/src/components/thumbnail/thumbnail.tsx\n+++ b/core/src/components/thumbnail/thumbnail.tsx\n@@ -1,25 +1,11 @@\n import { Component } from '@stencil/core';\n \n-import { Mode } from '../../interface';\n-import { createThemedClasses } from '../../utils/theme';\n-\n @Component({\n   tag: 'ion-thumbnail',\n-  styleUrls: {\n-    ios: 'thumbnail.ios.scss',\n-    md: 'thumbnail.md.scss'\n-  },\n+  styleUrl: 'thumbnail.scss',\n   shadow: true\n })\n export class Thumbnail {\n-  mode!: Mode;\n-\n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'thumbnail')\n-    };\n-  }\n-\n   render() {\n     return <slot></slot>;\n   }\n"", ""diff --git a/atomix/cluster/pom.xml b/atomix/cluster/pom.xml\nindex a477873..b6db695 100644\n--- a/atomix/cluster/pom.xml\n+++ b/atomix/cluster/pom.xml\n@@ -69,6 +69,10 @@\n     </dependency>\n     <dependency>\n       <groupId>io.netty</groupId>\n+      <artifactId>netty-transport-classes-epoll</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.netty</groupId>\n       <artifactId>netty-transport-native-epoll</artifactId>\n       <classifier>linux-x86_64</classifier>\n     </dependency>\n@@ -278,6 +282,7 @@\n             <dependency>uk.co.real-logic:sbe-tool</dependency>\n             <dependency>net.jqwik:jqwik</dependency>\n             <dependency>io.netty:netty-tcnative-boringssl-static</dependency>\n+            <dependency>io.netty:netty-transport-native-epoll</dependency>\n           </usedDependencies>\n         </configuration>\n       </plugin>\n""]",5,"[""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""68278b00450f2679761a2999500f6d87a579376b"", ""e2e8ad25854bd1e7cdbc7f50b50bbd99e04ad47d"", ""771857b1df9470ebc15357e8879118a72c649d5b"", ""f00a4d3e307b89842250358ee432e6800bb24362""]","[""fix"", ""feat"", ""test"", ""refactor"", ""build""]"
"update flushed index before truncating,docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>,convert `run_tag_values_test_case` to a function,fixed docker link tests,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>","[""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n"", ""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n""]",5,"[""933ab6bb86372913c992567cf9660009900911a7"", ""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf"", ""1db13ec43727aca872a0f3836e4023ed85db665e"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f"", ""e12d9e77a6fd531a22325337838a841b1c67f00d""]","[""fix"", ""build"", ""refactor"", ""test"", ""docs""]"
"use `regexp_instr != 0` instead of `REGEXP` keyword,run pyspark tests in parallel,better layout for block and segment,fix build ordering,add numberOfLines prop to DataTableTitle (#863)

Closes #848","[""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex e23088e..9708157 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -202,11 +202,11 @@ jobs:\n         run: poetry install --without dev --without docs --extras ${{ matrix.backend.name }} --extras geospatial\n \n       - name: \""run parallel tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name != 'pyspark' && matrix.backend.name != 'impala'\n+        if: matrix.backend.name != 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }} --numprocesses auto --dist=loadgroup\n \n       - name: \""run serial tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name == 'pyspark' || matrix.backend.name == 'impala'\n+        if: matrix.backend.name == 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }}\n         env:\n           IBIS_TEST_NN_HOST: localhost\n"", ""diff --git a/docs/docs/config-block.md b/docs/docs/config-block.md\nnew file mode 100644\nindex 0000000..df1ee54\n--- /dev/null\n+++ b/docs/docs/config-block.md\n@@ -0,0 +1,60 @@\n+---\n+id: config-block\n+title: Block\n+sidebar_label: Block\n+---\n+\n+Let's take a closer look at what defines a block.\n+\n+```json\n+{\n+  \""$schema\"": \""https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json\"",\n+  ...\n+  \""blocks\"": [\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""left\"",\n+      \""segments\"": [\n+        ...\n+      ]\n+    }\n+  ]\n+}\n+```\n+\n+- type: `prompt` | `rprompt`\n+- newline: `boolean`\n+- alignment: `left` | `right`\n+- vertical_offset: `int`\n+- horizontal_offset: `int`\n+- segments: `array` of one or more `segments`\n+\n+### Type\n+\n+Tells the engine what to do with the block. There are three options:\n+\n+- `prompt` renders one or more segments\n+- `rprompt` renders one or more segments aligned to the right of the cursor. Only one `rprompt` block is permitted.\n+Supported on [ZSH][rprompt], Bash and Powershell.\n+\n+### Newline\n+\n+Start the block on a new line. Defaults to `false`.\n+\n+### Alignment\n+\n+Tell the engine if the block should be left or right-aligned.\n+\n+### Vertical offset\n+\n+Move the block up or down x lines. For example, `vertical_offset: 1` moves the prompt down one line, `vertical_offset: -1`\n+moves it up one line.\n+\n+### Horizontal offset\n+\n+Moves the segment to the left or the right to have it exactly where you want it to be. Works like `vertical_offset`\n+but on a horizontal level where a negative number moves the block left and a positive number right.\n+\n+### Segments\n+\n+Array of one or more segments.\ndiff --git a/docs/docs/config-example.md b/docs/docs/config-example.md\nnew file mode 100644\nindex 0000000..c180c4f\n--- /dev/null\n+++ b/docs/docs/config-example.md\n@@ -0,0 +1,96 @@\n+---\n+id: config-sample\n+title: Sample\n+sidebar_label: Sample\n+---\n+\n+```json\n+{\n+  \""final_space\"": true,\n+  \""blocks\"": [\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""right\"",\n+      \""vertical_offset\"": -1,\n+      \""segments\"": [\n+        {\n+          \""type\"": \""time\"",\n+          \""style\"": \""plain\"",\n+          \""foreground\"": \""#007ACC\"",\n+          \""properties\"": {\n+            \""time_format\"": \""15:04:05\""\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \""type\"": \""prompt\"",\n+      \""alignment\"": \""left\"",\n+      \""newline\"": true,\n+      \""segments\"": [\n+        {\n+          \""type\"": \""session\"",\n+          \""style\"": \""diamond\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#ffb300\"",\n+          \""leading_diamond\"": \""\\uE0B6\"",\n+          \""trailing_diamond\"": \""\\uE0B0\"",\n+          \""properties\"": {\n+            \""postfix\"": \"" \""\n+          }\n+        },\n+        {\n+          \""type\"": \""path\"",\n+          \""style\"": \""powerline\"",\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#61AFEF\"",\n+          \""properties\"": {\n+            \""prefix\"": \"" \\uE5FF \"",\n+            \""style\"": \""folder\"",\n+            \""exclude_folders\"": [\n+              \""/super/secret/project\""\n+            ],\n+            \""enable_hyperlink\"": false\n+          }\n+        },\n+        {\n+          \""type\"": \""git\"",\n+          \""style\"": \""powerline\"",\n+          \""foreground\"": \""#193549\"",\n+          \""foreground_templates\"": [\n+            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#ffffff{{ end }}\""\n+          ],\n+          \""background\"": \""#2e9599\"",\n+          \""background_templates\"": [\n+            \""{{ if or (.Working.Changed) (.Staging.Changed) }}#f36943{{ end }}\"",\n+            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#a8216b{{ end }}\"",\n+            \""{{ if gt .Ahead 0 }}#35b5ff{{ end }}\"",\n+            \""{{ if gt .Behind 0 }}#f89cfa{{ end }}\""\n+          ],\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""properties\"": {\n+            \""fetch_status\"": true,\n+            \""branch_max_length\"": 25,\n+            \""template\"": \""{{ .HEAD }}{{ .BranchStatus }}\""\n+          }\n+        },\n+        {\n+          \""type\"": \""exit\"",\n+          \""style\"": \""diamond\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#00897b\"",\n+          \""background_templates\"": [\""{{ if gt .Code 0 }}#e91e63{{ end }}\""],\n+          \""leading_diamond\"": \""\"",\n+          \""trailing_diamond\"": \""\\uE0B4\"",\n+          \""properties\"": {\n+            \""always_enabled\"": true,\n+            \""template\"": \""\\uE23A\"",\n+            \""prefix\"": \""<parentBackground>\\uE0B0</> \""\n+          }\n+        }\n+      ]\n+    }\n+  ]\n+}\n+```\ndiff --git a/docs/docs/config-overview.md b/docs/docs/config-overview.md\nindex 1fdbcba..b554869 100644\n--- a/docs/docs/config-overview.md\n+++ b/docs/docs/config-overview.md\n@@ -1,7 +1,7 @@\n ---\n id: config-overview\n-title: Overview\n-sidebar_label: Overview\n+title: General\n+sidebar_label: General\n ---\n \n Oh My Posh renders your prompt based on the definition of _blocks_ (like Lego) which contain one or more _segments_.\n@@ -64,332 +64,7 @@ boxes with question marks, set up your terminal to use a [supported font][font] \n - terminal_background: `string` [color][colors] - terminal background color, set to your terminal's background color when\n you notice black elements in Windows Terminal or the Visual Studio Code integrated terminal\n \n-## Block\n-\n-Let's take a closer look at what defines a block.\n-\n-- type: `prompt` | `rprompt`\n-- newline: `boolean`\n-- alignment: `left` | `right`\n-- vertical_offset: `int`\n-- horizontal_offset: `int`\n-- segments: `array` of one or more `segments`\n-\n-### Type\n-\n-Tells the engine what to do with the block. There are three options:\n-\n-- `prompt` renders one or more segments\n-- `rprompt` renders one or more segments aligned to the right of the cursor. Only one `rprompt` block is permitted.\n-Supported on [ZSH][rprompt], Bash and Powershell.\n-\n-### Newline\n-\n-Start the block on a new line. Defaults to `false`.\n-\n-### Alignment\n-\n-Tell the engine if the block should be left or right-aligned.\n-\n-### Vertical offset\n-\n-Move the block up or down x lines. For example, `vertical_offset: 1` moves the prompt down one line, `vertical_offset: -1`\n-moves it up one line.\n-\n-### Horizontal offset\n-\n-Moves the segment to the left or the right to have it exactly where you want it to be. Works like `vertical_offset`\n-but on a horizontal level where a negative number moves the block left and a positive number right.\n-\n-### Segments\n-\n-Array of one or more segments.\n-\n-## Segment\n-\n-A segment is a part of the prompt with a certain context. There are different types available out-of-the-box, if you're\n-looking for what's included, feel free to skip this part and browse through the [segments][segments]. Keep reading to\n-understand how to configure a segment.\n-\n-- type: `string` any of the included [segments][segments]\n-- style: `powerline` | `plain` | `diamond`\n-- powerline_symbol: `string`\n-- invert_powerline: `boolean`\n-- leading_diamond: `string`\n-- trailing_diamond: `string`\n-- foreground: `string` [color][colors]\n-- foreground_templates: `array` of `string` values\n-- background: `string` [color][colors]\n-- background_templates: `array` of `string` values\n-- properties: `array` of `Property`: `string`\n-\n-### Type\n-\n-Takes the `string` value referencing which segment logic it needs to run (see [segments][segments] for possible values).\n-\n-### Style\n-\n-Oh Hi! You made it to a really interesting part, great! Style defines how a prompt is rendered. Looking at the most prompt\n-themes out there, we identified 3 types. All of these require a different configuration and depending on the look\n-you want to achieve you might need to understand/use them all.\n-\n-#### Powerline\n-\n-What started it all for us. Makes use of a single symbol (`powerline_symbol`) to separate the segments. It takes the\n-background color of the previous segment (or transparent if none) and the foreground of the current one (or transparent\n-if we're at the last segment). Expects segments to have a colored background, else there little use for this one.\n-\n-#### Plain\n-\n-Simple. Colored text on a transparent background. Make sure to set `foreground` for maximum enjoyment.\n-Segments will be separated by empty spaces unless you specify `''` for the `prefix` and `postfix` settings for the segment.\n-\n-#### Diamond\n-\n-While Powerline works great with a single symbol, sometimes you want a segment to have a different start and end symbol.\n-Just like a diamond: `< my segment text >`. The difference between this and plain is that the diamond symbols take the\n-segment background as their foreground color.\n-\n-### Powerline symbol\n-\n-Text character to use when `\""style\"": \""powerline\""`.\n-\n-### Invert Powerline\n-\n-If `true` this swaps the foreground and background colors. Can be useful when the character you want does not exist\n-in the perfectly mirrored variant for example.\n-\n-### Leading diamond\n-\n-Text character to use at the start of the segment. Will take the background color of the segment as\n-its foreground color.\n-\n-### Trailing diamond\n-\n-Text character to use at the end of the segment. Will take the background color of the segment as its foreground color.\n-\n-### Foreground\n-\n-[Color][colors] to use as the segment text foreground color. Also supports transparency using the `transparent` keyword.\n-\n-### Foreground Templates\n-\n-Array if string templates to define the foreground color for the given Segment based on the Segment's Template Properties.\n-Under the hood this uses go's [text/template][go-text-template] feature extended with [sprig][sprig] and\n-offers a few standard properties to work with. For supported Segments, look for the **Template Properties** section in\n-the documentation.\n-\n-The following sample is based on the [AWS Segment][aws].\n-\n-```json\n-{\n-  \""type\"": \""aws\"",\n-  \""style\"": \""powerline\"",\n-  \""powerline_symbol\"": \""\\uE0B0\"",\n-  \""foreground\"": \""#ffffff\"",\n-  \""background\"": \""#111111\"",\n-  \""foreground_templates\"": [\n-    \""{{if contains \\\""default\\\"" .Profile}}#FFA400{{end}}\"",\n-    \""{{if contains \\\""jan\\\"" .Profile}}#f1184c{{end}}\""\n-  ],\n-  \""properties\"": {\n-    \""prefix\"": \"" \\uE7AD \""\n-  }\n-}\n-```\n-\n-The logic is as follows: when `background_templates` contains an array, we will check every template line until there's\n-one that returns a non-empty string. So, when the contents of `.Profile` contain the word `default`, the first template\n-returns `#FFA400` and that's the color that will be used. If it contains `jan`, it returns `#f1184c`. When none of the\n-templates returns a value, the foreground value `#ffffff` is used.\n-\n-### Background\n-\n-[Color][colors] to use as the segment text background color. Also supports transparency using the `transparent` keyword.\n-\n-### Background Templates\n-\n-Same as [Foreground Templates][fg-templ] but for the background color.\n-\n-### Properties\n-\n-An array of **Properties** with a value. This is used inside of the segment logic to tweak what the output of the segment\n-will be. Segments have the ability to define their own Properties, but there are some general ones being used by the\n-engine which allow you to customize the output even more.\n-\n-#### General-purpose properties\n-\n-You can use these on any segment, the engine is responsible for adding them correctly.\n-\n-- prefix: `string`\n-- postfix: `string`\n-- include_folders: `[]string`\n-- exclude_folders: `[]string`\n-\n-##### Prefix\n-\n-The string content will be put in front of the segment's output text. Useful for symbols, text or other customizations.\n-If this is not set, it will be an empty space in `plain` mode. If you want to remove the space before the segment,\n-specify this as `''`.\n-\n-##### Postfix\n-\n-The string content will be put after the segment's output text. Useful for symbols, text or other customizations.\n-If this is not set, it will default to an empty space in `plain` mode. If you want to remove the space after the segment,\n-specify this as `''`.\n-\n-##### Include / Exclude Folders\n-\n-Sometimes you might want to have a segment only rendered in certain folders. If `include_folders` is specified,\n-the segment will only be rendered when in one of those locations. If `exclude_folders` is specified, the segment\n-will not be rendered when in one of the excluded locations.\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects\""\n-]\n-```\n-\n-```json\n-\""exclude_folders\"": [\n-  \""/Users/posh/Projects\""\n-]\n-```\n-\n-The strings specified in these properties are evaluated as [regular expressions][regex]. You\n-can use any valid regular expression construct, but the regular expression must match the entire directory\n-name. The following will match `/Users/posh/Projects/Foo` but not `/home/Users/posh/Projects/Foo`.\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects.*\""\n-]\n-```\n-\n-You can also combine these properties:\n-\n-```json\n-\""include_folders\"": [\n-  \""/Users/posh/Projects.*\""\n-],\n-\""exclude_folders\"": [\n-  \""/Users/posh/Projects/secret-project.*\""\n-]\n-```\n-\n-##### Notes\n-\n-- Oh My Posh will accept both `/` and `\\` as path separators for a folder and will match regardless of which\n-is used by the current operating system.\n-- Because the strings are evaluated as regular expressions, if you want to use a `\\` in a Windows\n-directory name, you need to specify it as `\\\\\\\\`.\n-- The character `~` at the start of a specified folder will match the user's home directory.\n-- The comparison is case-insensitive on Windows and macOS, but case-sensitive on other operating systems.\n-\n-This means that for user Bill, who has a user account `Bill` on Windows and `bill` on Linux,  `~/Foo` might match\n-`C:\\Users\\Bill\\Foo` or `C:\\Users\\Bill\\foo` on Windows but only `/home/bill/Foo` on Linux.\n-\n-## Full Sample\n-\n-```json\n-{\n-  \""final_space\"": true,\n-  \""blocks\"": [\n-    {\n-      \""type\"": \""prompt\"",\n-      \""alignment\"": \""right\"",\n-      \""vertical_offset\"": -1,\n-      \""segments\"": [\n-        {\n-          \""type\"": \""time\"",\n-          \""style\"": \""plain\"",\n-          \""foreground\"": \""#007ACC\"",\n-          \""properties\"": {\n-            \""time_format\"": \""15:04:05\""\n-          }\n-        }\n-      ]\n-    },\n-    {\n-      \""type\"": \""prompt\"",\n-      \""alignment\"": \""left\"",\n-      \""newline\"": true,\n-      \""segments\"": [\n-        {\n-          \""type\"": \""session\"",\n-          \""style\"": \""diamond\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#ffb300\"",\n-          \""leading_diamond\"": \""\\uE0B6\"",\n-          \""trailing_diamond\"": \""\\uE0B0\"",\n-          \""properties\"": {\n-            \""postfix\"": \"" \""\n-          }\n-        },\n-        {\n-          \""type\"": \""path\"",\n-          \""style\"": \""powerline\"",\n-          \""powerline_symbol\"": \""\\uE0B0\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#61AFEF\"",\n-          \""properties\"": {\n-            \""prefix\"": \"" \\uE5FF \"",\n-            \""style\"": \""folder\"",\n-            \""exclude_folders\"": [\n-              \""/super/secret/project\""\n-            ],\n-            \""enable_hyperlink\"": false\n-          }\n-        },\n-        {\n-          \""type\"": \""git\"",\n-          \""style\"": \""powerline\"",\n-          \""foreground\"": \""#193549\"",\n-          \""foreground_templates\"": [\n-            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#ffffff{{ end }}\""\n-          ],\n-          \""background\"": \""#2e9599\"",\n-          \""background_templates\"": [\n-            \""{{ if or (.Working.Changed) (.Staging.Changed) }}#f36943{{ end }}\"",\n-            \""{{ if and (gt .Ahead 0) (gt .Behind 0) }}#a8216b{{ end }}\"",\n-            \""{{ if gt .Ahead 0 }}#35b5ff{{ end }}\"",\n-            \""{{ if gt .Behind 0 }}#f89cfa{{ end }}\""\n-          ],\n-          \""powerline_symbol\"": \""\\uE0B0\"",\n-          \""properties\"": {\n-            \""fetch_status\"": true,\n-            \""branch_max_length\"": 25,\n-            \""template\"": \""{{ .HEAD }}{{ .BranchStatus }}\""\n-          }\n-        },\n-        {\n-          \""type\"": \""exit\"",\n-          \""style\"": \""diamond\"",\n-          \""foreground\"": \""#ffffff\"",\n-          \""background\"": \""#00897b\"",\n-          \""background_templates\"": [\""{{ if gt .Code 0 }}#e91e63{{ end }}\""],\n-          \""leading_diamond\"": \""\"",\n-          \""trailing_diamond\"": \""\\uE0B4\"",\n-          \""properties\"": {\n-            \""always_enabled\"": true,\n-            \""template\"": \""\\uE23A\"",\n-            \""prefix\"": \""<parentBackground>\\uE0B0</> \""\n-          }\n-        }\n-      ]\n-    }\n-  ]\n-}\n-```\n-\n [releases]: https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest\n [font]: /docs/config-fonts\n [schema]: https://github.com/JanDeDobbeleer/oh-my-posh/blob/main/themes/schema.json\n [themes]: https://github.com/JanDeDobbeleer/oh-my-posh/tree/main/themes\n-[segments]: /docs/battery\n-[colors]: /docs/config-colors\n-[go-text-template]: https://golang.org/pkg/text/template/\n-[sprig]: https://masterminds.github.io/sprig/\n-[fg-templ]: /docs/config-overview#foreground-templates\n-[regex]: https://www.regular-expressions.info/tutorial.html\n-[aws]: /docs/aws\ndiff --git a/docs/docs/config-segment.md b/docs/docs/config-segment.md\nnew file mode 100644\nindex 0000000..08a66e4\n--- /dev/null\n+++ b/docs/docs/config-segment.md\n@@ -0,0 +1,219 @@\n+---\n+id: config-segment\n+title: Segment\n+sidebar_label: Segment\n+---\n+\n+A segment is a part of the prompt with a certain context. There are different types available out-of-the-box, if you're\n+looking for what's included, feel free to skip this part and browse through the [segments][segments]. Keep reading to\n+understand how to configure a segment.\n+\n+```json\n+{\n+  \""$schema\"": \""https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json\"",\n+  ...\n+  \""blocks\"": [\n+    {\n+      ...\n+      \""segments\"": [\n+        {\n+          \""type\"": \""path\"",\n+          \""style\"": \""powerline\"",\n+          \""powerline_symbol\"": \""\\uE0B0\"",\n+          \""foreground\"": \""#ffffff\"",\n+          \""background\"": \""#61AFEF\"",\n+          \""properties\"": {\n+            ...\n+          }\n+        }\n+      ]\n+    }\n+  ]\n+}\n+```\n+\n+- type: `string` any of the included [segments][segments]\n+- style: `powerline` | `plain` | `diamond`\n+- powerline_symbol: `string`\n+- invert_powerline: `boolean`\n+- leading_diamond: `string`\n+- trailing_diamond: `string`\n+- foreground: `string` [color][colors]\n+- foreground_templates: `array` of `string` values\n+- background: `string` [color][colors]\n+- background_templates: `array` of `string` values\n+- properties: `array` of `Property`: `string`\n+\n+## Type\n+\n+Takes the `string` value referencing which segment logic it needs to run (see [segments][segments] for possible values).\n+\n+## Style\n+\n+Oh Hi! You made it to a really interesting part, great! Style defines how a prompt is rendered. Looking at the most prompt\n+themes out there, we identified 3 types. All of these require a different configuration and depending on the look\n+you want to achieve you might need to understand/use them all.\n+\n+### Powerline\n+\n+What started it all for us. Makes use of a single symbol (`powerline_symbol`) to separate the segments. It takes the\n+background color of the previous segment (or transparent if none) and the foreground of the current one (or transparent\n+if we're at the last segment). Expects segments to have a colored background, else there little use for this one.\n+\n+### Plain\n+\n+Simple. Colored text on a transparent background. Make sure to set `foreground` for maximum enjoyment.\n+Segments will be separated by empty spaces unless you specify `''` for the `prefix` and `postfix` settings for the segment.\n+\n+### Diamond\n+\n+While Powerline works great with a single symbol, sometimes you want a segment to have a different start and end symbol.\n+Just like a diamond: `< my segment text >`. The difference between this and plain is that the diamond symbols take the\n+segment background as their foreground color.\n+\n+## Powerline symbol\n+\n+Text character to use when `\""style\"": \""powerline\""`.\n+\n+## Invert Powerline\n+\n+If `true` this swaps the foreground and background colors. Can be useful when the character you want does not exist\n+in the perfectly mirrored variant for example.\n+\n+## Leading diamond\n+\n+Text character to use at the start of the segment. Will take the background color of the segment as\n+its foreground color.\n+\n+## Trailing diamond\n+\n+Text character to use at the end of the segment. Will take the background color of the segment as its foreground color.\n+\n+## Foreground\n+\n+[Color][colors] to use as the segment text foreground color. Also supports transparency using the `transparent` keyword.\n+\n+## Foreground Templates\n+\n+Array if string templates to define the foreground color for the given Segment based on the Segment's Template Properties.\n+Under the hood this uses go's [text/template][go-text-template] feature extended with [sprig][sprig] and\n+offers a few standard properties to work with. For supported Segments, look for the **Template Properties** section in\n+the documentation.\n+\n+The following sample is based on the [AWS Segment][aws].\n+\n+```json\n+{\n+  \""type\"": \""aws\"",\n+  \""style\"": \""powerline\"",\n+  \""powerline_symbol\"": \""\\uE0B0\"",\n+  \""foreground\"": \""#ffffff\"",\n+  \""background\"": \""#111111\"",\n+  \""foreground_templates\"": [\n+    \""{{if contains \\\""default\\\"" .Profile}}#FFA400{{end}}\"",\n+    \""{{if contains \\\""jan\\\"" .Profile}}#f1184c{{end}}\""\n+  ],\n+  \""properties\"": {\n+    \""prefix\"": \"" \\uE7AD \""\n+  }\n+}\n+```\n+\n+The logic is as follows: when `background_templates` contains an array, we will check every template line until there's\n+one that returns a non-empty string. So, when the contents of `.Profile` contain the word `default`, the first template\n+returns `#FFA400` and that's the color that will be used. If it contains `jan`, it returns `#f1184c`. When none of the\n+templates returns a value, the foreground value `#ffffff` is used.\n+\n+## Background\n+\n+[Color][colors] to use as the segment text background color. Also supports transparency using the `transparent` keyword.\n+\n+## Background Templates\n+\n+Same as [Foreground Templates][fg-templ] but for the background color.\n+\n+## Properties\n+\n+An array of **Properties** with a value. This is used inside of the segment logic to tweak what the output of the segment\n+will be. Segments have the ability to define their own Properties, but there are some general ones being used by the\n+engine which allow you to customize the output even more.\n+\n+### General-purpose properties\n+\n+You can use these on any segment, the engine is responsible for adding them correctly.\n+\n+- prefix: `string`\n+- postfix: `string`\n+- include_folders: `[]string`\n+- exclude_folders: `[]string`\n+\n+#### Prefix\n+\n+The string content will be put in front of the segment's output text. Useful for symbols, text or other customizations.\n+If this is not set, it will be an empty space in `plain` mode. If you want to remove the space before the segment,\n+specify this as `''`.\n+\n+#### Postfix\n+\n+The string content will be put after the segment's output text. Useful for symbols, text or other customizations.\n+If this is not set, it will default to an empty space in `plain` mode. If you want to remove the space after the segment,\n+specify this as `''`.\n+\n+#### Include / Exclude Folders\n+\n+Sometimes you might want to have a segment only rendered in certain folders. If `include_folders` is specified,\n+the segment will only be rendered when in one of those locations. If `exclude_folders` is specified, the segment\n+will not be rendered when in one of the excluded locations.\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects\""\n+]\n+```\n+\n+```json\n+\""exclude_folders\"": [\n+  \""/Users/posh/Projects\""\n+]\n+```\n+\n+The strings specified in these properties are evaluated as [regular expressions][regex]. You\n+can use any valid regular expression construct, but the regular expression must match the entire directory\n+name. The following will match `/Users/posh/Projects/Foo` but not `/home/Users/posh/Projects/Foo`.\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects.*\""\n+]\n+```\n+\n+You can also combine these properties:\n+\n+```json\n+\""include_folders\"": [\n+  \""/Users/posh/Projects.*\""\n+],\n+\""exclude_folders\"": [\n+  \""/Users/posh/Projects/secret-project.*\""\n+]\n+```\n+\n+#### Notes\n+\n+- Oh My Posh will accept both `/` and `\\` as path separators for a folder and will match regardless of which\n+is used by the current operating system.\n+- Because the strings are evaluated as regular expressions, if you want to use a `\\` in a Windows\n+directory name, you need to specify it as `\\\\\\\\`.\n+- The character `~` at the start of a specified folder will match the user's home directory.\n+- The comparison is case-insensitive on Windows and macOS, but case-sensitive on other operating systems.\n+\n+This means that for user Bill, who has a user account `Bill` on Windows and `bill` on Linux,  `~/Foo` might match\n+`C:\\Users\\Bill\\Foo` or `C:\\Users\\Bill\\foo` on Windows but only `/home/bill/Foo` on Linux.\n+\n+[segments]: /docs/battery\n+[colors]: /docs/config-colors\n+[go-text-template]: https://golang.org/pkg/text/template/\n+[sprig]: https://masterminds.github.io/sprig/\n+[fg-templ]: /docs/config-overview#foreground-templates\n+[regex]: https://www.regular-expressions.info/tutorial.html\n+[aws]: /docs/aws\ndiff --git a/docs/docs/segment-environment.md b/docs/docs/segment-environment.md\nindex f35bc87..982a0a5 100644\n--- a/docs/docs/segment-environment.md\n+++ b/docs/docs/segment-environment.md\n@@ -34,7 +34,7 @@ New-Alias -Name 'Set-PoshContext' -Value 'Set-EnvVar' -Scope Global -Force\n \n The segment will show when the value of the environment variable isn't empty.\n \n-## Sample Configuration\n+## Sample *Configuration*\n \n ```json\n {\ndiff --git a/docs/sidebars.js b/docs/sidebars.js\nindex a75163e..8f151a2 100644\n--- a/docs/sidebars.js\n+++ b/docs/sidebars.js\n@@ -20,6 +20,9 @@ module.exports = {\n       label: \""\u2699\ufe0f Configuration\"",\n       items: [\n         \""config-overview\"",\n+        \""config-block\"",\n+        \""config-segment\"",\n+        \""config-sample\"",\n         \""config-title\"",\n         \""config-colors\"",\n         \""config-text-style\"",\n"", ""diff --git a/scripts/build.mjs b/scripts/build.mjs\nindex 204854f..b3cf067 100644\n--- a/scripts/build.mjs\n+++ b/scripts/build.mjs\n@@ -3,8 +3,8 @@ import { write } from 'fsxx';\n import { info, success } from './helpers.mjs';\n \n await $`rm -rf dist/*`;\n-await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n await $`unbuild`;\n+await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n \n const packages = [\n   'jsx-runtime',\n"", ""diff --git a/src/components/DataTable/DataTableTitle.js b/src/components/DataTable/DataTableTitle.js\nindex bfcf07e..d764fd5 100644\n--- a/src/components/DataTable/DataTableTitle.js\n+++ b/src/components/DataTable/DataTableTitle.js\n@@ -27,6 +27,10 @@ type Props = React.ElementConfig<typeof TouchableWithoutFeedback> & {|\n    */\n   sortDirection?: 'ascending' | 'descending',\n   /**\n+   * The number of lines to show.\n+   */\n+  numberOfLines?: number,\n+  /**\n    * Function to execute on press.\n    */\n   onPress?: () => mixed,\n@@ -44,6 +48,10 @@ type State = {\n class DataTableTitle extends React.Component<Props, State> {\n   static displayName = 'DataTable.Title';\n \n+  static defaultProps = {\n+    numberOfLines: 1,\n+  };\n+\n   state = {\n     spinAnim: new Animated.Value(\n       this.props.sortDirection === 'ascending' ? 0 : 1\n@@ -70,6 +78,7 @@ class DataTableTitle extends React.Component<Props, State> {\n       sortDirection,\n       theme,\n       style,\n+      numberOfLines,\n       ...rest\n     } = this.props;\n \n@@ -99,7 +108,7 @@ class DataTableTitle extends React.Component<Props, State> {\n               styles.cell,\n               sortDirection ? styles.sorted : { color: textColor },\n             ]}\n-            numberOfLines={1}\n+            numberOfLines={numberOfLines}\n           >\n             {children}\n           </Text>\n""]",5,"[""06e2be4e2019b6fa714e1fcb34485860ef1ede79"", ""4cbbd2552ba0de273e1dfe7d453c5b3efed751a3"", ""cb1f48b56ae0de93acb72e48726c7d610a1d538e"", ""c323d59c607cabc91f17a78528d998f376f30b10"", ""f9a094918b62534614c47aa8a13f33aec751a1e0""]","[""fix"", ""cicd"", ""docs"", ""build"", ""feat""]"
"enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>,fix netty dependency

netty-bom 4.1.70 contains the changes from pull request
https://github.com/netty/netty/pull/11798, which moved the classes out
of the native modules to make sure the same classes don't end up on the
classpath multiple times. For us it means that we need to depend on both
the native and classes modules. However, since we don't use the native
module directly (only classes that were moved to this classes module),
we need to force the dependency plugin to consider the native module as
used.,export a modal transition preset,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.","[""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n"", ""diff --git a/atomix/cluster/pom.xml b/atomix/cluster/pom.xml\nindex a477873..b6db695 100644\n--- a/atomix/cluster/pom.xml\n+++ b/atomix/cluster/pom.xml\n@@ -69,6 +69,10 @@\n     </dependency>\n     <dependency>\n       <groupId>io.netty</groupId>\n+      <artifactId>netty-transport-classes-epoll</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.netty</groupId>\n       <artifactId>netty-transport-native-epoll</artifactId>\n       <classifier>linux-x86_64</classifier>\n     </dependency>\n@@ -278,6 +282,7 @@\n             <dependency>uk.co.real-logic:sbe-tool</dependency>\n             <dependency>net.jqwik:jqwik</dependency>\n             <dependency>io.netty:netty-tcnative-boringssl-static</dependency>\n+            <dependency>io.netty:netty-transport-native-epoll</dependency>\n           </usedDependencies>\n         </configuration>\n       </plugin>\n"", ""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n"", ""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n""]",5,"[""fd8e563cc19ca4684885d4692acee6bebcca4ada"", ""f00a4d3e307b89842250358ee432e6800bb24362"", ""535708ae50aecb452560a23356fd396f99ef13a2"", ""e12d9e77a6fd531a22325337838a841b1c67f00d"", ""9be725fa3906323d4bc9788f54eccf74109d632b""]","[""feat"", ""build"", ""refactor"", ""docs"", ""fix""]"
"setup jest and add m.ts tests,Fix typo,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.,split release docs build into separate workflow,add getter for protocol id","[""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n"", ""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n"", ""diff --git a/.github/workflows/ibis-docs-lint.yml b/.github/workflows/ibis-docs-lint.yml\nindex 753d57d..3e0aa15 100644\n--- a/.github/workflows/ibis-docs-lint.yml\n+++ b/.github/workflows/ibis-docs-lint.yml\n@@ -88,14 +88,14 @@ jobs:\n         run: poetry run pytest --benchmark-only --benchmark-json .benchmarks/output.json ibis/tests/benchmarks\n \n       - uses: tibdex/github-app-token@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         id: generate-token\n         with:\n           app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}\n           private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}\n \n       - uses: benchmark-action/github-action-benchmark@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         with:\n           tool: pytest\n           github-token: ${{ steps.generate-token.outputs.token }}\n@@ -107,6 +107,7 @@ jobs:\n \n   docs:\n     runs-on: ubuntu-latest\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n     needs:\n       # wait on benchmarks to prevent a race condition when pushing to the\n       # gh-pages branch\n@@ -124,51 +125,25 @@ jobs:\n           authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n           extraPullNames: nix-community,poetry2nix\n \n-      - name: Generate a GitHub token\n-        if: ${{ github.event_name == 'push' }}\n-        uses: tibdex/github-app-token@v1\n-        id: generate_token\n-        with:\n-          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n-          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n-\n-      - name: checkout\n-        if: ${{ github.event_name == 'push' }}\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          token: ${{ steps.generate_token.outputs.token }}\n-\n       - name: checkout\n-        if: ${{ github.event_name != 'push' }}\n         uses: actions/checkout@v3\n \n-      - name: Configure git info\n-        if: ${{ github.event_name == 'push' }}\n-        run: |\n-          set -euo pipefail\n-\n-          git config user.name 'ibis-docs-bot[bot]'\n-          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n-\n       - name: build docs\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c mkdocs build\n \n       - name: verify internal links\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c just checklinks --offline --no-progress\n \n-      - name: Pull gh-pages changes\n+      - name: Configure git info\n         if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n-          git fetch origin gh-pages\n-          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n \n       - name: build and push dev docs\n-        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/') }}\n+        if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n@@ -180,19 +155,6 @@ jobs:\n               --message 'docs(dev): ibis@${{ github.sha }}' \\\n                 dev\n \n-      - name: build and push docs on tag\n-        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}\n-        run: |\n-          set -euo pipefail\n-\n-          nix develop -f shell.nix --keep-going -c \\\n-            mic deploy \\\n-              --push \\\n-              --rebase \\\n-              --prefix docs \\\n-              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n-              \""${GITHUB_REF_NAME}\"" latest\n-\n   simulate_release:\n     runs-on: ubuntu-latest\n     steps:\ndiff --git a/.github/workflows/ibis-docs-release.yml b/.github/workflows/ibis-docs-release.yml\nnew file mode 100644\nindex 0000000..da7ee49\n--- /dev/null\n+++ b/.github/workflows/ibis-docs-release.yml\n@@ -0,0 +1,63 @@\n+# vim: filetype=yaml\n+name: Docs Release Build\n+\n+on:\n+  release:\n+    types:\n+      - published\n+jobs:\n+  docs:\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: install nix\n+        uses: cachix/install-nix-action@v17\n+        with:\n+          nix_path: nixpkgs=channel:nixos-unstable-small\n+\n+      - name: setup cachix\n+        uses: cachix/cachix-action@v10\n+        with:\n+          name: ibis\n+          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n+          extraPullNames: nix-community,poetry2nix\n+\n+      - name: Generate a GitHub token\n+        uses: tibdex/github-app-token@v1\n+        id: generate_token\n+        with:\n+          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n+          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n+\n+      - name: checkout\n+        uses: actions/checkout@v3\n+        with:\n+          fetch-depth: 0\n+          token: ${{ steps.generate_token.outputs.token }}\n+\n+      - name: Configure git info\n+        run: |\n+          set -euo pipefail\n+\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n+\n+      - name: Pull gh-pages changes\n+        run: |\n+          set -euo pipefail\n+\n+          git fetch origin gh-pages\n+          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+\n+      - name: build and push docs on tag\n+        run: |\n+          set -euo pipefail\n+\n+          nix develop -f shell.nix --keep-going -c \\\n+            mic deploy \\\n+              --push \\\n+              --rebase \\\n+              --update-aliases \\\n+              --prefix docs \\\n+              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n+              \""${GITHUB_REF_NAME}\"" latest\n"", ""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n""]",5,"[""229b53a632ea97d47c4be11f096bdd828fb415d8"", ""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c"", ""32845e1bbd1efb5dbc16f671049509a409ba25ce"", ""dc5238b2bda98a7c4f2fe9584fc3b0191a408109""]","[""test"", ""docs"", ""refactor"", ""cicd"", ""feat""]"
"upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,autostart feature fixed,Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.","[""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n"", ""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n""]",5,"[""454003841aabeb74396d73541378bfa59c75b5db"", ""e12d9e77a6fd531a22325337838a841b1c67f00d"", ""bed78248c941d57ad4cc20a455147e186e97c7a1"", ""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c""]","[""build"", ""docs"", ""fix"", ""test"", ""refactor""]"
"[gn win] link comctl32.lib to fix component build,remove ubuntu-latest from job title where that is the only os,licensing,verify checkpoint listeners are notified,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.","[""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n""]",5,"[""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""74e9de5ec97dc013a52aa063dff0f40ac74c407b"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""e0198f74b81da3663144cfe1d971939319f82a0f"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c""]","[""build"", ""cicd"", ""docs"", ""test"", ""refactor""]"
"updated react demo parcel command,publish sdks after docs/build,added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,remove appear css animation,initialize threejs objects in defaultRef, to fix undefined type errors","[""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 4ac01cf..cfea1ae 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -213,6 +213,7 @@ workflows:\n             - test-e2e-mysql\n             - test-e2e-cockroach\n             - test-e2e-plugin\n+            - docs/build\n #            - test-legacy-migrations-mysql\n #            - test-legacy-migrations-cockroach\n           filters:\n@@ -246,6 +247,7 @@ workflows:\n             - golangci/lint\n             - sdk/generate\n             - goreleaser/release\n+            - docs/build\n           filters:\n             tags:\n               only: /.*/\n"", ""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n"", ""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n""]",5,"[""32b92cfa0b74a6c25990e32ac6aab12b8496794c"", ""6c9cb638cb4d1ecc42632fcf389c24898c5b3244"", ""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""47ef9104e4a89e80d7cc6c1950bc080841da4a7b"", ""2561f4ade46fc9d59f289f328cc77733a6443697""]","[""build"", ""cicd"", ""docs"", ""refactor"", ""fix""]"
"verify checkpoint listeners are notified,update Java get-started guide

- handle payload as map instead of JSON string

related to zeebe-io/zeebe#909,allow disabling dynamic queue,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>,[gn] fix include_dirs ordering error","[""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n"", ""diff --git a/docs/src/java-client/get-started.md b/docs/src/java-client/get-started.md\nindex efd3182..f531cd0 100755\n--- a/docs/src/java-client/get-started.md\n+++ b/docs/src/java-client/get-started.md\n@@ -262,7 +262,6 @@ public class Application\n                 // ...\n \n                 jobClient.newCompleteCommand(job)\n-                    .withoutPayload()\n                     .send()\n                     .join();\n             })\n@@ -323,6 +322,10 @@ public class Application\n     public static void main(String[] args)\n     {\n         // after the workflow is deployed\n+        \n+        final Map<String, Object> data = new HashMap<>();\n+        data.put(\""orderId\"", 31243);\n+        data.put(\""orderItems\"", Arrays.asList(435, 182, 376));\n \n         final WorkflowInstanceEvent wfInstance = client.topicClient().workflowClient()\n             .newCreateInstanceCommand()\n@@ -342,15 +345,17 @@ public class Application\n                 final Map<String, Object> headers = job.getCustomHeaders();\n                 final String method = (String) headers.get(\""method\"");\n \n-                final String orderId = job.getPayload();\n+                final Map<String, Object> payload = job.getPayloadAsMap();\n \n-                System.out.println(\""Process order: \"" + orderId);\n+                System.out.println(\""Process order: \"" + payload.get(\""orderId\""));\n                 System.out.println(\""Collect money using payment method: \"" + method);\n \n                 // ...\n \n+                payload.put(\""totalPrice\"", 46.50);\n+\n                 jobClient.newCompleteCommand(job)\n-                    .payload(\""{ \\\""totalPrice\\\"": 46.50 }\"")\n+                    .payload(payload)\n                     .send()\n                     .join();\n             })\n"", ""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 11adaa7..ed64b17 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -240,6 +240,14 @@ static_library(\""electron_lib\"") {\n     \""brightray\"",\n     \""build/node\"",\n   ]\n+  include_dirs = [\n+    \""chromium_src\"",\n+    \"".\"",\n+    \""$target_gen_dir\"",\n+    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n+    # API of blink, then delete this include dir.\n+    \""//third_party/WebKit/Source\"",\n+  ]\n   if (enable_desktop_capturer) {\n     deps += [ \""//third_party/webrtc/modules/desktop_capture\"" ]\n   }\n@@ -275,14 +283,6 @@ static_library(\""electron_lib\"") {\n     # Disable warnings for g_settings_list_schemas.\n     \""GLIB_DISABLE_DEPRECATION_WARNINGS\"",\n   ]\n-  include_dirs = [\n-    \""chromium_src\"",\n-    \"".\"",\n-    \""$target_gen_dir\"",\n-    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n-    # API of blink, then delete this include dir.\n-    \""//third_party/WebKit/Source\"",\n-  ]\n   if (is_component_build) {\n     defines += [\n       # Import V8 symbols from shared library (node.dll / libnode.so)\n""]",5,"[""e0198f74b81da3663144cfe1d971939319f82a0f"", ""c2ee5cd5e709afd15c5565ee009a0d204403a119"", ""9ef5c0d14193a9abb09b39856f58477d1f4b0d77"", ""f823cf28652987d43c8324b4f5b203240032383a"", ""c44cf88a6ec54e5ddd99d8348bcc57b301ec7945""]","[""test"", ""docs"", ""fix"", ""feat"", ""build""]"
"restructure ClusterTopology to track completed change,split release docs build into separate workflow,add benchmark for known-slow table expression,upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.,enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>","[""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n"", ""diff --git a/.github/workflows/ibis-docs-lint.yml b/.github/workflows/ibis-docs-lint.yml\nindex 753d57d..3e0aa15 100644\n--- a/.github/workflows/ibis-docs-lint.yml\n+++ b/.github/workflows/ibis-docs-lint.yml\n@@ -88,14 +88,14 @@ jobs:\n         run: poetry run pytest --benchmark-only --benchmark-json .benchmarks/output.json ibis/tests/benchmarks\n \n       - uses: tibdex/github-app-token@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         id: generate-token\n         with:\n           app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}\n           private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}\n \n       - uses: benchmark-action/github-action-benchmark@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         with:\n           tool: pytest\n           github-token: ${{ steps.generate-token.outputs.token }}\n@@ -107,6 +107,7 @@ jobs:\n \n   docs:\n     runs-on: ubuntu-latest\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n     needs:\n       # wait on benchmarks to prevent a race condition when pushing to the\n       # gh-pages branch\n@@ -124,51 +125,25 @@ jobs:\n           authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n           extraPullNames: nix-community,poetry2nix\n \n-      - name: Generate a GitHub token\n-        if: ${{ github.event_name == 'push' }}\n-        uses: tibdex/github-app-token@v1\n-        id: generate_token\n-        with:\n-          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n-          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n-\n-      - name: checkout\n-        if: ${{ github.event_name == 'push' }}\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          token: ${{ steps.generate_token.outputs.token }}\n-\n       - name: checkout\n-        if: ${{ github.event_name != 'push' }}\n         uses: actions/checkout@v3\n \n-      - name: Configure git info\n-        if: ${{ github.event_name == 'push' }}\n-        run: |\n-          set -euo pipefail\n-\n-          git config user.name 'ibis-docs-bot[bot]'\n-          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n-\n       - name: build docs\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c mkdocs build\n \n       - name: verify internal links\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c just checklinks --offline --no-progress\n \n-      - name: Pull gh-pages changes\n+      - name: Configure git info\n         if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n-          git fetch origin gh-pages\n-          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n \n       - name: build and push dev docs\n-        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/') }}\n+        if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n@@ -180,19 +155,6 @@ jobs:\n               --message 'docs(dev): ibis@${{ github.sha }}' \\\n                 dev\n \n-      - name: build and push docs on tag\n-        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}\n-        run: |\n-          set -euo pipefail\n-\n-          nix develop -f shell.nix --keep-going -c \\\n-            mic deploy \\\n-              --push \\\n-              --rebase \\\n-              --prefix docs \\\n-              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n-              \""${GITHUB_REF_NAME}\"" latest\n-\n   simulate_release:\n     runs-on: ubuntu-latest\n     steps:\ndiff --git a/.github/workflows/ibis-docs-release.yml b/.github/workflows/ibis-docs-release.yml\nnew file mode 100644\nindex 0000000..da7ee49\n--- /dev/null\n+++ b/.github/workflows/ibis-docs-release.yml\n@@ -0,0 +1,63 @@\n+# vim: filetype=yaml\n+name: Docs Release Build\n+\n+on:\n+  release:\n+    types:\n+      - published\n+jobs:\n+  docs:\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: install nix\n+        uses: cachix/install-nix-action@v17\n+        with:\n+          nix_path: nixpkgs=channel:nixos-unstable-small\n+\n+      - name: setup cachix\n+        uses: cachix/cachix-action@v10\n+        with:\n+          name: ibis\n+          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n+          extraPullNames: nix-community,poetry2nix\n+\n+      - name: Generate a GitHub token\n+        uses: tibdex/github-app-token@v1\n+        id: generate_token\n+        with:\n+          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n+          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n+\n+      - name: checkout\n+        uses: actions/checkout@v3\n+        with:\n+          fetch-depth: 0\n+          token: ${{ steps.generate_token.outputs.token }}\n+\n+      - name: Configure git info\n+        run: |\n+          set -euo pipefail\n+\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n+\n+      - name: Pull gh-pages changes\n+        run: |\n+          set -euo pipefail\n+\n+          git fetch origin gh-pages\n+          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+\n+      - name: build and push docs on tag\n+        run: |\n+          set -euo pipefail\n+\n+          nix develop -f shell.nix --keep-going -c \\\n+            mic deploy \\\n+              --push \\\n+              --rebase \\\n+              --update-aliases \\\n+              --prefix docs \\\n+              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n+              \""${GITHUB_REF_NAME}\"" latest\n"", ""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n"", ""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n"", ""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n""]",5,"[""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2"", ""32845e1bbd1efb5dbc16f671049509a409ba25ce"", ""e9617f0854030e70365eb264bcb3b58078e79e9e"", ""454003841aabeb74396d73541378bfa59c75b5db"", ""fd8e563cc19ca4684885d4692acee6bebcca4ada""]","[""refactor"", ""cicd"", ""test"", ""build"", ""feat""]"
"get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>,[gn] fix include_dirs ordering error,update flushed index before truncating,add tests","[""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 11adaa7..ed64b17 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -240,6 +240,14 @@ static_library(\""electron_lib\"") {\n     \""brightray\"",\n     \""build/node\"",\n   ]\n+  include_dirs = [\n+    \""chromium_src\"",\n+    \"".\"",\n+    \""$target_gen_dir\"",\n+    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n+    # API of blink, then delete this include dir.\n+    \""//third_party/WebKit/Source\"",\n+  ]\n   if (enable_desktop_capturer) {\n     deps += [ \""//third_party/webrtc/modules/desktop_capture\"" ]\n   }\n@@ -275,14 +283,6 @@ static_library(\""electron_lib\"") {\n     # Disable warnings for g_settings_list_schemas.\n     \""GLIB_DISABLE_DEPRECATION_WARNINGS\"",\n   ]\n-  include_dirs = [\n-    \""chromium_src\"",\n-    \"".\"",\n-    \""$target_gen_dir\"",\n-    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n-    # API of blink, then delete this include dir.\n-    \""//third_party/WebKit/Source\"",\n-  ]\n   if (is_component_build) {\n     defines += [\n       # Import V8 symbols from shared library (node.dll / libnode.so)\n"", ""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/Cargo.lock b/Cargo.lock\nindex 84d5d07..6ad05da 100644\n--- a/Cargo.lock\n+++ b/Cargo.lock\n@@ -293,6 +293,7 @@ version = \""0.1.0\""\n dependencies = [\n  \""git-cliff-core\"",\n  \""log\"",\n+ \""pretty_assertions\"",\n  \""pretty_env_logger\"",\n  \""structopt\"",\n ]\ndiff --git a/git-cliff-core/src/lib.rs b/git-cliff-core/src/lib.rs\nindex 3b18ba0..a560c94 100644\n--- a/git-cliff-core/src/lib.rs\n+++ b/git-cliff-core/src/lib.rs\n@@ -1,6 +1,8 @@\n //! Highly customizable Changelog Generator\n #![warn(missing_docs, clippy::unwrap_used)]\n \n+/// Export regex crate.\n+pub use regex;\n /// Git commit.\n pub mod commit;\n /// Config file parser.\ndiff --git a/git-cliff/Cargo.toml b/git-cliff/Cargo.toml\nindex 41eb2e9..cc64b37 100644\n--- a/git-cliff/Cargo.toml\n+++ b/git-cliff/Cargo.toml\n@@ -20,3 +20,6 @@ log = \""0.4.14\""\n version = \""0.3\""\n default-features = false\n features = [\""suggestions\"", \""color\"", \""wrap_help\""]\n+\n+[dev-dependencies]\n+pretty_assertions = \""0.7\""\ndiff --git a/git-cliff/src/changelog.rs b/git-cliff/src/changelog.rs\nindex 3f9e994..23ea186 100644\n--- a/git-cliff/src/changelog.rs\n+++ b/git-cliff/src/changelog.rs\n@@ -115,3 +115,171 @@ impl<'a> Changelog<'a> {\n \t\tOk(())\n \t}\n }\n+\n+#[cfg(test)]\n+mod test {\n+\tuse super::*;\n+\tuse git_cliff_core::config::{\n+\t\tChangelogConfig,\n+\t\tCommitParser,\n+\t\tGitConfig,\n+\t};\n+\tuse git_cliff_core::regex::Regex;\n+\tuse pretty_assertions::assert_eq;\n+\tuse std::str;\n+\t#[test]\n+\tfn changelog_generator() -> Result<()> {\n+\t\tlet config = Config {\n+\t\t\tchangelog: ChangelogConfig {\n+\t\t\t\theader: Some(String::from(\""# Changelog\"")),\n+\t\t\t\tbody:   String::from(\n+\t\t\t\t\tr#\""{% if version %}\n+\t\t\t\t## Release [{{ version }}] - {{ timestamp | date(format=\""%Y-%m-%d\"") }}\n+\t\t\t\t({{ commit_id }}){% else %}\n+\t\t\t\t## Unreleased{% endif %}\n+\t\t\t\t{% for group, commits in commits | group_by(attribute=\""group\"") %}\n+\t\t\t\t### {{ group }}{% for group, commits in commits | group_by(attribute=\""scope\"") %}\n+\t\t\t\t#### {{ group }}{% for commit in commits %}\n+\t\t\t\t- {{ commit.message }}{% endfor %}\n+\t\t\t\t{% endfor %}{% endfor %}\""#,\n+\t\t\t\t)\n+\t\t\t\t.replace(\""\t\t\t\t\"", \""\""),\n+\t\t\t\tfooter: Some(String::from(\""------------\"")),\n+\t\t\t},\n+\t\t\tgit:       GitConfig {\n+\t\t\t\tconventional_commits: true,\n+\t\t\t\tcommit_parsers:       Some(vec![\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""feat*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""New features\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\""fix*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Bug Fixes\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t\tCommitParser {\n+\t\t\t\t\t\tmessage: Regex::new(\"".*\"").ok(),\n+\t\t\t\t\t\tbody:    None,\n+\t\t\t\t\t\tgroup:   Some(String::from(\""Other\"")),\n+\t\t\t\t\t\tskip:    None,\n+\t\t\t\t\t},\n+\t\t\t\t]),\n+\t\t\t\tfilter_commits:       Some(false),\n+\t\t\t\ttag_pattern:          String::new(),\n+\t\t\t\tskip_tags:            Regex::new(\""v3.*\"").ok(),\n+\t\t\t},\n+\t\t};\n+\t\tlet test_release = Release {\n+\t\t\tversion:   Some(String::from(\""v1.0.0\"")),\n+\t\t\tcommits:   vec![\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0bc123\""),\n+\t\t\t\t\tString::from(\""feat(app): add cool features\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0werty\""),\n+\t\t\t\t\tString::from(\""style(ui): make good stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0w3rty\""),\n+\t\t\t\t\tString::from(\""fix(ui): fix more stuff\""),\n+\t\t\t\t),\n+\t\t\t\tCommit::new(\n+\t\t\t\t\tString::from(\""0jkl12\""),\n+\t\t\t\t\tString::from(\""chore(app): do nothing\""),\n+\t\t\t\t),\n+\t\t\t],\n+\t\t\tcommit_id: Some(String::from(\""0bc123\"")),\n+\t\t\ttimestamp: 50000000,\n+\t\t\tprevious:  None,\n+\t\t};\n+\t\tlet releases = vec![\n+\t\t\ttest_release.clone(),\n+\t\t\tRelease {\n+\t\t\t\tversion: Some(String::from(\""v3.0.0\"")),\n+\t\t\t\tcommits: vec![Commit::new(\n+\t\t\t\t\tString::from(\""n0thin\""),\n+\t\t\t\t\tString::from(\""feat(xyz): skip commit\""),\n+\t\t\t\t)],\n+\t\t\t\t..Release::default()\n+\t\t\t},\n+\t\t\tRelease {\n+\t\t\t\tversion:   None,\n+\t\t\t\tcommits:   vec![\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc123\""),\n+\t\t\t\t\t\tString::from(\""feat(app): add xyz\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""abc124\""),\n+\t\t\t\t\t\tString::from(\""docs(app): document zyx\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(String::from(\""def789\""), String::from(\""merge #4\"")),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""qwerty\""),\n+\t\t\t\t\t\tString::from(\""fix(app): fix abc\""),\n+\t\t\t\t\t),\n+\t\t\t\t\tCommit::new(\n+\t\t\t\t\t\tString::from(\""hjkl12\""),\n+\t\t\t\t\t\tString::from(\""chore(ui): do boring stuff\""),\n+\t\t\t\t\t),\n+\t\t\t\t],\n+\t\t\t\tcommit_id: None,\n+\t\t\t\ttimestamp: 1000,\n+\t\t\t\tprevious:  Some(Box::new(test_release)),\n+\t\t\t},\n+\t\t];\n+\t\tlet changelog = Changelog::new(releases, &config)?;\n+\t\tlet mut out = Vec::new();\n+\t\tchangelog.generate(&mut out)?;\n+\t\tassert_eq!(\n+\t\t\tString::from(\n+\t\t\t\tr#\""# Changelog\n+\n+\t\t\t## Unreleased\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### app\n+\t\t\t- fix abc\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add xyz\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- document zyx\n+\n+\t\t\t#### ui\n+\t\t\t- do boring stuff\n+\n+\t\t\t## Release [v1.0.0] - 1971-08-02\n+\t\t\t(0bc123)\n+\n+\t\t\t### Bug Fixes\n+\t\t\t#### ui\n+\t\t\t- fix more stuff\n+\n+\t\t\t### New features\n+\t\t\t#### app\n+\t\t\t- add cool features\n+\n+\t\t\t### Other\n+\t\t\t#### app\n+\t\t\t- do nothing\n+\n+\t\t\t#### ui\n+\t\t\t- make good stuff\n+\t\t\t------------\n+\t\t\t\""#\n+\t\t\t)\n+\t\t\t.replace(\""\t\t\t\"", \""\""),\n+\t\t\tstr::from_utf8(&out).unwrap()\n+\t\t);\n+\t\tOk(())\n+\t}\n+}\n""]",5,"[""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c"", ""f823cf28652987d43c8324b4f5b203240032383a"", ""c44cf88a6ec54e5ddd99d8348bcc57b301ec7945"", ""933ab6bb86372913c992567cf9660009900911a7"", ""8ee0611fbf0cd89abe7ae588f22e6ecb843598ea""]","[""refactor"", ""feat"", ""build"", ""fix"", ""test""]"
"cleanup of some if boolean logic

I always get confused reading this code. Lets make it more clear, if
flush then flush; else don't flush.,update wrapping tests for v7,add comments for the Handler,support use meta key select multiple element,increment failing test retries","[""diff --git a/peer.go b/peer.go\nindex 68695c2..b7ab84f 100644\n--- a/peer.go\n+++ b/peer.go\n@@ -123,15 +123,15 @@ func (p *Peer) heartbeat(c chan bool) {\n \tfor {\n \t\tselect {\n \t\tcase flush := <-stopChan:\n-\t\t\tif !flush {\n-\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n-\t\t\t\treturn\n-\t\t\t} else {\n+\t\t\tif flush {\n \t\t\t\t// before we can safely remove a node\n \t\t\t\t// we must flush the remove command to the node first\n \t\t\t\tp.flush()\n \t\t\t\tdebugln(\""peer.heartbeat.stop.with.flush: \"", p.Name)\n \t\t\t\treturn\n+\t\t\t} else {\n+\t\t\t\tdebugln(\""peer.heartbeat.stop: \"", p.Name)\n+\t\t\t\treturn\n \t\t\t}\n \n \t\tcase <-ticker:\n"", ""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n"", ""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n"", ""diff --git a/.ci/scripts/distribution/it-java.sh b/.ci/scripts/distribution/it-java.sh\nindex 679674b..ee150c2 100755\n--- a/.ci/scripts/distribution/it-java.sh\n+++ b/.ci/scripts/distribution/it-java.sh\n@@ -5,7 +5,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -pl qa/integration-tests -pl upgrade-tests -DtestMavenId=2 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java.sh b/.ci/scripts/distribution/test-java.sh\nindex 43e4947..768c965 100755\n--- a/.ci/scripts/distribution/test-java.sh\n+++ b/.ci/scripts/distribution/test-java.sh\n@@ -4,7 +4,7 @@ export JAVA_TOOL_OPTIONS=\""$JAVA_TOOL_OPTIONS -XX:MaxRAMFraction=$((LIMITS_CPU))\""\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -P skip-unstable-ci,parallel-tests -Dzeebe.it.skip -DtestMavenId=1 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \ndiff --git a/.ci/scripts/distribution/test-java8.sh b/.ci/scripts/distribution/test-java8.sh\nindex d56cccb..0f20f95 100755\n--- a/.ci/scripts/distribution/test-java8.sh\n+++ b/.ci/scripts/distribution/test-java8.sh\n@@ -6,7 +6,7 @@ mvn -v\n \n tmpfile=$(mktemp)\n \n-mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=5 | tee ${tmpfile}\n+mvn -o -B --fail-never -T$LIMITS_CPU -s ${MAVEN_SETTINGS_XML} verify -pl clients/java -DtestMavenId=3 -Dsurefire.rerunFailingTestsCount=7 | tee ${tmpfile}\n \n status=${PIPESTATUS[0]}\n \n""]",5,"[""36556bf8e0bce4ab6d26eafacbdad04d9614a5d7"", ""317f4eefecddfb1392ca71d551840f446feee302"", ""036a0ff49a7dade0e04c9c07071a1ff49133ee24"", ""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8"", ""e7a67d88173566be3cd3aed7e9eeb7e29aabbc57""]","[""refactor"", ""test"", ""docs"", ""feat"", ""cicd""]"
"verify checkpoint listeners are notified,add riscv64gc-unknown-linux-gnu,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>,autostart feature fixed","[""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n"", ""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n""]",5,"[""e0198f74b81da3663144cfe1d971939319f82a0f"", ""173553c0372e66e03bdab19e0e6c2dd44daa14a0"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c"", ""f823cf28652987d43c8324b4f5b203240032383a"", ""bed78248c941d57ad4cc20a455147e186e97c7a1""]","[""test"", ""cicd"", ""refactor"", ""feat"", ""fix""]"
"split release docs build into separate workflow,add fallible peek_last_token(),add spacing in comment fix lint (#8555),fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.,enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>","[""diff --git a/.github/workflows/ibis-docs-lint.yml b/.github/workflows/ibis-docs-lint.yml\nindex 753d57d..3e0aa15 100644\n--- a/.github/workflows/ibis-docs-lint.yml\n+++ b/.github/workflows/ibis-docs-lint.yml\n@@ -88,14 +88,14 @@ jobs:\n         run: poetry run pytest --benchmark-only --benchmark-json .benchmarks/output.json ibis/tests/benchmarks\n \n       - uses: tibdex/github-app-token@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         id: generate-token\n         with:\n           app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}\n           private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}\n \n       - uses: benchmark-action/github-action-benchmark@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         with:\n           tool: pytest\n           github-token: ${{ steps.generate-token.outputs.token }}\n@@ -107,6 +107,7 @@ jobs:\n \n   docs:\n     runs-on: ubuntu-latest\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n     needs:\n       # wait on benchmarks to prevent a race condition when pushing to the\n       # gh-pages branch\n@@ -124,51 +125,25 @@ jobs:\n           authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n           extraPullNames: nix-community,poetry2nix\n \n-      - name: Generate a GitHub token\n-        if: ${{ github.event_name == 'push' }}\n-        uses: tibdex/github-app-token@v1\n-        id: generate_token\n-        with:\n-          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n-          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n-\n-      - name: checkout\n-        if: ${{ github.event_name == 'push' }}\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          token: ${{ steps.generate_token.outputs.token }}\n-\n       - name: checkout\n-        if: ${{ github.event_name != 'push' }}\n         uses: actions/checkout@v3\n \n-      - name: Configure git info\n-        if: ${{ github.event_name == 'push' }}\n-        run: |\n-          set -euo pipefail\n-\n-          git config user.name 'ibis-docs-bot[bot]'\n-          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n-\n       - name: build docs\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c mkdocs build\n \n       - name: verify internal links\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c just checklinks --offline --no-progress\n \n-      - name: Pull gh-pages changes\n+      - name: Configure git info\n         if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n-          git fetch origin gh-pages\n-          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n \n       - name: build and push dev docs\n-        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/') }}\n+        if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n@@ -180,19 +155,6 @@ jobs:\n               --message 'docs(dev): ibis@${{ github.sha }}' \\\n                 dev\n \n-      - name: build and push docs on tag\n-        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}\n-        run: |\n-          set -euo pipefail\n-\n-          nix develop -f shell.nix --keep-going -c \\\n-            mic deploy \\\n-              --push \\\n-              --rebase \\\n-              --prefix docs \\\n-              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n-              \""${GITHUB_REF_NAME}\"" latest\n-\n   simulate_release:\n     runs-on: ubuntu-latest\n     steps:\ndiff --git a/.github/workflows/ibis-docs-release.yml b/.github/workflows/ibis-docs-release.yml\nnew file mode 100644\nindex 0000000..da7ee49\n--- /dev/null\n+++ b/.github/workflows/ibis-docs-release.yml\n@@ -0,0 +1,63 @@\n+# vim: filetype=yaml\n+name: Docs Release Build\n+\n+on:\n+  release:\n+    types:\n+      - published\n+jobs:\n+  docs:\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: install nix\n+        uses: cachix/install-nix-action@v17\n+        with:\n+          nix_path: nixpkgs=channel:nixos-unstable-small\n+\n+      - name: setup cachix\n+        uses: cachix/cachix-action@v10\n+        with:\n+          name: ibis\n+          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n+          extraPullNames: nix-community,poetry2nix\n+\n+      - name: Generate a GitHub token\n+        uses: tibdex/github-app-token@v1\n+        id: generate_token\n+        with:\n+          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n+          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n+\n+      - name: checkout\n+        uses: actions/checkout@v3\n+        with:\n+          fetch-depth: 0\n+          token: ${{ steps.generate_token.outputs.token }}\n+\n+      - name: Configure git info\n+        run: |\n+          set -euo pipefail\n+\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n+\n+      - name: Pull gh-pages changes\n+        run: |\n+          set -euo pipefail\n+\n+          git fetch origin gh-pages\n+          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+\n+      - name: build and push docs on tag\n+        run: |\n+          set -euo pipefail\n+\n+          nix develop -f shell.nix --keep-going -c \\\n+            mic deploy \\\n+              --push \\\n+              --rebase \\\n+              --update-aliases \\\n+              --prefix docs \\\n+              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n+              \""${GITHUB_REF_NAME}\"" latest\n"", ""diff --git a/clarity/src/vm/ast/errors.rs b/clarity/src/vm/ast/errors.rs\nindex 1b8cbd1..8903e6a 100644\n--- a/clarity/src/vm/ast/errors.rs\n+++ b/clarity/src/vm/ast/errors.rs\n@@ -88,6 +88,9 @@ pub enum ParseErrors {\n     ExpectedWhitespace,\n     // Notes\n     NoteToMatchThis(Token),\n+\n+    /// Should be an unreachable error\n+    UnexpectedParserFailure,\n }\n \n #[derive(Debug, PartialEq)]\n@@ -294,6 +297,7 @@ impl DiagnosableError for ParseErrors {\n             ParseErrors::IllegalUtf8String(s) => format!(\""illegal UTF8 string \\\""{}\\\""\"", s),\n             ParseErrors::ExpectedWhitespace => \""expected whitespace before expression\"".to_string(),\n             ParseErrors::NoteToMatchThis(token) => format!(\""to match this '{}'\"", token),\n+            ParseErrors::UnexpectedParserFailure => \""unexpected failure while parsing\"".to_string(),\n         }\n     }\n \ndiff --git a/clarity/src/vm/ast/parser/v2/mod.rs b/clarity/src/vm/ast/parser/v2/mod.rs\nindex 14b9b17..3114a69 100644\n--- a/clarity/src/vm/ast/parser/v2/mod.rs\n+++ b/clarity/src/vm/ast/parser/v2/mod.rs\n@@ -153,6 +153,17 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Get a reference to the last processed token. If there is no last token,\n+    ///  raises an UnexpectedParserFailure.\n+    fn peek_last_token(&self) -> ParseResult<&PlacedToken> {\n+        if self.next_token == 0 {\n+            return Err(ParseError::new(ParseErrors::UnexpectedParserFailure));\n+        }\n+        self.tokens\n+            .get(self.next_token - 1)\n+            .ok_or_else(|| ParseError::new(ParseErrors::UnexpectedParserFailure))\n+    }\n+\n     fn skip_to_end(&mut self) {\n         self.next_token = self.tokens.len();\n     }\n@@ -220,7 +231,7 @@ impl<'a> Parser<'a> {\n                     *whitespace = self.ignore_whitespace();\n                     Ok(None)\n                 } else {\n-                    let token = self.tokens[self.next_token - 1].clone();\n+                    let token = self.peek_last_token()?.clone();\n                     match token.token {\n                         Token::Rparen => {\n                             span.end_line = token.span.end_line;\n@@ -279,7 +290,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 self.add_diagnostic(\n@@ -359,7 +370,7 @@ impl<'a> Parser<'a> {\n                         // mimic parse_node_or_eof() behavior\n                         //  if last token was an EOF, error out the tuple\n                         //  if the last token was something else, just yield back to the parse loop\n-                        let last_token = self.tokens[self.next_token - 1].clone();\n+                        let last_token = self.peek_last_token()?.clone();\n                         match last_token.token {\n                             Token::Eof => {\n                                 // This indicates we have reached the end of the input.\n"", ""diff --git a/src/components/nav/test/basic/app-module.ts b/src/components/nav/test/basic/app-module.ts\nindex 467917a..375e662 100644\n--- a/src/components/nav/test/basic/app-module.ts\n+++ b/src/components/nav/test/basic/app-module.ts\n@@ -633,7 +633,7 @@ export class Tab3 {\n   }\n \n   presentModal() {\n-    //this.modalCtrl.create(MyModal).present();\n+    // this.modalCtrl.create(MyModal).present();\n   }\n \n   selectPrevious() {\n"", ""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n"", ""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n""]",5,"[""32845e1bbd1efb5dbc16f671049509a409ba25ce"", ""63eab619e6166eb6cab948028a7b89bf059dd878"", ""af880ac5b4fecbc6c4f3d1eee0d95f326e8bd9d1"", ""9be725fa3906323d4bc9788f54eccf74109d632b"", ""fd8e563cc19ca4684885d4692acee6bebcca4ada""]","[""cicd"", ""refactor"", ""docs"", ""fix"", ""feat""]"
"Fix typo,restructure ClusterTopology to track completed change,initialize threejs objects in defaultRef, to fix undefined type errors,update wrapping tests for v7,upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.","[""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n"", ""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n"", ""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n""]",5,"[""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2"", ""2561f4ade46fc9d59f289f328cc77733a6443697"", ""317f4eefecddfb1392ca71d551840f446feee302"", ""454003841aabeb74396d73541378bfa59c75b5db""]","[""docs"", ""refactor"", ""fix"", ""test"", ""build""]"
"update wrapping tests for v7,split release docs build into separate workflow,never call ""onStart"" prop when idle,add .nullif() example,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.","[""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/.github/workflows/ibis-docs-lint.yml b/.github/workflows/ibis-docs-lint.yml\nindex 753d57d..3e0aa15 100644\n--- a/.github/workflows/ibis-docs-lint.yml\n+++ b/.github/workflows/ibis-docs-lint.yml\n@@ -88,14 +88,14 @@ jobs:\n         run: poetry run pytest --benchmark-only --benchmark-json .benchmarks/output.json ibis/tests/benchmarks\n \n       - uses: tibdex/github-app-token@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         id: generate-token\n         with:\n           app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}\n           private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}\n \n       - uses: benchmark-action/github-action-benchmark@v1\n-        if: ${{ github.event_name != 'pull_request' }}\n+        if: ${{ github.event_name == 'push' }}\n         with:\n           tool: pytest\n           github-token: ${{ steps.generate-token.outputs.token }}\n@@ -107,6 +107,7 @@ jobs:\n \n   docs:\n     runs-on: ubuntu-latest\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n     needs:\n       # wait on benchmarks to prevent a race condition when pushing to the\n       # gh-pages branch\n@@ -124,51 +125,25 @@ jobs:\n           authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n           extraPullNames: nix-community,poetry2nix\n \n-      - name: Generate a GitHub token\n-        if: ${{ github.event_name == 'push' }}\n-        uses: tibdex/github-app-token@v1\n-        id: generate_token\n-        with:\n-          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n-          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n-\n-      - name: checkout\n-        if: ${{ github.event_name == 'push' }}\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          token: ${{ steps.generate_token.outputs.token }}\n-\n       - name: checkout\n-        if: ${{ github.event_name != 'push' }}\n         uses: actions/checkout@v3\n \n-      - name: Configure git info\n-        if: ${{ github.event_name == 'push' }}\n-        run: |\n-          set -euo pipefail\n-\n-          git config user.name 'ibis-docs-bot[bot]'\n-          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n-\n       - name: build docs\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c mkdocs build\n \n       - name: verify internal links\n-        if: ${{ github.event_name != 'push' }}\n         run: nix develop -f shell.nix --ignore-environment --keep-going -c just checklinks --offline --no-progress\n \n-      - name: Pull gh-pages changes\n+      - name: Configure git info\n         if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n-          git fetch origin gh-pages\n-          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n \n       - name: build and push dev docs\n-        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/') }}\n+        if: ${{ github.event_name == 'push' }}\n         run: |\n           set -euo pipefail\n \n@@ -180,19 +155,6 @@ jobs:\n               --message 'docs(dev): ibis@${{ github.sha }}' \\\n                 dev\n \n-      - name: build and push docs on tag\n-        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}\n-        run: |\n-          set -euo pipefail\n-\n-          nix develop -f shell.nix --keep-going -c \\\n-            mic deploy \\\n-              --push \\\n-              --rebase \\\n-              --prefix docs \\\n-              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n-              \""${GITHUB_REF_NAME}\"" latest\n-\n   simulate_release:\n     runs-on: ubuntu-latest\n     steps:\ndiff --git a/.github/workflows/ibis-docs-release.yml b/.github/workflows/ibis-docs-release.yml\nnew file mode 100644\nindex 0000000..da7ee49\n--- /dev/null\n+++ b/.github/workflows/ibis-docs-release.yml\n@@ -0,0 +1,63 @@\n+# vim: filetype=yaml\n+name: Docs Release Build\n+\n+on:\n+  release:\n+    types:\n+      - published\n+jobs:\n+  docs:\n+    concurrency: docs-${{ github.repository }}-${{ github.head_ref || github.sha }}\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: install nix\n+        uses: cachix/install-nix-action@v17\n+        with:\n+          nix_path: nixpkgs=channel:nixos-unstable-small\n+\n+      - name: setup cachix\n+        uses: cachix/cachix-action@v10\n+        with:\n+          name: ibis\n+          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}\n+          extraPullNames: nix-community,poetry2nix\n+\n+      - name: Generate a GitHub token\n+        uses: tibdex/github-app-token@v1\n+        id: generate_token\n+        with:\n+          app_id: ${{ secrets.DOCS_BOT_APP_ID }}\n+          private_key: ${{ secrets.DOCS_BOT_APP_PRIVATE_KEY }}\n+\n+      - name: checkout\n+        uses: actions/checkout@v3\n+        with:\n+          fetch-depth: 0\n+          token: ${{ steps.generate_token.outputs.token }}\n+\n+      - name: Configure git info\n+        run: |\n+          set -euo pipefail\n+\n+          git config user.name 'ibis-docs-bot[bot]'\n+          git config user.email 'ibis-docs-bot[bot]@users.noreply.github.com'\n+\n+      - name: Pull gh-pages changes\n+        run: |\n+          set -euo pipefail\n+\n+          git fetch origin gh-pages\n+          git update-ref refs/heads/gh-pages \""$(git rev-parse origin/gh-pages)\""\n+\n+      - name: build and push docs on tag\n+        run: |\n+          set -euo pipefail\n+\n+          nix develop -f shell.nix --keep-going -c \\\n+            mic deploy \\\n+              --push \\\n+              --rebase \\\n+              --update-aliases \\\n+              --prefix docs \\\n+              --message \""docs(release): ibis@${GITHUB_REF_NAME}\"" \\\n+              \""${GITHUB_REF_NAME}\"" latest\n"", ""diff --git a/packages/core/src/SpringValue.ts b/packages/core/src/SpringValue.ts\nindex 18494a8..cbc4f27 100644\n--- a/packages/core/src/SpringValue.ts\n+++ b/packages/core/src/SpringValue.ts\n@@ -596,11 +596,11 @@ export class SpringValue<T = any> extends AnimationValue<T> {\n   /** Notify change observers */\n   protected _onChange(value: T, idle = false) {\n     const anim = this.animation\n-    if (!anim.changed) {\n+    if (!anim.changed && !idle) {\n       anim.changed = true\n       // The \""onStart\"" prop is called on the first change after entering the\n       // frameloop, but never for immediate animations.\n-      if (anim.onStart && !anim.immediate) {\n+      if (anim.onStart) {\n         anim.onStart(this)\n       }\n     }\n"", ""diff --git a/ibis/expr/types/generic.py b/ibis/expr/types/generic.py\nindex 8dcbbe8..6ab52fe 100644\n--- a/ibis/expr/types/generic.py\n+++ b/ibis/expr/types/generic.py\n@@ -370,6 +370,8 @@ class Value(Expr):\n         Commonly used to avoid divide-by-zero problems by replacing zero with\n         `NULL` in the divisor.\n \n+        Equivalent to `(self == null_if_expr).ifelse(ibis.null(), self)`.\n+\n         Parameters\n         ----------\n         null_if_expr\n@@ -379,6 +381,36 @@ class Value(Expr):\n         -------\n         Value\n             Value expression\n+\n+        Examples\n+        --------\n+        >>> import ibis\n+        >>> ibis.options.interactive = True\n+        >>> vals = ibis.examples.penguins.fetch().head(5).sex\n+        >>> vals\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 sex    \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 male   \u2502\n+        \u2502 female \u2502\n+        \u2502 female \u2502\n+        \u2502 NULL   \u2502\n+        \u2502 female \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n+        >>> vals.nullif(\""male\"")\n+        \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n+        \u2503 NullIf(sex, 'male') \u2503\n+        \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n+        \u2502 string              \u2502\n+        \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2502 female              \u2502\n+        \u2502 NULL                \u2502\n+        \u2502 female              \u2502\n+        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \""\""\""\n         return ops.NullIf(self, null_if_expr).to_expr()\n \n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n""]",5,"[""317f4eefecddfb1392ca71d551840f446feee302"", ""32845e1bbd1efb5dbc16f671049509a409ba25ce"", ""c8e0ae8612df3d6f2831acc004aaac332f6105e4"", ""6d405dfc1675dcad64a2dfac0c0cb0fb28381d21"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c""]","[""test"", ""cicd"", ""fix"", ""docs"", ""refactor""]"
"spring version, core version,only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,verify checkpoint listeners are notified,update `cargo-make` for `v0.35.3`,add getter for protocol id","[""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n"", ""diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 5e125e3..52d9b6f 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -14,6 +14,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n * Fix: resizing/scrolling through heavily wrapped panes no longer hangs (https://github.com/zellij-org/zellij/pull/814)\n * Terminal compatibility: properly handle HOME/END keys in eg. vim/zsh (https://github.com/zellij-org/zellij/pull/815)\n * Fix: Typo (https://github.com/zellij-org/zellij/pull/821)\n+* Fix: Update `cargo-make` instructions post `v0.35.3` (https://github.com/zellij-org/zellij/pull/819)\n \n ## [0.19.0] - 2021-10-20\n * Fix: Prevent text overwrite when scrolled up (https://github.com/zellij-org/zellij/pull/655)\n"", ""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n""]",5,"[""c55591ba157298a9c5816693c102a89dfd058830"", ""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""e0198f74b81da3663144cfe1d971939319f82a0f"", ""0cfc5633d37ea06f645649138323f1820e18bdee"", ""dc5238b2bda98a7c4f2fe9584fc3b0191a408109""]","[""build"", ""cicd"", ""test"", ""docs"", ""feat""]"
"export a modal transition preset,add getter for protocol id,skip flaky test,initialize threejs objects in defaultRef, to fix undefined type errors,add a branch name to Slack notifications (#14793)","[""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n"", ""diff --git a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\nindex ad0015f..68624d8 100644\n--- a/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n+++ b/transport/src/main/java/org/camunda/tngp/transport/protocol/TransportHeaderDescriptor.java\n@@ -50,4 +50,9 @@ public class TransportHeaderDescriptor\n         return this;\n     }\n \n+    public int protocolId()\n+    {\n+        return buffer.getShort(PROTOCOL_ID_OFFSET);\n+    }\n+\n }\n"", ""diff --git a/test/browser-pool/browser-pool.test.ts b/test/browser-pool/browser-pool.test.ts\nindex 9f21322..7a011b5 100644\n--- a/test/browser-pool/browser-pool.test.ts\n+++ b/test/browser-pool/browser-pool.test.ts\n@@ -128,7 +128,8 @@ describe.each([\n             expect(page.close).toBeDefined();\n         });\n \n-        test('should allow early aborting in case of outer timeout', async () => {\n+        // TODO: this test is very flaky in the CI\n+        test.skip('should allow early aborting in case of outer timeout', async () => {\n             const timeout = browserPool.operationTimeoutMillis;\n             browserPool.operationTimeoutMillis = 500;\n             // @ts-expect-error mocking private method\n"", ""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n""]",5,"[""535708ae50aecb452560a23356fd396f99ef13a2"", ""dc5238b2bda98a7c4f2fe9584fc3b0191a408109"", ""e2e8ad25854bd1e7cdbc7f50b50bbd99e04ad47d"", ""2561f4ade46fc9d59f289f328cc77733a6443697"", ""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da""]","[""refactor"", ""feat"", ""test"", ""fix"", ""cicd""]"
"add a branch name to Slack notifications (#14793),add spacing in comment fix lint (#8555),remove appear css animation,docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>,fixed docker link tests","[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n"", ""diff --git a/src/components/nav/test/basic/app-module.ts b/src/components/nav/test/basic/app-module.ts\nindex 467917a..375e662 100644\n--- a/src/components/nav/test/basic/app-module.ts\n+++ b/src/components/nav/test/basic/app-module.ts\n@@ -633,7 +633,7 @@ export class Tab3 {\n   }\n \n   presentModal() {\n-    //this.modalCtrl.create(MyModal).present();\n+    // this.modalCtrl.create(MyModal).present();\n   }\n \n   selectPrevious() {\n"", ""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n"", ""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n"", ""diff --git a/pipeline/docker/docker_test.go b/pipeline/docker/docker_test.go\nindex 2be176f..b43c12b 100644\n--- a/pipeline/docker/docker_test.go\n+++ b/pipeline/docker/docker_test.go\n@@ -271,7 +271,7 @@ func TestLinkDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n@@ -304,7 +304,7 @@ func TestLinkTwoLevelDirectory(t *testing.T) {\n \t\tt.Log(\""Cannot setup test file\"")\n \t\tt.Fail()\n \t}\n-\terr = directoryLink(srcDir, dstDir, nil)\n+\terr = link(srcDir, dstDir)\n \tif err != nil {\n \t\tt.Log(\""Failed to link: \"", err)\n \t\tt.Fail()\n""]",5,"[""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da"", ""af880ac5b4fecbc6c4f3d1eee0d95f326e8bd9d1"", ""47ef9104e4a89e80d7cc6c1950bc080841da4a7b"", ""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf"", ""c7b25726df94a2530c9b1c0d2b6a0acaa103822f""]","[""cicd"", ""docs"", ""refactor"", ""build"", ""test""]"
"upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.,added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,make it mode less,xfail on to_parquet and to_csv that use pyarrow write options,support use meta key select multiple element","[""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n"", ""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/core/src/components/slides/slides.tsx b/core/src/components/slides/slides.tsx\nindex 48fd53f..d5c2f75 100644\n--- a/core/src/components/slides/slides.tsx\n+++ b/core/src/components/slides/slides.tsx\n@@ -1,7 +1,6 @@\n import { Component, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n \n import { Mode } from '../../interface.js';\n-import { createThemedClasses } from '../../utils/theme.js';\n \n import { Swiper } from './vendor/swiper.js';\n \n@@ -15,6 +14,7 @@ import { Swiper } from './vendor/swiper.js';\n   shadow: true\n })\n export class Slides {\n+\n   private container!: HTMLElement;\n   private swiper: any;\n \n@@ -391,12 +391,6 @@ export class Slides {\n     return { ...swiperOptions, ...this.options, ...eventOptions };\n   }\n \n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'slides')\n-    };\n-  }\n-\n   render() {\n     return (\n       <div class=\""swiper-container\"" ref={el => this.container = el as HTMLElement }>\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.scss b/core/src/components/thumbnail/thumbnail.ios.scss\ndeleted file mode 100644\nindex e3add45..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.ios.vars\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-ios-width};\n-  --border-radius: #{$thumbnail-ios-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.vars.scss b/core/src/components/thumbnail/thumbnail.ios.vars.scss\ndeleted file mode 100644\nindex 85d53e5..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.ios\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-ios-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-ios-height:                  $thumbnail-ios-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-ios-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.md.scss b/core/src/components/thumbnail/thumbnail.md.scss\ndeleted file mode 100644\nindex 0fbb2ca..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.md.vars\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-md-width};\n-  --border-radius: #{$thumbnail-md-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.md.vars.scss b/core/src/components/thumbnail/thumbnail.md.vars.scss\ndeleted file mode 100644\nindex 94e48b2..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.md\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-md-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-md-height:                  $thumbnail-md-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-md-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.scss b/core/src/components/thumbnail/thumbnail.scss\nindex 8ac3a22..8af268d 100644\n--- a/core/src/components/thumbnail/thumbnail.scss\n+++ b/core/src/components/thumbnail/thumbnail.scss\n@@ -9,6 +9,8 @@\n    * @prop --border-radius: Border radius of the thumbnail\n    * @prop --size: Size of the thumbnail\n    */\n+  --size: 48px;\n+  --border-radius: 0;\n \n   @include border-radius(var(--border-radius));\n \ndiff --git a/core/src/components/thumbnail/thumbnail.tsx b/core/src/components/thumbnail/thumbnail.tsx\nindex 50ff2c2..de76593 100644\n--- a/core/src/components/thumbnail/thumbnail.tsx\n+++ b/core/src/components/thumbnail/thumbnail.tsx\n@@ -1,25 +1,11 @@\n import { Component } from '@stencil/core';\n \n-import { Mode } from '../../interface';\n-import { createThemedClasses } from '../../utils/theme';\n-\n @Component({\n   tag: 'ion-thumbnail',\n-  styleUrls: {\n-    ios: 'thumbnail.ios.scss',\n-    md: 'thumbnail.md.scss'\n-  },\n+  styleUrl: 'thumbnail.scss',\n   shadow: true\n })\n export class Thumbnail {\n-  mode!: Mode;\n-\n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'thumbnail')\n-    };\n-  }\n-\n   render() {\n     return <slot></slot>;\n   }\n"", ""diff --git a/ibis/backends/tests/test_export.py b/ibis/backends/tests/test_export.py\nindex 4d536d7..5bb9775 100644\n--- a/ibis/backends/tests/test_export.py\n+++ b/ibis/backends/tests/test_export.py\n@@ -222,18 +222,23 @@ def test_table_to_parquet(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\""), [({\""version\"": \""1.0\""}), ({\""version\"": \""2.6\""})])\n-def test_table_to_parquet_writer_kwargs(kwargs, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.NotSupportedError,\n+)\n+@pytest.mark.parametrize(\""version\"", [\""1.0\"", \""2.6\""])\n+def test_table_to_parquet_writer_kwargs(version, tmp_path, backend, awards_players):\n     outparquet = tmp_path / \""out.parquet\""\n-    awards_players.to_parquet(outparquet, **kwargs)\n+    awards_players.to_parquet(outparquet, version=version)\n \n     df = pd.read_parquet(outparquet)\n \n     backend.assert_frame_equal(awards_players.to_pandas(), df)\n \n-    file = pa.parquet.ParquetFile(outparquet)\n+    md = pa.parquet.read_metadata(outparquet)\n \n-    assert file.metadata.format_version == kwargs[\""version\""]\n+    assert md.format_version == version\n \n \n @pytest.mark.notimpl(\n@@ -316,14 +321,20 @@ def test_table_to_csv(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\"", \""delimiter\""), [({\""write_options\"": pcsv.WriteOptions(delimiter=\"";\"")}, \"";\""), ({\""write_options\"": pcsv.WriteOptions(delimiter=\""\\t\"")}, \""\\t\"")])\n-def test_table_to_csv_writer_kwargs(kwargs, delimiter, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.ProgrammingError,\n+)\n+@pytest.mark.parametrize(\""delimiter\"", [\"";\"", \""\\t\""], ids=[\""semicolon\"", \""tab\""])\n+def test_table_to_csv_writer_kwargs(delimiter, tmp_path, awards_players):\n     outcsv = tmp_path / \""out.csv\""\n     # avoid pandas NaNonense\n     awards_players = awards_players.select(\""playerID\"", \""awardID\"", \""yearID\"", \""lgID\"")\n \n-    awards_players.to_csv(outcsv, **kwargs)\n-    pd.read_csv(outcsv, delimiter=delimiter)\n+    awards_players.to_csv(outcsv, write_options=pcsv.WriteOptions(delimiter=delimiter))\n+    df = pd.read_csv(outcsv, delimiter=delimiter, nrows=1)\n+    assert len(df) == 1\n \n \n @pytest.mark.parametrize(\n"", ""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n""]",5,"[""454003841aabeb74396d73541378bfa59c75b5db"", ""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""771857b1df9470ebc15357e8879118a72c649d5b"", ""bedc7950b24c37809e36a585b7985d5aa5e3e458"", ""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8""]","[""build"", ""docs"", ""refactor"", ""test"", ""feat""]"
"remove ubuntu-latest from job title where that is the only os,add props to get color and label from a route,fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.,licensing,add benchmark for known-slow table expression","[""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n"", ""diff --git a/src/components/BottomNavigation.js b/src/components/BottomNavigation.js\nindex 1b72302..7d8ea75 100644\n--- a/src/components/BottomNavigation.js\n+++ b/src/components/BottomNavigation.js\n@@ -24,8 +24,8 @@ const AnimatedPaper = Animated.createAnimatedComponent(Paper);\n \n type Route = {\n   key: string,\n-  title: string,\n-  icon: IconSource,\n+  title?: string,\n+  icon?: IconSource,\n   color?: string,\n };\n \n@@ -51,7 +51,7 @@ type Props<T> = {\n    * - `key`: a unique key to identify the route\n    * - `title`: title of the route to use as the tab label\n    * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n-   * - `color`: color to use as background color for shifting bottom navigation (optional)\n+   * - `color`: color to use as background color for shifting bottom navigation\n    *\n    * Example:\n    *\n@@ -115,11 +115,27 @@ type Props<T> = {\n   /**\n    * Callback which returns a React Element to be used as tab icon.\n    */\n-  renderIcon?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderIcon?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n   /**\n    * Callback which React Element to be used as tab label.\n    */\n-  renderLabel?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderLabel?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n+  /**\n+   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n+   */\n+  getLabelText?: (props: { route: T }) => string,\n+  /**\n+   * Get color for the tab, uses `route.color` by default.\n+   */\n+  getColor?: (props: { route: T }) => string,\n   /**\n    * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n    */\n@@ -159,6 +175,10 @@ type State = {\n    */\n   ripple: Animated.Value,\n   /**\n+   * Animation for the touch feedback, used to determine it's scale and opacity.\n+   */\n+  touch: Animated.Value,\n+  /**\n    * Layout of the tab bar. The width is used to determine the size and position of the ripple.\n    */\n   layout: { height: number, width: number, measured: boolean },\n@@ -173,7 +193,7 @@ const MIN_SHIFT_AMOUNT = 10;\n const MIN_TAB_WIDTH = 96;\n const MAX_TAB_WIDTH = 168;\n const BAR_HEIGHT = 56;\n-const SMALL_RIPPLE_SIZE = 72;\n+const SMALL_RIPPLE_SIZE = 96;\n const ACTIVE_LABEL_SIZE = 14;\n const INACTIVE_LABEL_SIZE = 12;\n \n@@ -251,6 +271,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ),\n       index: new Animated.Value(index),\n       ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n+      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n       layout: { height: 0, width: 0, measured: false },\n       previous: 0,\n     };\n@@ -349,6 +370,15 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n   _handleTabPress = (index: number) => {\n     const { navigationState } = this.props;\n \n+    this.state.touch.setValue(MIN_RIPPLE_SCALE);\n+\n+    Animated.timing(this.state.touch, {\n+      toValue: 1,\n+      duration: 300,\n+      easing: Easing.in(Easing.sin),\n+      useNativeDriver: true,\n+    }).start();\n+\n     if (index !== navigationState.index) {\n       this.props.onIndexChange(index);\n     }\n@@ -376,6 +406,8 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       renderScene,\n       renderIcon,\n       renderLabel,\n+      getLabelText = ({ route }) => route.title,\n+      getColor = ({ route }) => route.color,\n       barStyle,\n       style,\n       theme,\n@@ -400,7 +432,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ? this.state.index.interpolate({\n           inputRange: routes.map((_, i) => i),\n           outputRange: routes.map(\n-            route => route.color || approxBackgroundColor\n+            route => getColor({ route }) || approxBackgroundColor\n           ),\n         })\n       : approxBackgroundColor;\n@@ -416,7 +448,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n           .rgb()\n           .string();\n \n-    const rippleColor = color(textColor)\n+    const touchColor = color(textColor)\n       .alpha(0.12)\n       .rgb()\n       .string();\n@@ -430,22 +462,10 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n \n     // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n     // We need to move it from the left to the active tab and also account for how much that tab has shifted.\n-    const rippleShift =\n-      navigationState.index * tabWidth +\n-      tabWidth / 2 +\n-      this._calculateShift(\n-        this.state.previous,\n-        navigationState.index,\n-        routes.length\n-      );\n \n     return (\n       <View\n-        style={[\n-          styles.container,\n-          { backgroundColor: theme.dark ? white : black },\n-          style,\n-        ]}\n+        style={[styles.container, style]}\n         onLayout={this._handleLayout}\n         pointerEvents={layout.measured ? 'auto' : 'none'}\n       >\n@@ -485,25 +505,30 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n             style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n           >\n             {shifting ? (\n-              // Large ripple with the backround color\n               <Animated.View\n                 pointerEvents=\""none\""\n                 style={[\n                   styles.ripple,\n                   {\n                     // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - layout.width / 2,\n-                    left: rippleShift - layout.width / 2,\n-                    height: layout.width,\n-                    width: layout.width,\n+                    top: BAR_HEIGHT / 2 - layout.width / 8,\n+                    left:\n+                      navigationState.index * tabWidth +\n+                      tabWidth / 2 -\n+                      layout.width / 8,\n+                    height: layout.width / 4,\n+                    width: layout.width / 4,\n                     borderRadius: layout.width / 2,\n-                    backgroundColor: routes[navigationState.index].color,\n+                    backgroundColor: getColor({\n+                      route: routes[navigationState.index],\n+                    }),\n                     transform: [\n+                      { translateX: this.state.shifts[navigationState.index] },\n                       {\n                         // Scale to twice the size  to ensure it covers the whole tab bar\n                         scale: this.state.ripple.interpolate({\n                           inputRange: [0, 1],\n-                          outputRange: [0, 2],\n+                          outputRange: [0, 8],\n                         }),\n                       },\n                     ],\n@@ -515,36 +540,36 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                 ]}\n               />\n             ) : null}\n-            {shifting ? (\n-              // Small subtle ripple on touch\n-              <Animated.View\n-                pointerEvents=\""none\""\n-                style={[\n-                  styles.ripple,\n-                  {\n-                    // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n-                    left: rippleShift - SMALL_RIPPLE_SIZE / 2,\n-                    height: SMALL_RIPPLE_SIZE,\n-                    width: SMALL_RIPPLE_SIZE,\n-                    borderRadius: SMALL_RIPPLE_SIZE / 2,\n-                    backgroundColor: rippleColor,\n-                    transform: [\n-                      {\n-                        scale: this.state.ripple.interpolate({\n-                          inputRange: [0, 0.5, 1],\n-                          outputRange: [0, 1, 1],\n-                        }),\n-                      },\n-                    ],\n-                    opacity: this.state.ripple.interpolate({\n-                      inputRange: [0, MIN_RIPPLE_SCALE, 0.25, 0.5],\n-                      outputRange: [0, 0, 1, 0],\n-                    }),\n-                  },\n-                ]}\n-              />\n-            ) : null}\n+            <Animated.View\n+              pointerEvents=\""none\""\n+              style={[\n+                styles.ripple,\n+                {\n+                  // Set top and left values so that the ripple's center is same as the tab's center\n+                  top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n+                  left:\n+                    navigationState.index * tabWidth +\n+                    tabWidth / 2 -\n+                    SMALL_RIPPLE_SIZE / 2,\n+                  height: SMALL_RIPPLE_SIZE,\n+                  width: SMALL_RIPPLE_SIZE,\n+                  borderRadius: SMALL_RIPPLE_SIZE / 2,\n+                  backgroundColor: touchColor,\n+                  transform: [\n+                    {\n+                      translateX: shifting\n+                        ? this.state.shifts[navigationState.index]\n+                        : 0,\n+                    },\n+                    { scale: this.state.touch },\n+                  ],\n+                  opacity: this.state.touch.interpolate({\n+                    inputRange: [0, 0.5, 1],\n+                    outputRange: [0, 1, 0],\n+                  }),\n+                },\n+              ]}\n+            />\n             {routes.map((route, index) => {\n               const shift = this.state.shifts[index];\n               const focused = this.state.tabs[index];\n@@ -607,7 +632,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderIcon ? (\n-                          renderIcon({ route, focused: true })\n+                          renderIcon({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <Icon\n                             style={styles.icon}\n@@ -625,7 +654,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderIcon ? (\n-                            renderIcon({ route, focused: false })\n+                            renderIcon({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <Icon\n                               style={styles.icon}\n@@ -652,7 +685,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderLabel ? (\n-                          renderLabel({ route, focused: true })\n+                          renderLabel({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <AnimatedText\n                             style={[\n@@ -662,7 +699,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                               },\n                             ]}\n                           >\n-                            {route.title}\n+                            {getLabelText({ route })}\n                           </AnimatedText>\n                         )}\n                       </Animated.View>\n@@ -674,7 +711,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderLabel ? (\n-                            renderLabel({ route, focused: false })\n+                            renderLabel({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <AnimatedText\n                               style={[\n@@ -684,7 +725,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                                 },\n                               ]}\n                             >\n-                              {route.title}\n+                              {getLabelText({ route })}\n                             </AnimatedText>\n                           )}\n                         </Animated.View>\n"", ""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n""]",5,"[""74e9de5ec97dc013a52aa063dff0f40ac74c407b"", ""ded26d768ff432ad3bde3c0aa1e95ce50726100a"", ""9be725fa3906323d4bc9788f54eccf74109d632b"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""e9617f0854030e70365eb264bcb3b58078e79e9e""]","[""cicd"", ""feat"", ""fix"", ""docs"", ""test""]"
"add numberOfLines prop to DataTableTitle (#863)

Closes #848,remove deprecated settings

Removes deprecated ZEEBE_HOST environment variable, and removes
unnecessary log level environment variable, since it's already the
default in the log file,setup jest and add m.ts tests,add comments for the Handler,initialize threejs objects in defaultRef, to fix undefined type errors","[""diff --git a/src/components/DataTable/DataTableTitle.js b/src/components/DataTable/DataTableTitle.js\nindex bfcf07e..d764fd5 100644\n--- a/src/components/DataTable/DataTableTitle.js\n+++ b/src/components/DataTable/DataTableTitle.js\n@@ -27,6 +27,10 @@ type Props = React.ElementConfig<typeof TouchableWithoutFeedback> & {|\n    */\n   sortDirection?: 'ascending' | 'descending',\n   /**\n+   * The number of lines to show.\n+   */\n+  numberOfLines?: number,\n+  /**\n    * Function to execute on press.\n    */\n   onPress?: () => mixed,\n@@ -44,6 +48,10 @@ type State = {\n class DataTableTitle extends React.Component<Props, State> {\n   static displayName = 'DataTable.Title';\n \n+  static defaultProps = {\n+    numberOfLines: 1,\n+  };\n+\n   state = {\n     spinAnim: new Animated.Value(\n       this.props.sortDirection === 'ascending' ? 0 : 1\n@@ -70,6 +78,7 @@ class DataTableTitle extends React.Component<Props, State> {\n       sortDirection,\n       theme,\n       style,\n+      numberOfLines,\n       ...rest\n     } = this.props;\n \n@@ -99,7 +108,7 @@ class DataTableTitle extends React.Component<Props, State> {\n               styles.cell,\n               sortDirection ? styles.sorted : { color: textColor },\n             ]}\n-            numberOfLines={1}\n+            numberOfLines={numberOfLines}\n           >\n             {children}\n           </Text>\n"", ""diff --git a/Dockerfile b/Dockerfile\nindex 6762a39..7f380cd 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -34,7 +34,6 @@ RUN wget -O - https://github.com/jvm-profiling-tools/async-profiler/releases/dow\n FROM ${APP_ENV} as app\n \n ENV ZB_HOME=/usr/local/zeebe \\\n-    ZEEBE_LOG_LEVEL=info \\\n     ZEEBE_BROKER_GATEWAY_NETWORK_HOST=0.0.0.0 \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \""${ZB_HOME}/bin:${PATH}\""\ndiff --git a/docker/utils/startup.sh b/docker/utils/startup.sh\nindex bc8d2fc..0fcde2b 100755\n--- a/docker/utils/startup.sh\n+++ b/docker/utils/startup.sh\n@@ -1,17 +1,14 @@\n #!/bin/bash -xeu\n \n-# legacy support\n-# This environment variable was used to set the gatewway cluster host in standalone and embedded mode.\n-# Now, there are two dedicated environment variables for the two different deployment scenarios.\n-export ZEEBE_HOST=${ZEEBE_HOST:-$(hostname -i)}\n-# Legacy support\n+HOST=$(hostname -i)\n \n if [ \""$ZEEBE_STANDALONE_GATEWAY\"" = \""true\"" ]; then\n-    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_GATEWAY_NETWORK_HOST=${ZEEBE_GATEWAY_NETWORK_HOST:-${HOST}}\n+    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${HOST}}\n \n     exec /usr/local/zeebe/bin/gateway\n else\n-    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${HOST}}\n     export ZEEBE_BROKER_GATEWAY_CLUSTER_HOST=${ZEEBE_BROKER_GATEWAY_CLUSTER_HOST:-${ZEEBE_BROKER_NETWORK_HOST}}\n \n     exec /usr/local/zeebe/bin/broker\n"", ""diff --git a/src/__test__/m.spec.ts b/src/__test__/m.spec.ts\nindex ff974a6..ba59baf 100644\n--- a/src/__test__/m.spec.ts\n+++ b/src/__test__/m.spec.ts\n@@ -89,9 +89,9 @@ describe('.m', () => {\n     );\n   });\n \n-  it('should attach ns to props', () => {\n+  it('should attach ns to props with children with props', () => {\n     const vnode = {\n-      tag: 'div',\n+      tag: 'svg',\n       props: {},\n       children: [\n         'foo',\n@@ -105,7 +105,7 @@ describe('.m', () => {\n     };\n     ns(vnode.tag, vnode.props, vnode.children);\n     expect(vnode).toEqual({\n-      tag: 'div',\n+      tag: 'svg',\n       props: { ns: 'http://www.w3.org/2000/svg' },\n       children: [\n         'foo',\n@@ -119,4 +119,28 @@ describe('.m', () => {\n       ],\n     });\n   });\n+\n+  it('should attach ns to props with children without props', () => {\n+    const vnode = {\n+      tag: 'svg',\n+      props: {},\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    };\n+    ns(vnode.tag, vnode.props, vnode.children);\n+    expect(vnode).toEqual({\n+      tag: 'svg',\n+      props: { ns: 'http://www.w3.org/2000/svg' },\n+      children: [\n+        'foo',\n+        {\n+          tag: 'div',\n+        },\n+      ],\n+    });\n+  });\n });\n"", ""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n"", ""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n""]",5,"[""f9a094918b62534614c47aa8a13f33aec751a1e0"", ""e4a11fd5c34942ba12737f1c8c084489428ee274"", ""229b53a632ea97d47c4be11f096bdd828fb415d8"", ""036a0ff49a7dade0e04c9c07071a1ff49133ee24"", ""2561f4ade46fc9d59f289f328cc77733a6443697""]","[""feat"", ""build"", ""test"", ""docs"", ""fix""]"
"remove deprecated settings

Removes deprecated ZEEBE_HOST environment variable, and removes
unnecessary log level environment variable, since it's already the
default in the log file,added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,add benchmark for known-slow table expression,allow disabling dynamic queue,run pyspark tests in parallel","[""diff --git a/Dockerfile b/Dockerfile\nindex 6762a39..7f380cd 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -34,7 +34,6 @@ RUN wget -O - https://github.com/jvm-profiling-tools/async-profiler/releases/dow\n FROM ${APP_ENV} as app\n \n ENV ZB_HOME=/usr/local/zeebe \\\n-    ZEEBE_LOG_LEVEL=info \\\n     ZEEBE_BROKER_GATEWAY_NETWORK_HOST=0.0.0.0 \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \""${ZB_HOME}/bin:${PATH}\""\ndiff --git a/docker/utils/startup.sh b/docker/utils/startup.sh\nindex bc8d2fc..0fcde2b 100755\n--- a/docker/utils/startup.sh\n+++ b/docker/utils/startup.sh\n@@ -1,17 +1,14 @@\n #!/bin/bash -xeu\n \n-# legacy support\n-# This environment variable was used to set the gatewway cluster host in standalone and embedded mode.\n-# Now, there are two dedicated environment variables for the two different deployment scenarios.\n-export ZEEBE_HOST=${ZEEBE_HOST:-$(hostname -i)}\n-# Legacy support\n+HOST=$(hostname -i)\n \n if [ \""$ZEEBE_STANDALONE_GATEWAY\"" = \""true\"" ]; then\n-    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_GATEWAY_NETWORK_HOST=${ZEEBE_GATEWAY_NETWORK_HOST:-${HOST}}\n+    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${HOST}}\n \n     exec /usr/local/zeebe/bin/gateway\n else\n-    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${HOST}}\n     export ZEEBE_BROKER_GATEWAY_CLUSTER_HOST=${ZEEBE_BROKER_GATEWAY_CLUSTER_HOST:-${ZEEBE_BROKER_NETWORK_HOST}}\n \n     exec /usr/local/zeebe/bin/broker\n"", ""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n"", ""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex e23088e..9708157 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -202,11 +202,11 @@ jobs:\n         run: poetry install --without dev --without docs --extras ${{ matrix.backend.name }} --extras geospatial\n \n       - name: \""run parallel tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name != 'pyspark' && matrix.backend.name != 'impala'\n+        if: matrix.backend.name != 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }} --numprocesses auto --dist=loadgroup\n \n       - name: \""run serial tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name == 'pyspark' || matrix.backend.name == 'impala'\n+        if: matrix.backend.name == 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }}\n         env:\n           IBIS_TEST_NN_HOST: localhost\n""]",5,"[""e4a11fd5c34942ba12737f1c8c084489428ee274"", ""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""e9617f0854030e70365eb264bcb3b58078e79e9e"", ""9ef5c0d14193a9abb09b39856f58477d1f4b0d77"", ""4cbbd2552ba0de273e1dfe7d453c5b3efed751a3""]","[""build"", ""docs"", ""test"", ""fix"", ""cicd""]"
"add numberOfLines prop to DataTableTitle (#863)

Closes #848,initialize threejs objects in defaultRef, to fix undefined type errors,do not use scripts and binaries from the libcc repo,add comments for the Handler,ensure checksum persist flushes to disk","[""diff --git a/src/components/DataTable/DataTableTitle.js b/src/components/DataTable/DataTableTitle.js\nindex bfcf07e..d764fd5 100644\n--- a/src/components/DataTable/DataTableTitle.js\n+++ b/src/components/DataTable/DataTableTitle.js\n@@ -27,6 +27,10 @@ type Props = React.ElementConfig<typeof TouchableWithoutFeedback> & {|\n    */\n   sortDirection?: 'ascending' | 'descending',\n   /**\n+   * The number of lines to show.\n+   */\n+  numberOfLines?: number,\n+  /**\n    * Function to execute on press.\n    */\n   onPress?: () => mixed,\n@@ -44,6 +48,10 @@ type State = {\n class DataTableTitle extends React.Component<Props, State> {\n   static displayName = 'DataTable.Title';\n \n+  static defaultProps = {\n+    numberOfLines: 1,\n+  };\n+\n   state = {\n     spinAnim: new Animated.Value(\n       this.props.sortDirection === 'ascending' ? 0 : 1\n@@ -70,6 +78,7 @@ class DataTableTitle extends React.Component<Props, State> {\n       sortDirection,\n       theme,\n       style,\n+      numberOfLines,\n       ...rest\n     } = this.props;\n \n@@ -99,7 +108,7 @@ class DataTableTitle extends React.Component<Props, State> {\n               styles.cell,\n               sortDirection ? styles.sorted : { color: textColor },\n             ]}\n-            numberOfLines={1}\n+            numberOfLines={numberOfLines}\n           >\n             {children}\n           </Text>\n"", ""diff --git a/src/canvas.tsx b/src/canvas.tsx\nindex a4ebdef..0242035 100644\n--- a/src/canvas.tsx\n+++ b/src/canvas.tsx\n@@ -18,14 +18,14 @@ export type CanvasContext = {\n   setManual: (takeOverRenderloop: boolean) => any\n   setDefaultCamera: (camera: THREE.Camera) => any\n   invalidate: () => any\n+  gl: THREE.WebGLRenderer\n+  camera: THREE.Camera\n+  raycaster: THREE.Raycaster\n+  mouse: THREE.Vector2\n+  scene: THREE.Scene\n   canvas?: React.MutableRefObject<any>\n-  gl?: THREE.WebGLRenderer\n-  camera?: THREE.Camera\n-  raycaster?: THREE.Raycaster\n-  mouse?: THREE.Vector2\n-  scene?: THREE.Scene\n-  size?: { left: number; top: number; width: number; height: number }\n   canvasRect?: DOMRectReadOnly\n+  size?: { left: number; top: number; width: number; height: number }\n   viewport?: { width: number; height: number }\n }\n \n@@ -69,14 +69,14 @@ const defaultRef: CanvasContext = {\n   setManual: () => {},\n   setDefaultCamera: () => {},\n   invalidate: () => {},\n+  gl: new THREE.WebGLRenderer(),\n+  camera: new THREE.Camera(),\n+  raycaster: new THREE.Raycaster(),\n+  mouse: new THREE.Vector2(),\n+  scene: new THREE.Scene(),\n   canvas: undefined,\n-  gl: undefined,\n-  camera: undefined,\n-  raycaster: undefined,\n-  mouse: undefined,\n-  scene: undefined,\n-  size: undefined,\n   canvasRect: undefined,\n+  size: undefined,\n   viewport: undefined,\n }\n \ndiff --git a/types/index.d.ts b/types/index.d.ts\nindex 1b130ce..2cb2954 100644\n--- a/types/index.d.ts\n+++ b/types/index.d.ts\n@@ -25,19 +25,19 @@ declare module 'canvas' {\n     setManual: (takeOverRenderloop: boolean) => any\n     setDefaultCamera: (camera: THREE.Camera) => any\n     invalidate: () => any\n+    gl: THREE.WebGLRenderer\n+    camera: THREE.Camera\n+    raycaster: THREE.Raycaster\n+    mouse: THREE.Vector2\n+    scene: THREE.Scene\n     canvas?: React.MutableRefObject<any>\n-    gl?: THREE.WebGLRenderer\n-    camera?: THREE.Camera\n-    raycaster?: THREE.Raycaster\n-    mouse?: THREE.Vector2\n-    scene?: THREE.Scene\n+    canvasRect?: DOMRectReadOnly\n     size?: {\n       left: number\n       top: number\n       width: number\n       height: number\n     }\n-    canvasRect?: DOMRectReadOnly\n     viewport?: {\n       width: number\n       height: number\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n"", ""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n""]",5,"[""f9a094918b62534614c47aa8a13f33aec751a1e0"", ""2561f4ade46fc9d59f289f328cc77733a6443697"", ""45837af24a33308a70a3454f0f650f9fe728e272"", ""036a0ff49a7dade0e04c9c07071a1ff49133ee24"", ""b7ce2894fd1794064bd6db4ed730bb6cb7728739""]","[""feat"", ""fix"", ""cicd"", ""docs"", ""test""]"
"add props to get color and label from a route,get tenant authorizations in job state

Get the authorized tenants list in the job state to
avoid code duplication in the various job processors.

This also allows us to be more flexible in the future
if we expand the authorizations and how they are used
for getting jobs.,docker PG version upgrade

Signed-off-by: Raju Udava <86527202+dstala@users.noreply.github.com>,update flushed index before truncating,add comments for the Handler","[""diff --git a/src/components/BottomNavigation.js b/src/components/BottomNavigation.js\nindex 1b72302..7d8ea75 100644\n--- a/src/components/BottomNavigation.js\n+++ b/src/components/BottomNavigation.js\n@@ -24,8 +24,8 @@ const AnimatedPaper = Animated.createAnimatedComponent(Paper);\n \n type Route = {\n   key: string,\n-  title: string,\n-  icon: IconSource,\n+  title?: string,\n+  icon?: IconSource,\n   color?: string,\n };\n \n@@ -51,7 +51,7 @@ type Props<T> = {\n    * - `key`: a unique key to identify the route\n    * - `title`: title of the route to use as the tab label\n    * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n-   * - `color`: color to use as background color for shifting bottom navigation (optional)\n+   * - `color`: color to use as background color for shifting bottom navigation\n    *\n    * Example:\n    *\n@@ -115,11 +115,27 @@ type Props<T> = {\n   /**\n    * Callback which returns a React Element to be used as tab icon.\n    */\n-  renderIcon?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderIcon?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n   /**\n    * Callback which React Element to be used as tab label.\n    */\n-  renderLabel?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderLabel?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n+  /**\n+   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n+   */\n+  getLabelText?: (props: { route: T }) => string,\n+  /**\n+   * Get color for the tab, uses `route.color` by default.\n+   */\n+  getColor?: (props: { route: T }) => string,\n   /**\n    * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n    */\n@@ -159,6 +175,10 @@ type State = {\n    */\n   ripple: Animated.Value,\n   /**\n+   * Animation for the touch feedback, used to determine it's scale and opacity.\n+   */\n+  touch: Animated.Value,\n+  /**\n    * Layout of the tab bar. The width is used to determine the size and position of the ripple.\n    */\n   layout: { height: number, width: number, measured: boolean },\n@@ -173,7 +193,7 @@ const MIN_SHIFT_AMOUNT = 10;\n const MIN_TAB_WIDTH = 96;\n const MAX_TAB_WIDTH = 168;\n const BAR_HEIGHT = 56;\n-const SMALL_RIPPLE_SIZE = 72;\n+const SMALL_RIPPLE_SIZE = 96;\n const ACTIVE_LABEL_SIZE = 14;\n const INACTIVE_LABEL_SIZE = 12;\n \n@@ -251,6 +271,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ),\n       index: new Animated.Value(index),\n       ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n+      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n       layout: { height: 0, width: 0, measured: false },\n       previous: 0,\n     };\n@@ -349,6 +370,15 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n   _handleTabPress = (index: number) => {\n     const { navigationState } = this.props;\n \n+    this.state.touch.setValue(MIN_RIPPLE_SCALE);\n+\n+    Animated.timing(this.state.touch, {\n+      toValue: 1,\n+      duration: 300,\n+      easing: Easing.in(Easing.sin),\n+      useNativeDriver: true,\n+    }).start();\n+\n     if (index !== navigationState.index) {\n       this.props.onIndexChange(index);\n     }\n@@ -376,6 +406,8 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       renderScene,\n       renderIcon,\n       renderLabel,\n+      getLabelText = ({ route }) => route.title,\n+      getColor = ({ route }) => route.color,\n       barStyle,\n       style,\n       theme,\n@@ -400,7 +432,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ? this.state.index.interpolate({\n           inputRange: routes.map((_, i) => i),\n           outputRange: routes.map(\n-            route => route.color || approxBackgroundColor\n+            route => getColor({ route }) || approxBackgroundColor\n           ),\n         })\n       : approxBackgroundColor;\n@@ -416,7 +448,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n           .rgb()\n           .string();\n \n-    const rippleColor = color(textColor)\n+    const touchColor = color(textColor)\n       .alpha(0.12)\n       .rgb()\n       .string();\n@@ -430,22 +462,10 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n \n     // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n     // We need to move it from the left to the active tab and also account for how much that tab has shifted.\n-    const rippleShift =\n-      navigationState.index * tabWidth +\n-      tabWidth / 2 +\n-      this._calculateShift(\n-        this.state.previous,\n-        navigationState.index,\n-        routes.length\n-      );\n \n     return (\n       <View\n-        style={[\n-          styles.container,\n-          { backgroundColor: theme.dark ? white : black },\n-          style,\n-        ]}\n+        style={[styles.container, style]}\n         onLayout={this._handleLayout}\n         pointerEvents={layout.measured ? 'auto' : 'none'}\n       >\n@@ -485,25 +505,30 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n             style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n           >\n             {shifting ? (\n-              // Large ripple with the backround color\n               <Animated.View\n                 pointerEvents=\""none\""\n                 style={[\n                   styles.ripple,\n                   {\n                     // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - layout.width / 2,\n-                    left: rippleShift - layout.width / 2,\n-                    height: layout.width,\n-                    width: layout.width,\n+                    top: BAR_HEIGHT / 2 - layout.width / 8,\n+                    left:\n+                      navigationState.index * tabWidth +\n+                      tabWidth / 2 -\n+                      layout.width / 8,\n+                    height: layout.width / 4,\n+                    width: layout.width / 4,\n                     borderRadius: layout.width / 2,\n-                    backgroundColor: routes[navigationState.index].color,\n+                    backgroundColor: getColor({\n+                      route: routes[navigationState.index],\n+                    }),\n                     transform: [\n+                      { translateX: this.state.shifts[navigationState.index] },\n                       {\n                         // Scale to twice the size  to ensure it covers the whole tab bar\n                         scale: this.state.ripple.interpolate({\n                           inputRange: [0, 1],\n-                          outputRange: [0, 2],\n+                          outputRange: [0, 8],\n                         }),\n                       },\n                     ],\n@@ -515,36 +540,36 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                 ]}\n               />\n             ) : null}\n-            {shifting ? (\n-              // Small subtle ripple on touch\n-              <Animated.View\n-                pointerEvents=\""none\""\n-                style={[\n-                  styles.ripple,\n-                  {\n-                    // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n-                    left: rippleShift - SMALL_RIPPLE_SIZE / 2,\n-                    height: SMALL_RIPPLE_SIZE,\n-                    width: SMALL_RIPPLE_SIZE,\n-                    borderRadius: SMALL_RIPPLE_SIZE / 2,\n-                    backgroundColor: rippleColor,\n-                    transform: [\n-                      {\n-                        scale: this.state.ripple.interpolate({\n-                          inputRange: [0, 0.5, 1],\n-                          outputRange: [0, 1, 1],\n-                        }),\n-                      },\n-                    ],\n-                    opacity: this.state.ripple.interpolate({\n-                      inputRange: [0, MIN_RIPPLE_SCALE, 0.25, 0.5],\n-                      outputRange: [0, 0, 1, 0],\n-                    }),\n-                  },\n-                ]}\n-              />\n-            ) : null}\n+            <Animated.View\n+              pointerEvents=\""none\""\n+              style={[\n+                styles.ripple,\n+                {\n+                  // Set top and left values so that the ripple's center is same as the tab's center\n+                  top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n+                  left:\n+                    navigationState.index * tabWidth +\n+                    tabWidth / 2 -\n+                    SMALL_RIPPLE_SIZE / 2,\n+                  height: SMALL_RIPPLE_SIZE,\n+                  width: SMALL_RIPPLE_SIZE,\n+                  borderRadius: SMALL_RIPPLE_SIZE / 2,\n+                  backgroundColor: touchColor,\n+                  transform: [\n+                    {\n+                      translateX: shifting\n+                        ? this.state.shifts[navigationState.index]\n+                        : 0,\n+                    },\n+                    { scale: this.state.touch },\n+                  ],\n+                  opacity: this.state.touch.interpolate({\n+                    inputRange: [0, 0.5, 1],\n+                    outputRange: [0, 1, 0],\n+                  }),\n+                },\n+              ]}\n+            />\n             {routes.map((route, index) => {\n               const shift = this.state.shifts[index];\n               const focused = this.state.tabs[index];\n@@ -607,7 +632,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderIcon ? (\n-                          renderIcon({ route, focused: true })\n+                          renderIcon({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <Icon\n                             style={styles.icon}\n@@ -625,7 +654,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderIcon ? (\n-                            renderIcon({ route, focused: false })\n+                            renderIcon({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <Icon\n                               style={styles.icon}\n@@ -652,7 +685,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderLabel ? (\n-                          renderLabel({ route, focused: true })\n+                          renderLabel({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <AnimatedText\n                             style={[\n@@ -662,7 +699,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                               },\n                             ]}\n                           >\n-                            {route.title}\n+                            {getLabelText({ route })}\n                           </AnimatedText>\n                         )}\n                       </Animated.View>\n@@ -674,7 +711,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderLabel ? (\n-                            renderLabel({ route, focused: false })\n+                            renderLabel({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <AnimatedText\n                               style={[\n@@ -684,7 +725,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                                 },\n                               ]}\n                             >\n-                              {route.title}\n+                              {getLabelText({ route })}\n                             </AnimatedText>\n                           )}\n                         </Animated.View>\n"", ""diff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\nindex f47f830..68de52f 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobCompleteProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.common.EventHandle;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n@@ -23,7 +22,6 @@ import io.camunda.zeebe.protocol.record.intent.Intent;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n@@ -81,9 +79,7 @@ public final class JobCompleteProcessor implements CommandProcessor<JobRecord> {\n \n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\nindex fbb6f77..bc1a46d 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobFailProcessor.java\n@@ -11,7 +11,6 @@ import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESS\n import static io.camunda.zeebe.util.StringUtil.limitString;\n import static io.camunda.zeebe.util.buffer.BufferUtil.wrapString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnBehaviors;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnJobActivationBehavior;\n@@ -98,10 +97,7 @@ public final class JobFailProcessor implements TypedRecordProcessor<JobRecord> {\n     final var retries = failJobCommandRecord.getRetries();\n     final var retryBackOff = failJobCommandRecord.getRetryBackoff();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) record.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord failedJob = jobState.getJob(jobKey, authorizedTenants);\n-\n+    final JobRecord failedJob = jobState.getJob(jobKey, record.getAuthorizations());\n     if (failedJob == null) {\n       final String errorMessage = String.format(NO_JOB_FOUND_MESSAGE, jobKey);\n       rejectionWriter.appendRejection(record, RejectionType.NOT_FOUND, errorMessage);\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\nindex 195113d..07fecf5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobThrowErrorProcessor.java\n@@ -10,7 +10,6 @@ package io.camunda.zeebe.engine.processing.job;\n import static io.camunda.zeebe.engine.EngineConfiguration.DEFAULT_MAX_ERROR_MESSAGE_SIZE;\n import static io.camunda.zeebe.util.StringUtil.limitString;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.metrics.JobMetrics;\n import io.camunda.zeebe.engine.processing.bpmn.behavior.BpmnEventPublicationBehavior;\n import io.camunda.zeebe.engine.processing.common.Failure;\n@@ -34,7 +33,6 @@ import io.camunda.zeebe.protocol.record.value.ErrorType;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n import io.camunda.zeebe.stream.api.state.KeyGenerator;\n import io.camunda.zeebe.util.Either;\n-import java.util.List;\n import java.util.Optional;\n \n public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n@@ -108,9 +106,7 @@ public class JobThrowErrorProcessor implements CommandProcessor<JobRecord> {\n       final TypedRecord<JobRecord> command, final CommandControl<JobRecord> commandControl) {\n     final long jobKey = command.getKey();\n \n-    final List<String> authorizedTenants =\n-        (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-    final JobRecord job = jobState.getJob(jobKey, authorizedTenants);\n+    final JobRecord job = jobState.getJob(jobKey, command.getAuthorizations());\n     if (job == null) {\n       commandControl.reject(RejectionType.NOT_FOUND, String.format(NO_JOB_FOUND_MESSAGE, jobKey));\n       return;\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\nindex 49ef2b3..5cdcb97 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/processing/job/JobUpdateRetriesProcessor.java\n@@ -7,7 +7,6 @@\n  */\n package io.camunda.zeebe.engine.processing.job;\n \n-import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.engine.processing.streamprocessor.CommandProcessor;\n import io.camunda.zeebe.engine.state.immutable.JobState;\n import io.camunda.zeebe.engine.state.immutable.ProcessingState;\n@@ -15,7 +14,6 @@ import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.protocol.record.RejectionType;\n import io.camunda.zeebe.protocol.record.intent.JobIntent;\n import io.camunda.zeebe.stream.api.records.TypedRecord;\n-import java.util.List;\n \n public final class JobUpdateRetriesProcessor implements CommandProcessor<JobRecord> {\n \n@@ -38,9 +36,7 @@ public final class JobUpdateRetriesProcessor implements CommandProcessor<JobReco\n     final int retries = command.getValue().getRetries();\n \n     if (retries > 0) {\n-      final List<String> authorizedTenants =\n-          (List<String>) command.getAuthorizations().get(Authorization.AUTHORIZED_TENANTS);\n-      final JobRecord job = jobState.getJob(key, authorizedTenants);\n+      final JobRecord job = jobState.getJob(key, command.getAuthorizations());\n \n       if (job != null) {\n         // update retries for response sent to client\ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\nindex fbc3312..b0e87b5 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/immutable/JobState.java\n@@ -9,6 +9,7 @@ package io.camunda.zeebe.engine.state.immutable;\n \n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -30,7 +31,7 @@ public interface JobState {\n \n   JobRecord getJob(long key);\n \n-  JobRecord getJob(final long key, final List<String> authorizedTenantIds);\n+  JobRecord getJob(final long key, final Map<String, Object> authorizations);\n \n   long findBackedOffJobs(final long timestamp, final BiPredicate<Long, JobRecord> callback);\n \ndiff --git a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\nindex 0791516..0a207f0 100644\n--- a/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n+++ b/engine/src/main/java/io/camunda/zeebe/engine/state/instance/DbJobState.java\n@@ -7,6 +7,7 @@\n  */\n package io.camunda.zeebe.engine.state.instance;\n \n+import io.camunda.zeebe.auth.impl.Authorization;\n import io.camunda.zeebe.db.ColumnFamily;\n import io.camunda.zeebe.db.TransactionContext;\n import io.camunda.zeebe.db.ZeebeDb;\n@@ -24,6 +25,7 @@ import io.camunda.zeebe.protocol.ZbColumnFamilies;\n import io.camunda.zeebe.protocol.impl.record.value.job.JobRecord;\n import io.camunda.zeebe.util.EnsureUtil;\n import java.util.List;\n+import java.util.Map;\n import java.util.function.BiFunction;\n import java.util.function.BiPredicate;\n import org.agrona.DirectBuffer;\n@@ -348,9 +350,9 @@ public final class DbJobState implements JobState, MutableJobState {\n   }\n \n   @Override\n-  public JobRecord getJob(final long key, final List<String> authorizedTenantIds) {\n+  public JobRecord getJob(final long key, final Map<String, Object> authorizations) {\n     final JobRecord jobRecord = getJob(key);\n-    if (authorizedTenantIds.contains(jobRecord.getTenantId())) {\n+    if (getAuthorizedTenantIds(authorizations).contains(jobRecord.getTenantId())) {\n       return jobRecord;\n     }\n     return null;\n@@ -461,4 +463,8 @@ public final class DbJobState implements JobState, MutableJobState {\n       backoffColumnFamily.deleteIfExists(backoffJobKey);\n     }\n   }\n+\n+  private List<String> getAuthorizedTenantIds(final Map<String, Object> authorizations) {\n+    return (List<String>) authorizations.get(Authorization.AUTHORIZED_TENANTS);\n+  }\n }\n"", ""diff --git a/packages/nocodb/docker-compose.yml b/packages/nocodb/docker-compose.yml\nindex 7fabf79..ba2ab7b 100644\n--- a/packages/nocodb/docker-compose.yml\n+++ b/packages/nocodb/docker-compose.yml\n@@ -1,4 +1,4 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n     # db55:\n@@ -96,8 +96,8 @@ services:\n     #     - 5495:5432\n     #   volumes:\n     #     - ./pg-sakila-db:/docker-entrypoint-initdb.d\n-    pg96:\n-     image: postgres:9.6\n+    pg147:\n+     image: postgres:14.7\n      restart: always\n      environment:\n        POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\nindex 19dfab2..97d346b 100644\n--- a/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n+++ b/tests/playwright/scripts/docker-compose-pg-pw-quick.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\ndiff --git a/tests/playwright/scripts/docker-compose-pg.yml b/tests/playwright/scripts/docker-compose-pg.yml\nindex 0396579..9fab10e 100644\n--- a/tests/playwright/scripts/docker-compose-pg.yml\n+++ b/tests/playwright/scripts/docker-compose-pg.yml\n@@ -1,8 +1,8 @@\n-version: \""2.1\""\n+version: \""2.2\""\n \n services:\n-    pg96:\n-        image: postgres:9.6\n+    pg147:\n+        image: postgres:14.7\n         restart: always\n         environment:\n             POSTGRES_PASSWORD: password\n"", ""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n""]",5,"[""ded26d768ff432ad3bde3c0aa1e95ce50726100a"", ""062daa45cbd5dba6e96e95d8cdcaee89ae30a83c"", ""37b1cbfd3d2c462ef4f2a131e4172c38dc8d9ddf"", ""933ab6bb86372913c992567cf9660009900911a7"", ""036a0ff49a7dade0e04c9c07071a1ff49133ee24""]","[""feat"", ""refactor"", ""build"", ""fix"", ""docs""]"
"Adjust test scenario

With the new version of the FEEL engine, a non-existing variable results in `null`. Previously, the evaluation failed
with an error.

To keep the semantics of the test cases, create the incident by failing the job.,[gn] fix include_dirs ordering error,terminated tasks linger for a bit

Signed-off-by: Eliza Weisman <eliza@buoyant.io>,fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.,licensing","[""diff --git a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\nindex c0a3472..6a9389b 100644\n--- a/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n+++ b/engine/src/test/java/io/camunda/zeebe/engine/state/ProcessExecutionCleanStateTest.java\n@@ -759,7 +759,7 @@ public final class ProcessExecutionCleanStateTest {\n         .withXmlResource(\n             Bpmn.createExecutableProcess(PROCESS_ID)\n                 .startEvent()\n-                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\"").zeebeOutputExpression(\""x\"", \""y\""))\n+                .serviceTask(\""task\"", t -> t.zeebeJobType(\""test\""))\n                 .endEvent()\n                 .done())\n         .deploy();\n@@ -768,7 +768,7 @@ public final class ProcessExecutionCleanStateTest {\n     final var processInstanceKey =\n         engineRule.processInstance().ofBpmnProcessId(PROCESS_ID).create();\n \n-    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").complete();\n+    engineRule.job().ofInstance(processInstanceKey).withType(\""test\"").withRetries(0).fail();\n \n     RecordingExporter.incidentRecords(IncidentIntent.CREATED)\n         .withProcessInstanceKey(processInstanceKey)\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 11adaa7..ed64b17 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -240,6 +240,14 @@ static_library(\""electron_lib\"") {\n     \""brightray\"",\n     \""build/node\"",\n   ]\n+  include_dirs = [\n+    \""chromium_src\"",\n+    \"".\"",\n+    \""$target_gen_dir\"",\n+    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n+    # API of blink, then delete this include dir.\n+    \""//third_party/WebKit/Source\"",\n+  ]\n   if (enable_desktop_capturer) {\n     deps += [ \""//third_party/webrtc/modules/desktop_capture\"" ]\n   }\n@@ -275,14 +283,6 @@ static_library(\""electron_lib\"") {\n     # Disable warnings for g_settings_list_schemas.\n     \""GLIB_DISABLE_DEPRECATION_WARNINGS\"",\n   ]\n-  include_dirs = [\n-    \""chromium_src\"",\n-    \"".\"",\n-    \""$target_gen_dir\"",\n-    # TODO(nornagon): replace usage of SchemeRegistry by an actually exported\n-    # API of blink, then delete this include dir.\n-    \""//third_party/WebKit/Source\"",\n-  ]\n   if (is_component_build) {\n     defines += [\n       # Import V8 symbols from shared library (node.dll / libnode.so)\n"", ""diff --git a/console/src/main.rs b/console/src/main.rs\nindex ebfa315..5328d96 100644\n--- a/console/src/main.rs\n+++ b/console/src/main.rs\n@@ -69,6 +69,7 @@ async fn main() -> Result<(), Box<dyn std::error::Error>> {\n                 .wrap(Wrap { trim: true });\n             f.render_widget(header, chunks[0]);\n             tasks.render(f, chunks[1]);\n+            tasks.retain_active();\n         })?;\n     }\n \ndiff --git a/console/src/tasks.rs b/console/src/tasks.rs\nindex 7be39a4..eb41495 100644\n--- a/console/src/tasks.rs\n+++ b/console/src/tasks.rs\n@@ -19,6 +19,7 @@ struct Task {\n     fields: String,\n     kind: &'static str,\n     stats: Stats,\n+    completed_for: usize,\n }\n \n #[derive(Default, Debug)]\n@@ -28,10 +29,15 @@ struct Stats {\n     idle: Duration,\n     total: Duration,\n }\n+\n impl State {\n+    // How many updates to retain completed tasks for\n+    const RETAIN_COMPLETED_FOR: usize = 6;\n+\n     pub(crate) fn len(&self) -> usize {\n         self.tasks.len()\n     }\n+\n     pub(crate) fn update(&mut self, update: proto::tasks::TaskUpdate) {\n         let new_tasks = update.new_tasks.into_iter().filter_map(|task| {\n             if task.id.is_none() {\n@@ -48,6 +54,7 @@ impl State {\n                 fields: task.string_fields,\n                 kind,\n                 stats: Default::default(),\n+                completed_for: 0,\n             };\n             Some((id, task))\n         });\n@@ -60,7 +67,10 @@ impl State {\n         }\n \n         for proto::SpanId { id } in update.completed {\n-            if self.tasks.remove(&id).is_none() {\n+            if let Some(task) = self.tasks.get_mut(&id) {\n+                task.kind = \""!\"";\n+                task.completed_for = 1;\n+            } else {\n                 tracing::warn!(?id, \""tried to complete a task that didn't exist\"");\n             }\n         }\n@@ -79,7 +89,7 @@ impl State {\n         const DUR_PRECISION: usize = 4;\n         const POLLS_LEN: usize = 5;\n         let rows = self.tasks.values().map(|task| {\n-            let row = Row::new(vec![\n+            let mut row = Row::new(vec![\n                 Cell::from(task.id_hex.as_str()),\n                 // TODO(eliza): is there a way to write a `fmt::Debug` impl\n                 // directly to tui without doing an allocation?\n@@ -105,6 +115,9 @@ impl State {\n                 Cell::from(format!(\""{:>width$}\"", task.stats.polls, width = POLLS_LEN)),\n                 Cell::from(task.fields.as_str()),\n             ]);\n+            if task.completed_for > 0 {\n+                row = row.style(Style::default().add_modifier(style::Modifier::DIM));\n+            }\n             row\n         });\n         let t = Table::new(rows)\n@@ -126,6 +139,16 @@ impl State {\n \n         frame.render_widget(t, area)\n     }\n+\n+    pub(crate) fn retain_active(&mut self) {\n+        self.tasks.retain(|_, task| {\n+            if task.completed_for == 0 {\n+                return true;\n+            }\n+            task.completed_for += 1;\n+            task.completed_for <= Self::RETAIN_COMPLETED_FOR\n+        })\n+    }\n }\n \n impl From<proto::tasks::Stats> for Stats {\n"", ""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n""]",5,"[""f411e58cd510f8a2b980b2f1932003a0c0e9f8f3"", ""c44cf88a6ec54e5ddd99d8348bcc57b301ec7945"", ""1bcf88670b50155b50071e707f98f30cea0b7a24"", ""9be725fa3906323d4bc9788f54eccf74109d632b"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0""]","[""test"", ""build"", ""feat"", ""fix"", ""docs""]"
"update flushed index before truncating,buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23,skip flaky test,add remote [skip ci],add comments for the Handler","[""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n"", ""diff --git a/test/browser-pool/browser-pool.test.ts b/test/browser-pool/browser-pool.test.ts\nindex 9f21322..7a011b5 100644\n--- a/test/browser-pool/browser-pool.test.ts\n+++ b/test/browser-pool/browser-pool.test.ts\n@@ -128,7 +128,8 @@ describe.each([\n             expect(page.close).toBeDefined();\n         });\n \n-        test('should allow early aborting in case of outer timeout', async () => {\n+        // TODO: this test is very flaky in the CI\n+        test.skip('should allow early aborting in case of outer timeout', async () => {\n             const timeout = browserPool.operationTimeoutMillis;\n             browserPool.operationTimeoutMillis = 500;\n             // @ts-expect-error mocking private method\n"", ""diff --git a/.github/workflows/ibis-rebase-nightly.yml b/.github/workflows/ibis-rebase-nightly.yml\nindex 06c9003..e19c703 100644\n--- a/.github/workflows/ibis-rebase-nightly.yml\n+++ b/.github/workflows/ibis-rebase-nightly.yml\n@@ -47,7 +47,10 @@ jobs:\n           git config --global user.email 'ibis-squawk-bot[bot]@users.noreply.github.com'\n \n       - name: fetch and rebase on top of upstream\n-        run: git pull --rebase -X ours https://github.com/ibis-project/ibis master\n+        run: |\n+          git remote add upstream https://github.com/ibis-project/ibis\n+          git fetch upstream\n+          git rebase -X ours upstream/master\n \n       - uses: tibdex/github-app-token@v1\n         id: generate_pr_token\n"", ""diff --git a/packages/core/src/nodes.rs b/packages/core/src/nodes.rs\nindex 93d4c8b..80de929 100644\n--- a/packages/core/src/nodes.rs\n+++ b/packages/core/src/nodes.rs\n@@ -357,12 +357,14 @@ pub struct EventHandler<'bump, T = ()> {\n }\n \n impl<T> EventHandler<'_, T> {\n+    /// Call this event handler with the appropriate event type\n     pub fn call(&self, event: T) {\n         if let Some(callback) = self.callback.borrow_mut().as_mut() {\n             callback(event);\n         }\n     }\n \n+    /// Forcibly drop the internal handler callback, releasing memory\n     pub fn release(&self) {\n         self.callback.replace(None);\n     }\n""]",5,"[""933ab6bb86372913c992567cf9660009900911a7"", ""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d"", ""e2e8ad25854bd1e7cdbc7f50b50bbd99e04ad47d"", ""e96487ad7ce90b141219d9032fa2bed68d5dae6a"", ""036a0ff49a7dade0e04c9c07071a1ff49133ee24""]","[""fix"", ""feat"", ""test"", ""cicd"", ""docs""]"
"verify checkpoint listeners are notified,restructure ClusterTopology to track completed change,do not use scripts and binaries from the libcc repo,[gn win] link comctl32.lib to fix component build,allow disabling dynamic queue","[""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n"", ""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\nindex 0c4a971..d13bb16 100644\n--- a/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n+++ b/packages/nocodb/src/modules/jobs/redis/jobs.service.ts\n@@ -33,16 +33,19 @@ export class JobsService implements OnModuleInit {\n   }\n \n   async add(name: string, data: any) {\n-    // resume primary instance queue if there is no worker\n-    const workerCount = await this.jobsRedisService.workerCount();\n-    const localWorkerPaused = await this.jobsQueue.isPaused(true);\n+    // if NC_WORKER_CONTAINER is false, then skip dynamic queue pause/resume\n+    if (process.env.NC_WORKER_CONTAINER !== 'false') {\n+      // resume primary instance queue if there is no worker\n+      const workerCount = await this.jobsRedisService.workerCount();\n+      const localWorkerPaused = await this.jobsQueue.isPaused(true);\n \n-    // if there is no worker and primary instance queue is paused, resume it\n-    // if there is any worker and primary instance queue is not paused, pause it\n-    if (workerCount === 0 && localWorkerPaused) {\n-      await this.jobsQueue.resume(true);\n-    } else if (workerCount > 0 && !localWorkerPaused) {\n-      await this.jobsQueue.pause(true);\n+      // if there is no worker and primary instance queue is paused, resume it\n+      // if there is any worker and primary instance queue is not paused, pause it\n+      if (workerCount === 0 && localWorkerPaused) {\n+        await this.jobsQueue.resume(true);\n+      } else if (workerCount > 0 && !localWorkerPaused) {\n+        await this.jobsQueue.pause(true);\n+      }\n     }\n \n     const job = await this.jobsQueue.add(name, data);\n""]",5,"[""e0198f74b81da3663144cfe1d971939319f82a0f"", ""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2"", ""45837af24a33308a70a3454f0f650f9fe728e272"", ""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""9ef5c0d14193a9abb09b39856f58477d1f4b0d77""]","[""test"", ""refactor"", ""cicd"", ""build"", ""fix""]"
"spring version, core version,terminated tasks linger for a bit

Signed-off-by: Eliza Weisman <eliza@buoyant.io>,convert `run_tag_values_test_case` to a function,only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,skip flaky test","[""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n"", ""diff --git a/console/src/main.rs b/console/src/main.rs\nindex ebfa315..5328d96 100644\n--- a/console/src/main.rs\n+++ b/console/src/main.rs\n@@ -69,6 +69,7 @@ async fn main() -> Result<(), Box<dyn std::error::Error>> {\n                 .wrap(Wrap { trim: true });\n             f.render_widget(header, chunks[0]);\n             tasks.render(f, chunks[1]);\n+            tasks.retain_active();\n         })?;\n     }\n \ndiff --git a/console/src/tasks.rs b/console/src/tasks.rs\nindex 7be39a4..eb41495 100644\n--- a/console/src/tasks.rs\n+++ b/console/src/tasks.rs\n@@ -19,6 +19,7 @@ struct Task {\n     fields: String,\n     kind: &'static str,\n     stats: Stats,\n+    completed_for: usize,\n }\n \n #[derive(Default, Debug)]\n@@ -28,10 +29,15 @@ struct Stats {\n     idle: Duration,\n     total: Duration,\n }\n+\n impl State {\n+    // How many updates to retain completed tasks for\n+    const RETAIN_COMPLETED_FOR: usize = 6;\n+\n     pub(crate) fn len(&self) -> usize {\n         self.tasks.len()\n     }\n+\n     pub(crate) fn update(&mut self, update: proto::tasks::TaskUpdate) {\n         let new_tasks = update.new_tasks.into_iter().filter_map(|task| {\n             if task.id.is_none() {\n@@ -48,6 +54,7 @@ impl State {\n                 fields: task.string_fields,\n                 kind,\n                 stats: Default::default(),\n+                completed_for: 0,\n             };\n             Some((id, task))\n         });\n@@ -60,7 +67,10 @@ impl State {\n         }\n \n         for proto::SpanId { id } in update.completed {\n-            if self.tasks.remove(&id).is_none() {\n+            if let Some(task) = self.tasks.get_mut(&id) {\n+                task.kind = \""!\"";\n+                task.completed_for = 1;\n+            } else {\n                 tracing::warn!(?id, \""tried to complete a task that didn't exist\"");\n             }\n         }\n@@ -79,7 +89,7 @@ impl State {\n         const DUR_PRECISION: usize = 4;\n         const POLLS_LEN: usize = 5;\n         let rows = self.tasks.values().map(|task| {\n-            let row = Row::new(vec![\n+            let mut row = Row::new(vec![\n                 Cell::from(task.id_hex.as_str()),\n                 // TODO(eliza): is there a way to write a `fmt::Debug` impl\n                 // directly to tui without doing an allocation?\n@@ -105,6 +115,9 @@ impl State {\n                 Cell::from(format!(\""{:>width$}\"", task.stats.polls, width = POLLS_LEN)),\n                 Cell::from(task.fields.as_str()),\n             ]);\n+            if task.completed_for > 0 {\n+                row = row.style(Style::default().add_modifier(style::Modifier::DIM));\n+            }\n             row\n         });\n         let t = Table::new(rows)\n@@ -126,6 +139,16 @@ impl State {\n \n         frame.render_widget(t, area)\n     }\n+\n+    pub(crate) fn retain_active(&mut self) {\n+        self.tasks.retain(|_, task| {\n+            if task.completed_for == 0 {\n+                return true;\n+            }\n+            task.completed_for += 1;\n+            task.completed_for <= Self::RETAIN_COMPLETED_FOR\n+        })\n+    }\n }\n \n impl From<proto::tasks::Stats> for Stats {\n"", ""diff --git a/query_tests/src/influxrpc/tag_values.rs b/query_tests/src/influxrpc/tag_values.rs\nindex 01fd411..3570cae 100644\n--- a/query_tests/src/influxrpc/tag_values.rs\n+++ b/query_tests/src/influxrpc/tag_values.rs\n@@ -1,5 +1,5 @@\n use datafusion::logical_plan::{col, lit};\n-use predicate::predicate::PredicateBuilder;\n+use predicate::predicate::{Predicate, PredicateBuilder};\n use query::{\n     exec::stringset::{IntoStringSet, StringSetRef},\n     frontend::influxrpc::InfluxRpcPlanner,\n@@ -9,39 +9,42 @@ use crate::scenarios::*;\n \n /// runs tag_value(predicate) and compares it to the expected\n /// output\n-macro_rules! run_tag_values_test_case {\n-    ($DB_SETUP:expr, $TAG_NAME:expr, $PREDICATE:expr, $EXPECTED_VALUES:expr) => {\n-        test_helpers::maybe_start_logging();\n-        let predicate = $PREDICATE;\n-        let tag_name = $TAG_NAME;\n-        let expected_values = $EXPECTED_VALUES;\n-        for scenario in $DB_SETUP.make().await {\n-            let DbScenario {\n-                scenario_name, db, ..\n-            } = scenario;\n-            println!(\""Running scenario '{}'\"", scenario_name);\n-            println!(\""Predicate: '{:#?}'\"", predicate);\n-            let planner = InfluxRpcPlanner::new();\n-            let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n-\n-            let plan = planner\n-                .tag_values(db.as_ref(), &tag_name, predicate.clone())\n-                .expect(\""built plan successfully\"");\n-            let names = ctx\n-                .to_string_set(plan)\n-                .await\n-                .expect(\""converted plan to strings successfully\"");\n-\n-            assert_eq!(\n-                names,\n-                to_stringset(&expected_values),\n-                \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n-                scenario_name,\n-                expected_values,\n-                names\n-            );\n-        }\n-    };\n+async fn run_tag_values_test_case<D>(\n+    db_setup: D,\n+    tag_name: &str,\n+    predicate: Predicate,\n+    expected_tag_values: Vec<&str>,\n+) where\n+    D: DbSetup,\n+{\n+    test_helpers::maybe_start_logging();\n+\n+    for scenario in db_setup.make().await {\n+        let DbScenario {\n+            scenario_name, db, ..\n+        } = scenario;\n+        println!(\""Running scenario '{}'\"", scenario_name);\n+        println!(\""Predicate: '{:#?}'\"", predicate);\n+        let planner = InfluxRpcPlanner::new();\n+        let ctx = db.executor().new_context(query::exec::ExecutorType::Query);\n+\n+        let plan = planner\n+            .tag_values(db.as_ref(), tag_name, predicate.clone())\n+            .expect(\""built plan successfully\"");\n+        let names = ctx\n+            .to_string_set(plan)\n+            .await\n+            .expect(\""converted plan to strings successfully\"");\n+\n+        assert_eq!(\n+            names,\n+            to_stringset(&expected_tag_values),\n+            \""Error in  scenario '{}'\\n\\nexpected:\\n{:?}\\nactual:\\n{:?}\"",\n+            scenario_name,\n+            expected_tag_values,\n+            names\n+        );\n+    }\n }\n \n #[tokio::test]\n@@ -50,12 +53,13 @@ async fn list_tag_values_no_tag() {\n     // If the tag is not present, expect no values back (not error)\n     let tag_name = \""tag_not_in_chunks\"";\n     let expected_tag_keys = vec![];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -63,12 +67,13 @@ async fn list_tag_values_no_predicate_state_col() {\n     let predicate = PredicateBuilder::default().build();\n     let tag_name = \""state\"";\n     let expected_tag_keys = vec![\""CA\"", \""MA\"", \""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -76,12 +81,13 @@ async fn list_tag_values_no_predicate_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().build();\n     let expected_tag_keys = vec![\""Boston\"", \""LA\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -89,12 +95,13 @@ async fn list_tag_values_timestamp_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().timestamp_range(50, 201).build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -104,12 +111,13 @@ async fn list_tag_values_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""Boston\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -120,12 +128,13 @@ async fn list_tag_values_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""MA\""))) // state=MA\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -133,12 +142,13 @@ async fn list_tag_values_table_pred_state_col() {\n     let tag_name = \""state\"";\n     let predicate = PredicateBuilder::default().table(\""h2o\"").build();\n     let expected_tag_keys = vec![\""CA\"", \""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -146,12 +156,13 @@ async fn list_tag_values_table_pred_city_col() {\n     let tag_name = \""city\"";\n     let predicate = PredicateBuilder::default().table(\""o2\"").build();\n     let expected_tag_keys = vec![\""Boston\"", \""NYC\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -162,12 +173,13 @@ async fn list_tag_values_table_and_timestamp_and_table_pred_state_col() {\n         .timestamp_range(50, 201)\n         .build();\n     let expected_tag_keys = vec![\""MA\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -178,12 +190,13 @@ async fn list_tag_values_table_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -195,12 +208,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col() {\n         .add_expr(col(\""state\"").eq(lit(\""NY\""))) // state=NY\n         .build();\n     let expected_tag_keys = vec![\""NY\""];\n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n@@ -213,12 +227,13 @@ async fn list_tag_values_table_and_timestamp_and_state_pred_state_col_no_rows() \n         .build();\n     let expected_tag_keys = vec![];\n \n-    run_tag_values_test_case!(\n+    run_tag_values_test_case(\n         TwoMeasurementsManyNulls {},\n         tag_name,\n         predicate,\n-        expected_tag_keys\n-    );\n+        expected_tag_keys,\n+    )\n+    .await;\n }\n \n #[tokio::test]\n"", ""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/test/browser-pool/browser-pool.test.ts b/test/browser-pool/browser-pool.test.ts\nindex 9f21322..7a011b5 100644\n--- a/test/browser-pool/browser-pool.test.ts\n+++ b/test/browser-pool/browser-pool.test.ts\n@@ -128,7 +128,8 @@ describe.each([\n             expect(page.close).toBeDefined();\n         });\n \n-        test('should allow early aborting in case of outer timeout', async () => {\n+        // TODO: this test is very flaky in the CI\n+        test.skip('should allow early aborting in case of outer timeout', async () => {\n             const timeout = browserPool.operationTimeoutMillis;\n             browserPool.operationTimeoutMillis = 500;\n             // @ts-expect-error mocking private method\n""]",5,"[""c55591ba157298a9c5816693c102a89dfd058830"", ""1bcf88670b50155b50071e707f98f30cea0b7a24"", ""1db13ec43727aca872a0f3836e4023ed85db665e"", ""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""e2e8ad25854bd1e7cdbc7f50b50bbd99e04ad47d""]","[""build"", ""feat"", ""refactor"", ""cicd"", ""test""]"
"support use meta key select multiple element,small error msg improvement

refs #1005,ensure checksum persist flushes to disk,do not use scripts and binaries from the libcc repo,upgrade to Flux v0.42.0

Skips a test that requires special dependencies to pass.","[""diff --git a/packages/core/src/LogicFlow.tsx b/packages/core/src/LogicFlow.tsx\nindex ab68624..aeee7b7 100644\n--- a/packages/core/src/LogicFlow.tsx\n+++ b/packages/core/src/LogicFlow.tsx\n@@ -277,9 +277,11 @@ export default class LogicFlow {\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u9009\u4e2d\n+   * @param id \u9009\u62e9\u5143\u7d20ID\n+   * @param multiple \u662f\u5426\u5141\u8bb8\u591a\u9009\uff0c\u5982\u679c\u4e3atrue\uff0c\u4e0d\u4f1a\u5c06\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5143\u7d20\u91cd\u7f6e\n    */\n-  select(id: string) {\n-    this.graphModel.selectElementById(id);\n+  select(id: string, multiple = false) {\n+    this.graphModel.selectElementById(id, multiple);\n   }\n   /**\n    * \u5c06\u56fe\u5f62\u5b9a\u4f4d\u5230\u753b\u5e03\u4e2d\u5fc3\ndiff --git a/packages/core/src/model/EditConfigModel.ts b/packages/core/src/model/EditConfigModel.ts\nindex 67e334a..83e5f16 100644\n--- a/packages/core/src/model/EditConfigModel.ts\n+++ b/packages/core/src/model/EditConfigModel.ts\n@@ -25,6 +25,7 @@ const SilentConfig = {\n   edgeTextEdit: false,\n   nodeTextDraggable: false,\n   edgeTextDraggable: false,\n+  metaKeyMultipleSelected: false,\n };\n \n /**\n@@ -42,6 +43,7 @@ export default class EditConfigModel {\n   @observable edgeTextEdit = true; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u7f16\u8f91\n   @observable nodeTextDraggable = false; // \u5141\u8bb8\u8282\u70b9\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n   @observable edgeTextDraggable = false; // \u5141\u8bb8\u8fde\u7ebf\u6587\u672c\u53ef\u4ee5\u62d6\u62fd\n+  @observable metaKeyMultipleSelected = false; // \u5141\u8bb8meta\u591a\u9009\u5143\u7d20\n   constructor(data) {\n     const keys = [\n       'stopZoomGraph',\n@@ -55,6 +57,7 @@ export default class EditConfigModel {\n       'edgeTextEdit',\n       'nodeTextDraggable',\n       'edgeTextDraggable',\n+      'metaKeyMultipleSelected',\n     ];\n     const { isSilentMode, textEdit } = data;\n     if (isSilentMode) {\ndiff --git a/packages/core/src/model/GraphModel.ts b/packages/core/src/model/GraphModel.ts\nindex 9667f4d..310daf4 100644\n--- a/packages/core/src/model/GraphModel.ts\n+++ b/packages/core/src/model/GraphModel.ts\n@@ -34,6 +34,7 @@ class GraphModel {\n   height: number;\n   topElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n   selectElement: BaseNodeModel | BaseEdgeModel; // \u5f53\u524d\u4f4d\u4e8e\u9876\u90e8\u7684\u5143\u7d20\n+  selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\n   @observable edgeType: string;\n   @observable nodes: BaseNodeModel[] = [];\n   @observable activeElement: IBaseModel;\n@@ -50,7 +51,6 @@ class GraphModel {\n   @observable gridSize = 1;\n   @observable partial = false; // \u662f\u5426\u5f00\u542f\u5c40\u90e8\u6e32\u67d3\n   @observable fakerNode: BaseNodeModel;\n-  // @observable selectElements = new Map<string, IBaseModel>(); // \u591a\u9009\u8fd8\u6ca1\u6709\u505a\uff0c\u5148\u4e0d\u52a0\n   constructor(config) {\n     const {\n       container,\n@@ -456,24 +456,44 @@ class GraphModel {\n   }\n \n   @action\n-  selectNodeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectNodeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.nodesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectEdgeById(id) {\n-    this.selectElement?.setSelected(false);\n+  selectEdgeById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.edgesMap[id]?.model;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n   }\n \n   @action\n-  selectElementById(id: string) {\n-    this.selectElement?.setSelected(false);\n+  selectElementById(id: string, multiple = false) {\n+    if (!multiple) {\n+      this.selectElement?.setSelected(false);\n+      this.clearSelectElements();\n+    }\n     this.selectElement = this.getElement(id) as BaseNodeModel | BaseEdgeModel;\n     this.selectElement?.setSelected(true);\n+    this.selectElements.set(id, this.selectElement);\n+  }\n+\n+  @action\n+  clearSelectElements() {\n+    this.selectElements.forEach(element => {\n+      element.setSelected(false);\n+    });\n+    this.selectElements.clear();\n   }\n \n   /* \u4fee\u6539\u8fde\u7ebf\u7c7b\u578b */\ndiff --git a/packages/core/src/view/edge/BaseEdge.tsx b/packages/core/src/view/edge/BaseEdge.tsx\nindex d45ea9e..d7c8f38 100644\n--- a/packages/core/src/view/edge/BaseEdge.tsx\n+++ b/packages/core/src/view/edge/BaseEdge.tsx\n@@ -178,7 +178,8 @@ export default class BaseEdge extends Component<IProps> {\n   handleClick = (e) => {\n     const { model, graphModel, eventCenter } = this.props;\n     graphModel.toFront(model.id);\n-    graphModel.selectEdgeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectEdgeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     // \u8fb9\u6570\u636e\n     const edgeData = model?.getData();\n     const position = graphModel.getPointByClient({\ndiff --git a/packages/core/src/view/node/BaseNode.tsx b/packages/core/src/view/node/BaseNode.tsx\nindex 140889c..5ee3975 100644\n--- a/packages/core/src/view/node/BaseNode.tsx\n+++ b/packages/core/src/view/node/BaseNode.tsx\n@@ -275,7 +275,8 @@ export default abstract class BaseNode extends Component<IProps, Istate> {\n       }, 400);\n     }\n     graphModel.toFront(model.id);\n-    graphModel.selectNodeById(model.id);\n+    const { editConfig: { metaKeyMultipleSelected } } = graphModel;\n+    graphModel.selectNodeById(model.id, e.metaKey && metaKeyMultipleSelected);\n     this.preStartTime = this.startTime;\n   };\n   handleContextMenu = (ev: MouseEvent) => {\ndiff --git a/packages/core/src/view/overlay/CanvasOverlay.tsx b/packages/core/src/view/overlay/CanvasOverlay.tsx\nindex ef11822..8c79fd2 100644\n--- a/packages/core/src/view/overlay/CanvasOverlay.tsx\n+++ b/packages/core/src/view/overlay/CanvasOverlay.tsx\n@@ -104,9 +104,9 @@ class CanvasOverlay extends Component<IProps, Istate> {\n     const target = ev.target as HTMLElement;\n     if (target.getAttribute('name') === 'canvas-overlay') {\n       const { graphModel, eventCenter } = this.props;\n-      const { selectElement, textEditElement } = graphModel;\n-      if (selectElement) {\n-        selectElement.setSelected(false);\n+      const { textEditElement, selectElements } = graphModel;\n+      if (selectElements.size > 0) {\n+        graphModel.clearSelectElements();\n       }\n       if (textEditElement) {\n         textEditElement.setElementState(ElementState.DEFAULT);\ndiff --git a/packages/extension/examples/bpmn/index.html b/packages/extension/examples/bpmn/index.html\nindex 7a68d6f..f7ea87d 100644\n--- a/packages/extension/examples/bpmn/index.html\n+++ b/packages/extension/examples/bpmn/index.html\n@@ -6,6 +6,7 @@\n   <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"">\n   <title>LOGIN FLOW</title>\n   <link rel=\""stylesheet\"" href=\""/core/dist/style/index.css\"">\n+  <link rel=\""stylesheet\"" href=\""/extension/lib/style/index.css\"">\n   <style>\n     html,body {\n       padding: 0;\n@@ -129,11 +130,14 @@\n     </div>\n   </div>\n   <script src=\""/core/dist/logic-flow.js\""></script>\n+  <!-- <script src=\""http://0.0.0.0:9090/logic-flow.js\""></script> -->\n   <script src=\""/BpmnElement.js\""></script>\n   <script src=\""/BpmnAdapter.js\""></script>\n+  <script src=\""/Control.js\""></script>\n   <script src=\""/Snapshot.js\""></script>\n   <script>\n     LogicFlow.use(BpmnElement);\n+    LogicFlow.use(Control);\n     LogicFlow.use(BpmnAdapter);\n     LogicFlow.use(Snapshot);\n   </script>\ndiff --git a/packages/extension/examples/bpmn/index.js b/packages/extension/examples/bpmn/index.js\nindex 21d2da0..6f6aa39 100644\n--- a/packages/extension/examples/bpmn/index.js\n+++ b/packages/extension/examples/bpmn/index.js\n@@ -3,6 +3,10 @@ window.onload = function () {\n     container: document.querySelector('#app'),\n     // fixme: grid\u6210\u4e3a\u4e86\u5fc5\u4f20\u7684\u4e86\n     edgeTextDraggable: true,\n+    metaKeyMultipleSelected: true,\n+    // stopScrollGraph: true,\n+    // stopMoveGraph: true,\n+    // stopZoomGraph: true,\n     grid: {\n       type: 'dot',\n       size: 20,\n"", ""diff --git a/internal/pipe/git/errors.go b/internal/pipe/git/errors.go\nindex a8c15d5..13dfb56 100644\n--- a/internal/pipe/git/errors.go\n+++ b/internal/pipe/git/errors.go\n@@ -11,7 +11,7 @@ type ErrDirty struct {\n }\n \n func (e ErrDirty) Error() string {\n-\treturn fmt.Sprintf(\""git is currently in a dirty state:\\n%v\"", e.status)\n+\treturn fmt.Sprintf(\""git is currently in a dirty state, please check in your pipeline what can be changing the following files:\\n%v\"", e.status)\n }\n \n // ErrWrongRef happens when the HEAD reference is different from the tag being built\n"", ""diff --git a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\nindex eed9424..a1ae702 100644\n--- a/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n+++ b/snapshot/src/test/java/io/camunda/zeebe/snapshots/impl/SnapshotChecksumTest.java\n@@ -10,6 +10,10 @@ package io.camunda.zeebe.snapshots.impl;\n import static org.assertj.core.api.Assertions.assertThat;\n \n import io.camunda.zeebe.snapshots.ImmutableChecksumsSFV;\n+import io.camunda.zeebe.test.util.STracer;\n+import io.camunda.zeebe.test.util.STracer.Syscall;\n+import io.camunda.zeebe.test.util.asserts.strace.FSyncTraceAssert;\n+import io.camunda.zeebe.test.util.asserts.strace.STracerAssert;\n import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n@@ -124,6 +128,28 @@ public class SnapshotChecksumTest {\n   }\n \n   @Test\n+  public void shouldFlushOnPersist() throws Exception {\n+    // given\n+    final var traceFile = temporaryFolder.newFile().toPath();\n+    final var expectedChecksum = SnapshotChecksum.calculate(multipleFileSnapshot);\n+    final var checksumPath = multipleFileSnapshot.resolveSibling(\""checksum\"");\n+    final var tracer = STracer.traceFor(Syscall.FSYNC, traceFile);\n+\n+    // when\n+    try (tracer) {\n+      SnapshotChecksum.persist(checksumPath, expectedChecksum);\n+    }\n+\n+    // then\n+    STracerAssert.assertThat(tracer)\n+        .fsyncTraces()\n+        .hasSize(1)\n+        .first(FSyncTraceAssert.factory())\n+        .hasPath(checksumPath)\n+        .isSuccessful();\n+  }\n+\n+  @Test\n   public void shouldDetectCorruptedSnapshot() throws IOException {\n     // given\n     final var expectedChecksum = SnapshotChecksum.calculate(corruptedSnapshot);\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 1822508..c7c402d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -169,7 +169,7 @@ mac-build-steps: &mac-build-steps\n         name: GN gen\n         command: |\n           cd src\n-          SCCACHE_PATH=\""$PWD/libchromiumcontent/tools/sccache/aad2120/mac/sccache\""\n+          SCCACHE_PATH=\""$PWD/electron/external_binaries/sccache\""\n           echo 'export SCCACHE_WRAPPER=\""'\""$SCCACHE_PATH\""'\""' >> $BASH_ENV\n           echo 'export CHROMIUM_BUILDTOOLS_PATH=\""'\""$PWD\""'/buildtools\""' >> $BASH_ENV\n           source $BASH_ENV\ndiff --git a/vsts-gn.yml b/vsts-gn.yml\nindex 3c9985b..24ed1f5 100644\n--- a/vsts-gn.yml\n+++ b/vsts-gn.yml\n@@ -31,13 +31,13 @@ phases:\n   - bash: |\n       cd src\n       export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools\n-      export SCCACHE_WRAPPER=\""`pwd`/electron/external_binaries/sccache\""\n-      export SCCACHE_HELPER=\""`pwd`/libchromiumcontent/script/sccache\""\n-      \""$SCCACHE_HELPER\"" --start-server --azure_container \""$(SCCACHE_AZURE_BLOB_CONTAINER)\"" --azure_connection \""$(SCCACHE_AZURE_CONNECTION_STRING)\""\n-      echo \""##vso[task.setvariable variable=SCCACHE_WRAPPER]$SCCACHE_WRAPPER\""\n-      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]`pwd`/buildtools\""\n+      export SCCACHE_BINARY=\""`pwd`/electron/external_binaries/sccache\""\n+      # SCCACHE_AZURE_BLOB_CONTAINER and SCCACHE_AZURE_CONNECTION_STRING are expected to be set.\n+      \""$SCCACHE_BINARY\"" --start-server\n+      echo \""##vso[task.setvariable variable=SCCACHE_BINARY]$SCCACHE_BINARY\""\n+      echo \""##vso[task.setvariable variable=CHROMIUM_BUILDTOOLS_PATH]$CHROMIUM_BUILDTOOLS_PATH\""\n       echo \""GN gen for: $GN_CONFIG\""\n-      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_WRAPPER\""'\""'\n+      gn gen out/Default --args='import(\""'$GN_CONFIG'\"") cc_wrapper=\""'\""$SCCACHE_BINARY\""'\""'\n     name: GN_gen\n \n   - bash: |\n@@ -46,8 +46,8 @@ phases:\n     name: Ninja_build\n \n   - bash: |\n-      \""$SCCACHE_WRAPPER\"" -s\n-      \""$SCCACHE_WRAPPER\"" --stop-server\n+      \""$SCCACHE_BINARY\"" -s\n+      \""$SCCACHE_BINARY\"" --stop-server\n     name: Check_sccache_stats\n \n   - bash: |\n"", ""diff --git a/go.mod b/go.mod\nindex ea705da..8c352f7 100644\n--- a/go.mod\n+++ b/go.mod\n@@ -38,7 +38,7 @@ require (\n \tgithub.com/hashicorp/go-msgpack v0.0.0-20150518234257-fa3f63826f7c // indirect\n \tgithub.com/hashicorp/raft v1.0.0 // indirect\n \tgithub.com/hashicorp/vault/api v1.0.2\n-\tgithub.com/influxdata/flux v0.41.0\n+\tgithub.com/influxdata/flux v0.42.0\n \tgithub.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6\n \tgithub.com/influxdata/usage-client v0.0.0-20160829180054-6d3895376368\n \tgithub.com/jessevdk/go-flags v1.4.0\ndiff --git a/go.sum b/go.sum\nindex 4bfdf4c..634a0f1 100644\n--- a/go.sum\n+++ b/go.sum\n@@ -206,8 +206,8 @@ github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NH\n github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\n github.com/influxdata/changelog v1.0.0 h1:RstJD6H48zLQj0GdE6E6k/6RPwtUjkyzIe/T1E/xuWU=\n github.com/influxdata/changelog v1.0.0/go.mod h1:uzpGWE/qehT8L426YuXwpMQub+a63vIINhIeEI9mnSM=\n-github.com/influxdata/flux v0.41.0 h1:ljbWJmE+aNx8Yoqhb04gWC4sXMV87eYUxz5vjYphLLs=\n-github.com/influxdata/flux v0.41.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n+github.com/influxdata/flux v0.42.0 h1:2iEG6hLHdHEJ6LgD8OSnlHS9yoVrLO1/aM4P9ERb94U=\n+github.com/influxdata/flux v0.42.0/go.mod h1:QvF9P06HFgYKD28Z556rFLJ0D0bvtcgEtkFALteZ4Lo=\n github.com/influxdata/goreleaser v0.97.0-influx h1:jT5OrcW7WfS0e2QxfwmTBjhLvpIC9CDLRhNgZJyhj8s=\n github.com/influxdata/goreleaser v0.97.0-influx/go.mod h1:MnjA0e0Uq6ISqjG1WxxMAl+3VS1QYjILSWVnMYDxasE=\n github.com/influxdata/influxql v0.0.0-20180925231337-1cbfca8e56b6 h1:CFx+pP90q/qg3spoiZjf8donE4WpAdjeJfPOcoNqkWo=\ndiff --git a/query/stdlib/testing/testing.go b/query/stdlib/testing/testing.go\nindex d41574a..85b0673 100644\n--- a/query/stdlib/testing/testing.go\n+++ b/query/stdlib/testing/testing.go\n@@ -98,4 +98,6 @@ var FluxEndToEndSkipList = map[string]string{\n \t\""http_endpoint\"": \""need ability to test side effects in e2e tests: (https://github.com/influxdata/flux/issues/1723)\"",\n \n \t\""holt_winters_panic\"": \""Expected output is an empty table which breaks the testing framework (https://github.com/influxdata/influxdb/issues/14749)\"",\n+\n+\t\""secrets\"": \""Cannot inject custom deps into the test framework so the secrets don't lookup correctly\"",\n }\n""]",5,"[""e137f9fdbdb6bf3f85c3f7ac9323785e445844c8"", ""a62314d9bb632be6af026686615d14b912250512"", ""b7ce2894fd1794064bd6db4ed730bb6cb7728739"", ""45837af24a33308a70a3454f0f650f9fe728e272"", ""454003841aabeb74396d73541378bfa59c75b5db""]","[""feat"", ""refactor"", ""test"", ""cicd"", ""build""]"
"update wrapping tests for v7,use `regexp_instr != 0` instead of `REGEXP` keyword,updated react demo parcel command,export a modal transition preset,added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284","[""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n"", ""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n"", ""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n"", ""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n""]",5,"[""317f4eefecddfb1392ca71d551840f446feee302"", ""06e2be4e2019b6fa714e1fcb34485860ef1ede79"", ""32b92cfa0b74a6c25990e32ac6aab12b8496794c"", ""535708ae50aecb452560a23356fd396f99ef13a2"", ""aca23027da1295c78fdf42ba9687d8ccc88784d7""]","[""test"", ""fix"", ""build"", ""refactor"", ""docs""]"
"add riscv64gc-unknown-linux-gnu,buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23,updated react demo parcel command,update flushed index before truncating,add benchmark for known-slow table expression","[""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n"", ""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n"", ""diff --git a/demo/react/package.json b/demo/react/package.json\nindex be28bf9..32d0952 100644\n--- a/demo/react/package.json\n+++ b/demo/react/package.json\n@@ -12,7 +12,7 @@\n   },\n   \""scripts\"": {\n     \""start\"": \""parcel serve public/index.html --no-cache --open\"",\n-    \""build\"": \""parcel build -t browser -d dist public/index.html --no-source-maps\""\n+    \""build\"": \""parcel build --target browser --dist-dir dist public/index.html --no-source-maps\""\n   },\n   \""bugs\"": {\n     \""url\"": \""https://github.com/matteobruni/tsparticles/issues\""\n"", ""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n""]",5,"[""173553c0372e66e03bdab19e0e6c2dd44daa14a0"", ""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d"", ""32b92cfa0b74a6c25990e32ac6aab12b8496794c"", ""933ab6bb86372913c992567cf9660009900911a7"", ""e9617f0854030e70365eb264bcb3b58078e79e9e""]","[""cicd"", ""feat"", ""build"", ""fix"", ""test""]"
"only run Snyk once a day on master

Signed-off-by: Alex Collins <alex_collins@intuit.com>,skip flaky test,update flushed index before truncating,detach ViewControllers when not active,spring version, core version","[""diff --git a/.github/workflows/snyk.yml b/.github/workflows/snyk.yml\nindex 675a22b..a4586d0 100644\n--- a/.github/workflows/snyk.yml\n+++ b/.github/workflows/snyk.yml\n@@ -1,5 +1,7 @@\n name: Snyk\n-on: push\n+on:\n+  schedule:\n+    - cron: \""30 2 * * *\""\n jobs:\n   security:\n     runs-on: ubuntu-latest\n"", ""diff --git a/test/browser-pool/browser-pool.test.ts b/test/browser-pool/browser-pool.test.ts\nindex 9f21322..7a011b5 100644\n--- a/test/browser-pool/browser-pool.test.ts\n+++ b/test/browser-pool/browser-pool.test.ts\n@@ -128,7 +128,8 @@ describe.each([\n             expect(page.close).toBeDefined();\n         });\n \n-        test('should allow early aborting in case of outer timeout', async () => {\n+        // TODO: this test is very flaky in the CI\n+        test.skip('should allow early aborting in case of outer timeout', async () => {\n             const timeout = browserPool.operationTimeoutMillis;\n             browserPool.operationTimeoutMillis = 500;\n             // @ts-expect-error mocking private method\n"", ""diff --git a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\nindex f0c8639..d5c8246 100644\n--- a/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n+++ b/journal/src/main/java/io/camunda/zeebe/journal/file/SegmentedJournalWriter.java\n@@ -99,8 +99,8 @@ final class SegmentedJournalWriter {\n \n     // Truncate down to the current index, such that the last index is `index`, and the next index\n     // `index + 1`\n-    currentWriter.truncate(index);\n     flusher.setLastFlushedIndex(index);\n+    currentWriter.truncate(index);\n   }\n \n   void flush() {\n"", ""diff --git a/ionic/components/nav/nav-controller.ts b/ionic/components/nav/nav-controller.ts\nindex becdd99..1cc3c31 100644\n--- a/ionic/components/nav/nav-controller.ts\n+++ b/ionic/components/nav/nav-controller.ts\n@@ -1410,6 +1410,9 @@ export class NavController extends Ion {\n       // set the ComponentRef's instance to this ViewController\n       view.setInstance(component);\n \n+      // remember the ChangeDetectorRef for this ViewController\n+      view.setChangeDetector(hostViewRef.changeDetectorRef);\n+\n       // remember the ElementRef to the ion-page elementRef that was just created\n       view.setPageRef(pageElementRef);\n \ndiff --git a/ionic/components/nav/view-controller.ts b/ionic/components/nav/view-controller.ts\nindex 3207fa2..069c74d 100644\n--- a/ionic/components/nav/view-controller.ts\n+++ b/ionic/components/nav/view-controller.ts\n@@ -1,4 +1,4 @@\n-import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer} from 'angular2/core';\n+import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer, ChangeDetectorRef} from 'angular2/core';\n \n import {Navbar} from '../navbar/navbar';\n import {NavController, NavOptions} from './nav-controller';\n@@ -33,6 +33,7 @@ export class ViewController {\n   private _nbVwRef: ViewContainerRef;\n   private _onDismiss: Function = null;\n   private _pgRef: ElementRef;\n+  private _cd: ChangeDetectorRef;\n   protected _nav: NavController;\n \n   /**\n@@ -166,6 +167,13 @@ export class ViewController {\n   /**\n    * @private\n    */\n+  setChangeDetector(cd: ChangeDetectorRef) {\n+    this._cd = cd;\n+  }\n+\n+  /**\n+   * @private\n+   */\n   setInstance(instance: any) {\n     this.instance = instance;\n   }\n@@ -467,6 +475,14 @@ export class ViewController {\n    * The view is about to enter and become the active view.\n    */\n   willEnter() {\n+    if (this._cd) {\n+      // ensure this has been re-attached to the change detector\n+      this._cd.reattach();\n+\n+      // detect changes before we run any user code\n+      this._cd.detectChanges();\n+    }\n+\n     ctrlFn(this, 'onPageWillEnter');\n   }\n \n@@ -496,6 +512,10 @@ export class ViewController {\n    */\n   didLeave() {\n     ctrlFn(this, 'onPageDidLeave');\n+\n+    // when this is not the active page\n+    // we no longer need to detect changes\n+    this._cd && this._cd.detach();\n   }\n \n   /**\n"", ""diff --git a/backend/pom.xml b/backend/pom.xml\nindex 5f3e72f..7b1917f 100644\n--- a/backend/pom.xml\n+++ b/backend/pom.xml\n@@ -148,7 +148,7 @@\n         <dependency>\n             <groupId>io.metersphere</groupId>\n             <artifactId>ms-jmeter-core</artifactId>\n-            <version>1.0.3</version>\n+            <version>1.0.4</version>\n         </dependency>\n \n         <!--   \u6392\u9664jmeter\u4e2d\u7684 xstream \u89e3\u51b3bug     -->\n@@ -430,7 +430,7 @@\n                         <artifactItem>\n                             <groupId>org.apache.jmeter</groupId>\n                             <artifactId>ApacheJMeter_functions</artifactId>\n-                            <version>5.4.2</version>\n+                            <version>5.4.3</version>\n                             <type>jar</type>\n                             <overWrite>true</overWrite>\n                             <outputDirectory>src/main/resources/jmeter/lib/ext</outputDirectory>\ndiff --git a/pom.xml b/pom.xml\nindex 207e439..8c7de0f 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -10,7 +10,7 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.6.1</version>\n+        <version>2.6.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n \n""]",5,"[""dbb537a26e388a8d7d17faf131abc30c2f7a84e6"", ""e2e8ad25854bd1e7cdbc7f50b50bbd99e04ad47d"", ""933ab6bb86372913c992567cf9660009900911a7"", ""b282e90e2cbb74559aab79eee8443a4d7c85502a"", ""c55591ba157298a9c5816693c102a89dfd058830""]","[""cicd"", ""test"", ""fix"", ""feat"", ""build""]"
"update wrapping tests for v7,remove deprecated settings

Removes deprecated ZEEBE_HOST environment variable, and removes
unnecessary log level environment variable, since it's already the
default in the log file,add props to get color and label from a route,print errors without stacktrace,add riscv64gc-unknown-linux-gnu","[""diff --git a/core/src/components/select/test/legacy/wrapping/select.e2e.ts b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\nnew file mode 100644\nindex 0000000..e530ebb\n--- /dev/null\n+++ b/core/src/components/select/test/legacy/wrapping/select.e2e.ts\n@@ -0,0 +1,46 @@\n+import { expect } from '@playwright/test';\n+import { test } from '@utils/test/playwright';\n+\n+test.describe('select: wrapping', () => {\n+  test('should not wrap text by default', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""nowrap\"">\n+        <ion-select-option value=\""nowrap\"">Should not wrap when no label exists and no class is added to make the text wrap</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-nowrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should wrap text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap when no label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n+    `);\n+\n+    const select = page.locator('ion-select');\n+    await expect(select).toHaveScreenshot(`select-wrap-${page.getSnapshotSettings()}.png`);\n+  });\n+\n+  test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n+    skip.rtl();\n+\n+    await page.setContent(`\n+      <ion-item>\n+        <ion-label>Really long label should not wrap</ion-label>\n+        <ion-select value=\""wrap\"" class=\""ion-text-wrap\"">\n+          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+        </ion-select>\n+      </ion-item>\n+    `);\n+\n+    const select = page.locator('ion-item');\n+    await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n+  });\n+});\ndiff --git a/core/src/components/select/test/wrapping/select.e2e.ts b/core/src/components/select/test/wrapping/select.e2e.ts\nindex 1cf0e62..b0cb528 100644\n--- a/core/src/components/select/test/wrapping/select.e2e.ts\n+++ b/core/src/components/select/test/wrapping/select.e2e.ts\n@@ -31,18 +31,13 @@ test.describe('select: wrapping', () => {\n   test('should not wrap label while wrapping text with class', async ({ page, skip }) => {\n     skip.rtl();\n \n-    // TODO(FW-3787) Make label a property of select\n     await page.setContent(`\n-      <ion-item>\n-        <ion-label>Really long label should not wrap</ion-label>\n-        <ion-select value=\""wrap\"" aria-label=\""Should Wrap\"" class=\""ion-text-wrap\"">\n-          <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n-        </ion-select>\n-        </ion-label>\n-      </ion-item>\n+      <ion-select value=\""wrap\"" label=\""Really long label should not wrap\"" class=\""ion-text-wrap\"">\n+        <ion-select-option value=\""wrap\"">Should wrap value only when label exists and really long text exists to make it wrap the text</ion-select-option>\n+      </ion-select>\n     `);\n \n-    const select = page.locator('ion-item');\n+    const select = page.locator('ion-select');\n     await expect(select).toHaveScreenshot(`select-wrap-with-label-${page.getSnapshotSettings()}.png`);\n   });\n });\n"", ""diff --git a/Dockerfile b/Dockerfile\nindex 6762a39..7f380cd 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -34,7 +34,6 @@ RUN wget -O - https://github.com/jvm-profiling-tools/async-profiler/releases/dow\n FROM ${APP_ENV} as app\n \n ENV ZB_HOME=/usr/local/zeebe \\\n-    ZEEBE_LOG_LEVEL=info \\\n     ZEEBE_BROKER_GATEWAY_NETWORK_HOST=0.0.0.0 \\\n     ZEEBE_STANDALONE_GATEWAY=false\n ENV PATH \""${ZB_HOME}/bin:${PATH}\""\ndiff --git a/docker/utils/startup.sh b/docker/utils/startup.sh\nindex bc8d2fc..0fcde2b 100755\n--- a/docker/utils/startup.sh\n+++ b/docker/utils/startup.sh\n@@ -1,17 +1,14 @@\n #!/bin/bash -xeu\n \n-# legacy support\n-# This environment variable was used to set the gatewway cluster host in standalone and embedded mode.\n-# Now, there are two dedicated environment variables for the two different deployment scenarios.\n-export ZEEBE_HOST=${ZEEBE_HOST:-$(hostname -i)}\n-# Legacy support\n+HOST=$(hostname -i)\n \n if [ \""$ZEEBE_STANDALONE_GATEWAY\"" = \""true\"" ]; then\n-    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_GATEWAY_NETWORK_HOST=${ZEEBE_GATEWAY_NETWORK_HOST:-${HOST}}\n+    export ZEEBE_GATEWAY_CLUSTER_HOST=${ZEEBE_GATEWAY_CLUSTER_HOST:-${HOST}}\n \n     exec /usr/local/zeebe/bin/gateway\n else\n-    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${ZEEBE_HOST}}\n+    export ZEEBE_BROKER_NETWORK_HOST=${ZEEBE_BROKER_NETWORK_HOST:-${HOST}}\n     export ZEEBE_BROKER_GATEWAY_CLUSTER_HOST=${ZEEBE_BROKER_GATEWAY_CLUSTER_HOST:-${ZEEBE_BROKER_NETWORK_HOST}}\n \n     exec /usr/local/zeebe/bin/broker\n"", ""diff --git a/src/components/BottomNavigation.js b/src/components/BottomNavigation.js\nindex 1b72302..7d8ea75 100644\n--- a/src/components/BottomNavigation.js\n+++ b/src/components/BottomNavigation.js\n@@ -24,8 +24,8 @@ const AnimatedPaper = Animated.createAnimatedComponent(Paper);\n \n type Route = {\n   key: string,\n-  title: string,\n-  icon: IconSource,\n+  title?: string,\n+  icon?: IconSource,\n   color?: string,\n };\n \n@@ -51,7 +51,7 @@ type Props<T> = {\n    * - `key`: a unique key to identify the route\n    * - `title`: title of the route to use as the tab label\n    * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n-   * - `color`: color to use as background color for shifting bottom navigation (optional)\n+   * - `color`: color to use as background color for shifting bottom navigation\n    *\n    * Example:\n    *\n@@ -115,11 +115,27 @@ type Props<T> = {\n   /**\n    * Callback which returns a React Element to be used as tab icon.\n    */\n-  renderIcon?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderIcon?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n   /**\n    * Callback which React Element to be used as tab label.\n    */\n-  renderLabel?: (props: { route: T, focused: boolean }) => React.Node,\n+  renderLabel?: (props: {\n+    route: T,\n+    focused: boolean,\n+    tintColor: string,\n+  }) => React.Node,\n+  /**\n+   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n+   */\n+  getLabelText?: (props: { route: T }) => string,\n+  /**\n+   * Get color for the tab, uses `route.color` by default.\n+   */\n+  getColor?: (props: { route: T }) => string,\n   /**\n    * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n    */\n@@ -159,6 +175,10 @@ type State = {\n    */\n   ripple: Animated.Value,\n   /**\n+   * Animation for the touch feedback, used to determine it's scale and opacity.\n+   */\n+  touch: Animated.Value,\n+  /**\n    * Layout of the tab bar. The width is used to determine the size and position of the ripple.\n    */\n   layout: { height: number, width: number, measured: boolean },\n@@ -173,7 +193,7 @@ const MIN_SHIFT_AMOUNT = 10;\n const MIN_TAB_WIDTH = 96;\n const MAX_TAB_WIDTH = 168;\n const BAR_HEIGHT = 56;\n-const SMALL_RIPPLE_SIZE = 72;\n+const SMALL_RIPPLE_SIZE = 96;\n const ACTIVE_LABEL_SIZE = 14;\n const INACTIVE_LABEL_SIZE = 12;\n \n@@ -251,6 +271,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ),\n       index: new Animated.Value(index),\n       ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n+      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n       layout: { height: 0, width: 0, measured: false },\n       previous: 0,\n     };\n@@ -349,6 +370,15 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n   _handleTabPress = (index: number) => {\n     const { navigationState } = this.props;\n \n+    this.state.touch.setValue(MIN_RIPPLE_SCALE);\n+\n+    Animated.timing(this.state.touch, {\n+      toValue: 1,\n+      duration: 300,\n+      easing: Easing.in(Easing.sin),\n+      useNativeDriver: true,\n+    }).start();\n+\n     if (index !== navigationState.index) {\n       this.props.onIndexChange(index);\n     }\n@@ -376,6 +406,8 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       renderScene,\n       renderIcon,\n       renderLabel,\n+      getLabelText = ({ route }) => route.title,\n+      getColor = ({ route }) => route.color,\n       barStyle,\n       style,\n       theme,\n@@ -400,7 +432,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n       ? this.state.index.interpolate({\n           inputRange: routes.map((_, i) => i),\n           outputRange: routes.map(\n-            route => route.color || approxBackgroundColor\n+            route => getColor({ route }) || approxBackgroundColor\n           ),\n         })\n       : approxBackgroundColor;\n@@ -416,7 +448,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n           .rgb()\n           .string();\n \n-    const rippleColor = color(textColor)\n+    const touchColor = color(textColor)\n       .alpha(0.12)\n       .rgb()\n       .string();\n@@ -430,22 +462,10 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n \n     // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n     // We need to move it from the left to the active tab and also account for how much that tab has shifted.\n-    const rippleShift =\n-      navigationState.index * tabWidth +\n-      tabWidth / 2 +\n-      this._calculateShift(\n-        this.state.previous,\n-        navigationState.index,\n-        routes.length\n-      );\n \n     return (\n       <View\n-        style={[\n-          styles.container,\n-          { backgroundColor: theme.dark ? white : black },\n-          style,\n-        ]}\n+        style={[styles.container, style]}\n         onLayout={this._handleLayout}\n         pointerEvents={layout.measured ? 'auto' : 'none'}\n       >\n@@ -485,25 +505,30 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n             style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n           >\n             {shifting ? (\n-              // Large ripple with the backround color\n               <Animated.View\n                 pointerEvents=\""none\""\n                 style={[\n                   styles.ripple,\n                   {\n                     // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - layout.width / 2,\n-                    left: rippleShift - layout.width / 2,\n-                    height: layout.width,\n-                    width: layout.width,\n+                    top: BAR_HEIGHT / 2 - layout.width / 8,\n+                    left:\n+                      navigationState.index * tabWidth +\n+                      tabWidth / 2 -\n+                      layout.width / 8,\n+                    height: layout.width / 4,\n+                    width: layout.width / 4,\n                     borderRadius: layout.width / 2,\n-                    backgroundColor: routes[navigationState.index].color,\n+                    backgroundColor: getColor({\n+                      route: routes[navigationState.index],\n+                    }),\n                     transform: [\n+                      { translateX: this.state.shifts[navigationState.index] },\n                       {\n                         // Scale to twice the size  to ensure it covers the whole tab bar\n                         scale: this.state.ripple.interpolate({\n                           inputRange: [0, 1],\n-                          outputRange: [0, 2],\n+                          outputRange: [0, 8],\n                         }),\n                       },\n                     ],\n@@ -515,36 +540,36 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                 ]}\n               />\n             ) : null}\n-            {shifting ? (\n-              // Small subtle ripple on touch\n-              <Animated.View\n-                pointerEvents=\""none\""\n-                style={[\n-                  styles.ripple,\n-                  {\n-                    // Set top and left values so that the ripple's center is same as the tab's center\n-                    top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n-                    left: rippleShift - SMALL_RIPPLE_SIZE / 2,\n-                    height: SMALL_RIPPLE_SIZE,\n-                    width: SMALL_RIPPLE_SIZE,\n-                    borderRadius: SMALL_RIPPLE_SIZE / 2,\n-                    backgroundColor: rippleColor,\n-                    transform: [\n-                      {\n-                        scale: this.state.ripple.interpolate({\n-                          inputRange: [0, 0.5, 1],\n-                          outputRange: [0, 1, 1],\n-                        }),\n-                      },\n-                    ],\n-                    opacity: this.state.ripple.interpolate({\n-                      inputRange: [0, MIN_RIPPLE_SCALE, 0.25, 0.5],\n-                      outputRange: [0, 0, 1, 0],\n-                    }),\n-                  },\n-                ]}\n-              />\n-            ) : null}\n+            <Animated.View\n+              pointerEvents=\""none\""\n+              style={[\n+                styles.ripple,\n+                {\n+                  // Set top and left values so that the ripple's center is same as the tab's center\n+                  top: BAR_HEIGHT / 2 - SMALL_RIPPLE_SIZE / 2,\n+                  left:\n+                    navigationState.index * tabWidth +\n+                    tabWidth / 2 -\n+                    SMALL_RIPPLE_SIZE / 2,\n+                  height: SMALL_RIPPLE_SIZE,\n+                  width: SMALL_RIPPLE_SIZE,\n+                  borderRadius: SMALL_RIPPLE_SIZE / 2,\n+                  backgroundColor: touchColor,\n+                  transform: [\n+                    {\n+                      translateX: shifting\n+                        ? this.state.shifts[navigationState.index]\n+                        : 0,\n+                    },\n+                    { scale: this.state.touch },\n+                  ],\n+                  opacity: this.state.touch.interpolate({\n+                    inputRange: [0, 0.5, 1],\n+                    outputRange: [0, 1, 0],\n+                  }),\n+                },\n+              ]}\n+            />\n             {routes.map((route, index) => {\n               const shift = this.state.shifts[index];\n               const focused = this.state.tabs[index];\n@@ -607,7 +632,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderIcon ? (\n-                          renderIcon({ route, focused: true })\n+                          renderIcon({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <Icon\n                             style={styles.icon}\n@@ -625,7 +654,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderIcon ? (\n-                            renderIcon({ route, focused: false })\n+                            renderIcon({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <Icon\n                               style={styles.icon}\n@@ -652,7 +685,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                         ]}\n                       >\n                         {renderLabel ? (\n-                          renderLabel({ route, focused: true })\n+                          renderLabel({\n+                            route,\n+                            focused: true,\n+                            tintColor: activeColor,\n+                          })\n                         ) : (\n                           <AnimatedText\n                             style={[\n@@ -662,7 +699,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                               },\n                             ]}\n                           >\n-                            {route.title}\n+                            {getLabelText({ route })}\n                           </AnimatedText>\n                         )}\n                       </Animated.View>\n@@ -674,7 +711,11 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                           ]}\n                         >\n                           {renderLabel ? (\n-                            renderLabel({ route, focused: false })\n+                            renderLabel({\n+                              route,\n+                              focused: false,\n+                              tintColor: inactiveColor,\n+                            })\n                           ) : (\n                             <AnimatedText\n                               style={[\n@@ -684,7 +725,7 @@ class BottomNavigation<T: Route> extends React.Component<Props<T>, State> {\n                                 },\n                               ]}\n                             >\n-                              {route.title}\n+                              {getLabelText({ route })}\n                             </AnimatedText>\n                           )}\n                         </Animated.View>\n"", ""diff --git a/website/api/auth/index.js b/website/api/auth/index.js\nindex c2f1f8b..87ab9b6 100644\n--- a/website/api/auth/index.js\n+++ b/website/api/auth/index.js\n@@ -36,13 +36,19 @@ module.exports = async function (context, req) {\n \n     redirect(context, segment, tokens, '');\n   } catch (error) {\n+    if (!error.stack) {\n+      redirect(context, segment, tokens, toBase64(error));\n+      return;\n+    }\n     context.log(`Error: ${error.stack}`);\n-    let buff = Buffer.from(error.stack);\n-    let message = buff.toString('base64');\n-    redirect(context, segment, tokens, message);\n+    redirect(context, segment, tokens, toBase64(error.stack));\n   }\n }\n \n+function toBase64(str) {\n+  return Buffer.from(str).toString('base64');\n+}\n+\n function redirect(context, segment, tokens, error) {\n   const url = `${process.env['DOCS_LOCATION']}/docs/auth?segment=${segment}&access_token=${tokens.access_token}&refresh_token=${tokens.refresh_token}&expires_in=${tokens.expires_in}&error=${error}`;\n   context.res = {\n"", ""diff --git a/.github/workflows/linux-riscv64.yaml b/.github/workflows/linux-riscv64.yaml\nnew file mode 100644\nindex 0000000..8da3d41\n--- /dev/null\n+++ b/.github/workflows/linux-riscv64.yaml\n@@ -0,0 +1,53 @@\n+name: Linux-riscv64\n+\n+env:\n+  DEBUG: 'napi:*'\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  cancel-in-progress: true\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+jobs:\n+  build:\n+    name: stable - riscv64-unknown-linux-gnu - node@18\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Setup node\n+        uses: actions/setup-node@v3\n+        with:\n+          node-version: 18\n+          cache: 'yarn'\n+\n+      - name: Install\n+        uses: dtolnay/rust-toolchain@stable\n+        with:\n+          toolchain: stable\n+          targets: riscv64gc-unknown-linux-gnu\n+\n+      - name: Cache cargo\n+        uses: actions/cache@v3\n+        with:\n+          path: |\n+            ~/.cargo/registry\n+            ~/.cargo/git\n+          key: stable-linux-riscv64-gnu-node@18-cargo-cache\n+\n+      - name: Install dependencies\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y gcc-riscv64-linux-gnu\n+          yarn config set --json supportedArchitectures.cpu '[\""current\"", \""riscv64\""]'\n+          yarn config set supportedArchitectures.libc \""glibc\""\n+          yarn install --immutable --mode=skip-build\n+\n+      - name: Cross build native tests\n+        run: yarn build:test -- --target riscv64gc-unknown-linux-gnu\ndiff --git a/cli/src/api/templates/ci-template.ts b/cli/src/api/templates/ci-template.ts\nindex 783aa41..ee1dfdc 100644\n--- a/cli/src/api/templates/ci-template.ts\n+++ b/cli/src/api/templates/ci-template.ts\n@@ -94,6 +94,14 @@ jobs:\n           - host: windows-latest\n             target: 'aarch64-pc-windows-msvc'\n             build: yarn build --platform --target aarch64-pc-windows-msvc\n+          - host: ubuntu-latest\n+            target: 'riscv64gc-unknown-linux-gnu'\n+            setup: |\n+              sudo apt-get update\n+              sudo apt-get install gcc-riscv64-linux-gnu -y\n+            build: |\n+              yarn build --platform --target riscv64gc-unknown-linux-gnu\n+              riscv64-linux-gnu-strip *.node\n \n     name: stable - \\${{ matrix.settings.target }} - node@18\n     runs-on: \\${{ matrix.settings.host }}\ndiff --git a/cli/src/utils/ci.ts b/cli/src/utils/ci.ts\nindex 3084bb3..d77148d 100644\n--- a/cli/src/utils/ci.ts\n+++ b/cli/src/utils/ci.ts\n@@ -99,4 +99,13 @@ export const CIConfig: Partial<\n     ],\n     test: false,\n   },\n+  'riscv64gc-unknown-linux-gnu': {\n+    host: 'ubuntu-latest',\n+    build_setup: [\n+      'sudo apt-get update',\n+      'sudo apt-get install g++-riscv64-linux-gnu gcc-riscv64-linux-gnu -y',\n+    ],\n+    // No official nodejs docker image for riscv64\n+    test: false,\n+  },\n }\n""]",5,"[""317f4eefecddfb1392ca71d551840f446feee302"", ""e4a11fd5c34942ba12737f1c8c084489428ee274"", ""ded26d768ff432ad3bde3c0aa1e95ce50726100a"", ""d129eaf9125a967ac86c6c7276bbae6b4d50af36"", ""173553c0372e66e03bdab19e0e6c2dd44daa14a0""]","[""test"", ""build"", ""feat"", ""fix"", ""cicd""]"
"xfail on to_parquet and to_csv that use pyarrow write options,[gn win] link comctl32.lib to fix component build,remove appear css animation,added changelog pipe docs

Added the documentation to the new changelog pipe.

Refs #284,Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>","[""diff --git a/ibis/backends/tests/test_export.py b/ibis/backends/tests/test_export.py\nindex 4d536d7..5bb9775 100644\n--- a/ibis/backends/tests/test_export.py\n+++ b/ibis/backends/tests/test_export.py\n@@ -222,18 +222,23 @@ def test_table_to_parquet(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\""), [({\""version\"": \""1.0\""}), ({\""version\"": \""2.6\""})])\n-def test_table_to_parquet_writer_kwargs(kwargs, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.NotSupportedError,\n+)\n+@pytest.mark.parametrize(\""version\"", [\""1.0\"", \""2.6\""])\n+def test_table_to_parquet_writer_kwargs(version, tmp_path, backend, awards_players):\n     outparquet = tmp_path / \""out.parquet\""\n-    awards_players.to_parquet(outparquet, **kwargs)\n+    awards_players.to_parquet(outparquet, version=version)\n \n     df = pd.read_parquet(outparquet)\n \n     backend.assert_frame_equal(awards_players.to_pandas(), df)\n \n-    file = pa.parquet.ParquetFile(outparquet)\n+    md = pa.parquet.read_metadata(outparquet)\n \n-    assert file.metadata.format_version == kwargs[\""version\""]\n+    assert md.format_version == version\n \n \n @pytest.mark.notimpl(\n@@ -316,14 +321,20 @@ def test_table_to_csv(tmp_path, backend, awards_players):\n \n \n @pytest.mark.notimpl([\""flink\""])\n-@pytest.mark.parametrize((\""kwargs\"", \""delimiter\""), [({\""write_options\"": pcsv.WriteOptions(delimiter=\"";\"")}, \"";\""), ({\""write_options\"": pcsv.WriteOptions(delimiter=\""\\t\"")}, \""\\t\"")])\n-def test_table_to_csv_writer_kwargs(kwargs, delimiter, tmp_path, backend, awards_players):\n+@pytest.mark.notimpl(\n+    [\""duckdb\""],\n+    reason=\""cannot inline WriteOptions objects\"",\n+    raises=sa.exc.ProgrammingError,\n+)\n+@pytest.mark.parametrize(\""delimiter\"", [\"";\"", \""\\t\""], ids=[\""semicolon\"", \""tab\""])\n+def test_table_to_csv_writer_kwargs(delimiter, tmp_path, awards_players):\n     outcsv = tmp_path / \""out.csv\""\n     # avoid pandas NaNonense\n     awards_players = awards_players.select(\""playerID\"", \""awardID\"", \""yearID\"", \""lgID\"")\n \n-    awards_players.to_csv(outcsv, **kwargs)\n-    pd.read_csv(outcsv, delimiter=delimiter)\n+    awards_players.to_csv(outcsv, write_options=pcsv.WriteOptions(delimiter=delimiter))\n+    df = pd.read_csv(outcsv, delimiter=delimiter, nrows=1)\n+    assert len(df) == 1\n \n \n @pytest.mark.parametrize(\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/src/popup/Popup.tsx b/src/popup/Popup.tsx\nindex d485bb6..2abc22a 100644\n--- a/src/popup/Popup.tsx\n+++ b/src/popup/Popup.tsx\n@@ -269,7 +269,6 @@ export class Popup extends React.Component<{ t: TranslationFunction }, PopupStat\n         <CSSTransition\n           classNames='fade'\n           in={!!currentTabUrl}\n-          appear\n           timeout={500}\n           exit={false}\n           mountOnEnter\n"", ""diff --git a/docs/115-release.md b/docs/115-release.md\nindex 21c670a..cb893ef 100644\n--- a/docs/115-release.md\n+++ b/docs/115-release.md\n@@ -34,6 +34,22 @@ release:\n   name_template: \""{{.ProjectName}}-v{{.Version}}\""\n ```\n \n+## Customize the changelog\n+\n+You can customize how the changelog is generated using the\n+`changelog` section in the config file:\n+\n+```yaml\n+# .goreleaser.yml\n+changelog:\n+  filters:\n+    # commit messages containing the words listed here will be removed from\n+    # the changelog\n+    exclude:\n+      - docs\n+      - typo\n+```\n+\n ## Custom release notes\n \n You can specify a file containing your custom release notes, and\n@@ -42,8 +58,10 @@ GoReleaser will then skip its own release notes generation,\n using the contents of your file instead.\n You can use Markdown to format the contents of your file.\n \n-On Unix systems you can also generate the release notes in-line by using [process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n-To list all commits since the last tag, but skip ones starting with `Merge` or `docs`, you could run this command:\n+On Unix systems you can also generate the release notes in-line by using\n+[process substitution](https://en.wikipedia.org/wiki/Process_substitution).\n+To list all commits since the last tag, but skip ones starting with `Merge` or\n+`docs`, you could run this command:\n \n ```sh\n goreleaser --release-notes <(git log --pretty=oneline --abbrev-commit $(git describe --tags --abbrev=0)^.. | grep -v '^[^ ]* \\(Merge\\|docs\\)')\n"", ""diff --git a/config/config.go b/config/config.go\nindex ee2922d..f37c4c1 100644\n--- a/config/config.go\n+++ b/config/config.go\n@@ -116,9 +116,10 @@ type Archive struct {\n \n // Release config used for the GitHub release\n type Release struct {\n-\tGitHub     Repo `yaml:\"",omitempty\""`\n-\tDraft      bool `yaml:\"",omitempty\""`\n-\tPrerelease bool `yaml:\"",omitempty\""`\n+\tGitHub       Repo   `yaml:\"",omitempty\""`\n+\tDraft        bool   `yaml:\"",omitempty\""`\n+\tPrerelease   bool   `yaml:\"",omitempty\""`\n+\tNameTemplate string `yaml:\"",omitempty`\n \n \t// Capture all undefined fields and should be empty after loading\n \tXXX map[string]interface{} `yaml:\"",inline\""`\ndiff --git a/internal/name/name.go b/internal/name/name.go\nindex ca5dbec..e53a0a2 100644\n--- a/internal/name/name.go\n+++ b/internal/name/name.go\n@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {\n \t)\n }\n \n+// ForTitle returns the release title based upon its template\n+func ForTitle(ctx *context.Context) (string, error) {\n+\treturn apply{\n+\t\tnameData{\n+\t\t\tProjectName: ctx.Config.ProjectName,\n+\t\t\tTag: ctx.Git.CurrentTag,\n+\t\t\tVersion: ctx.Version,\n+\t\t}\n+\t\tctx.Config.Release.NameTemplate,\n+\t}\n+}\n+\n func apply(data nameData, templateStr string) (string, error) {\n \tvar out bytes.Buffer\n \tt, err := template.New(data.ProjectName).Parse(templateStr)\ndiff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go\nindex e94ee24..9dbfce8 100644\n--- a/pipeline/defaults/defaults.go\n+++ b/pipeline/defaults/defaults.go\n@@ -14,6 +14,9 @@ import (\n // NameTemplate default name_template for the archive.\n const NameTemplate = \""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\""\n \n+// ReleaseNameTemplate is the default name for the release.\n+const ReleaseNameTemplate = \""{{ .Version }}\""\n+\n // SnapshotNameTemplate represents the default format for snapshot release names.\n const SnapshotNameTemplate = \""SNAPSHOT-{{ .Commit }}\""\n \n@@ -31,6 +34,9 @@ func (Pipe) Description() string {\n // Run the pipe\n func (Pipe) Run(ctx *context.Context) error {\n \tctx.Config.Dist = \""dist\""\n+\tif ctx.Config.Release.NameTemplate == \""\"" {\n+\t\tctx.Config.Release.NameTemplate = ReleaseNameTemplate\n+\t}\n \tif ctx.Config.Snapshot.NameTemplate == \""\"" {\n \t\tctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate\n \t}\n""]",5,"[""bedc7950b24c37809e36a585b7985d5aa5e3e458"", ""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""47ef9104e4a89e80d7cc6c1950bc080841da4a7b"", ""aca23027da1295c78fdf42ba9687d8ccc88784d7"", ""f823cf28652987d43c8324b4f5b203240032383a""]","[""test"", ""build"", ""refactor"", ""docs"", ""feat""]"
"[gn win] link comctl32.lib to fix component build,add a branch name to Slack notifications (#14793),add hardware back button

Closes #5071,licensing,use `regexp_instr != 0` instead of `REGEXP` keyword","[""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n"", ""diff --git a/ionic/components/app/app.ts b/ionic/components/app/app.ts\nindex 04d8c57..08aab92 100644\n--- a/ionic/components/app/app.ts\n+++ b/ionic/components/app/app.ts\n@@ -3,8 +3,7 @@ import {Title} from 'angular2/platform/browser';\n \n import {Config} from '../../config/config';\n import {ClickBlock} from '../../util/click-block';\n-import {Nav} from '../nav/nav';\n-import {Tabs} from '../tabs/tabs';\n+import {Platform} from '../../platform/platform';\n \n \n /**\n@@ -23,8 +22,20 @@ export class IonicApp {\n \n   constructor(\n     private _config: Config,\n-    private _clickBlock: ClickBlock\n-  ) {}\n+    private _clickBlock: ClickBlock,\n+    platform: Platform\n+  ) {\n+    platform.backButton.subscribe(() => {\n+      let activeNav = this.getActiveNav();\n+      if (activeNav) {\n+        if (activeNav.length() === 1) {\n+          platform.exitApp();\n+        } else {\n+          activeNav.pop();\n+        }\n+      }\n+    });\n+  }\n \n   /**\n    * Sets the document title.\n@@ -102,7 +113,7 @@ export class IonicApp {\n   /**\n    * @private\n    */\n-  getActiveNav(): Nav | Tabs {\n+  getActiveNav(): any {\n     var nav = this._rootNav || null;\n     var activeChildNav;\n \n"", ""diff --git a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\nindex d1b1821..bd1fb44 100644\n--- a/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n+++ b/broker/src/test/java/io/camunda/zeebe/broker/exporter/util/ExternalExporter.java\n@@ -1,3 +1,10 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n package io.camunda.zeebe.broker.exporter.util;\n \n import io.camunda.zeebe.exporter.api.Exporter;\n"", ""diff --git a/ibis/backends/snowflake/registry.py b/ibis/backends/snowflake/registry.py\nindex 305304f..3d5db1b 100644\n--- a/ibis/backends/snowflake/registry.py\n+++ b/ibis/backends/snowflake/registry.py\n@@ -408,7 +408,9 @@ operation_registry.update(\n         ops.DateFromYMD: fixed_arity(sa.func.date_from_parts, 3),\n         ops.StringToTimestamp: fixed_arity(sa.func.to_timestamp_tz, 2),\n         ops.RegexExtract: _regex_extract,\n-        ops.RegexSearch: fixed_arity(sa.sql.operators.custom_op(\""REGEXP\""), 2),\n+        ops.RegexSearch: fixed_arity(\n+            lambda arg, pattern: sa.func.regexp_instr(arg, pattern) != 0, 2\n+        ),\n         ops.RegexReplace: fixed_arity(sa.func.regexp_replace, 3),\n         ops.ExtractMicrosecond: fixed_arity(\n             lambda arg: sa.cast(\n""]",5,"[""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da"", ""68278b00450f2679761a2999500f6d87a579376b"", ""a52a585d74894b3b4eeb8c784fa089ff95cddad0"", ""06e2be4e2019b6fa714e1fcb34485860ef1ede79""]","[""build"", ""cicd"", ""feat"", ""docs"", ""fix""]"
"verify checkpoint listeners are notified,[gn win] link comctl32.lib to fix component build,restructure ClusterTopology to track completed change,repository creation,remove ubuntu-latest from job title where that is the only os","[""diff --git a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\nindex c44f724..8b3ad83 100644\n--- a/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n+++ b/backup/src/test/java/io/camunda/zeebe/backup/processing/CheckpointRecordsProcessorTest.java\n@@ -27,6 +27,7 @@ import io.camunda.zeebe.protocol.impl.record.value.management.CheckpointRecord;\n import io.camunda.zeebe.protocol.record.RecordType;\n import io.camunda.zeebe.protocol.record.intent.management.CheckpointIntent;\n import java.nio.file.Path;\n+import java.util.concurrent.atomic.AtomicLong;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n@@ -175,4 +176,69 @@ final class CheckpointRecordsProcessorTest {\n     assertThat(state.getCheckpointId()).isEqualTo(checkpointId);\n     assertThat(state.getCheckpointPosition()).isEqualTo(checkpointPosition);\n   }\n+\n+  @Test\n+  void shouldNotifyListenerWhenNewCheckpointCreated() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 2;\n+    final long checkpointPosition = 20;\n+    final CheckpointRecord value = new CheckpointRecord().setCheckpointId(checkpointId);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition, 0, CheckpointIntent.CREATE, RecordType.COMMAND, value);\n+\n+    // when\n+    processor.process(record, resultBuilder);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerWhenReplayed() {\n+    // given\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 10;\n+    final CheckpointRecord value =\n+        new CheckpointRecord()\n+            .setCheckpointId(checkpointId)\n+            .setCheckpointPosition(checkpointPosition);\n+    final MockTypedCheckpointRecord record =\n+        new MockTypedCheckpointRecord(\n+            checkpointPosition + 1,\n+            checkpointPosition,\n+            CheckpointIntent.CREATED,\n+            RecordType.EVENT,\n+            value);\n+\n+    // when\n+    processor.replay(record);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n+\n+  @Test\n+  void shouldNotifyListenerOnInit() {\n+    // given\n+    final var context = new Context(zeebedb, zeebedb.createContext());\n+    processor = new CheckpointRecordsProcessor(backupManager);\n+    final long checkpointId = 3;\n+    final long checkpointPosition = 30;\n+    state.setCheckpointInfo(checkpointId, checkpointPosition);\n+\n+    // when\n+    final AtomicLong checkpoint = new AtomicLong();\n+    processor.addCheckpointListener(checkpoint::set);\n+    processor.init(context);\n+\n+    // then\n+    assertThat(checkpoint).hasValue(checkpointId);\n+  }\n }\n"", ""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\nindex e4ffc70..07707fe 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/changes/TopologyChangeCoordinatorImpl.java\n@@ -150,12 +150,12 @@ public class TopologyChangeCoordinatorImpl implements TopologyChangeCoordinator \n       final ClusterTopology updatedTopology,\n       final TopologyChangeAppliersImpl topologyChangeSimulator,\n       final ActorFuture<ClusterTopology> simulationCompleted) {\n-    if (!updatedTopology.changes().hasPendingChanges()) {\n+    if (!updatedTopology.hasPendingChanges()) {\n       simulationCompleted.complete(updatedTopology);\n       return;\n     }\n \n-    final var operation = updatedTopology.changes().nextPendingOperation();\n+    final var operation = updatedTopology.nextPendingOperation();\n     final OperationApplier applier = topologyChangeSimulator.getApplier(operation);\n     final var result = applier.init(updatedTopology);\n     if (result.isLeft()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\nindex a521721..1f89665 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/serializer/ProtoBufSerializer.java\n@@ -23,7 +23,6 @@ import io.camunda.zeebe.topology.protocol.Requests.ChangeStatus;\n import io.camunda.zeebe.topology.protocol.Topology;\n import io.camunda.zeebe.topology.protocol.Topology.CompletedChange;\n import io.camunda.zeebe.topology.protocol.Topology.MemberState;\n-import io.camunda.zeebe.topology.protocol.Topology.PendingChange;\n import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterChangePlan.CompletedOperation;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n@@ -98,10 +97,17 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             .map(e -> Map.entry(MemberId.from(e.getKey()), decodeMemberState(e.getValue())))\n             .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\n \n-    final var changes = decodeChangePlan(encodedClusterTopology.getChanges());\n+    final Optional<io.camunda.zeebe.topology.state.CompletedChange> completedChange =\n+        encodedClusterTopology.hasLastChange()\n+            ? Optional.of(decodeCompletedChange(encodedClusterTopology.getLastChange()))\n+            : Optional.empty();\n+    final Optional<ClusterChangePlan> currentChange =\n+        encodedClusterTopology.hasCurrentChange()\n+            ? Optional.of(decodeChangePlan(encodedClusterTopology.getCurrentChange()))\n+            : Optional.empty();\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        encodedClusterTopology.getVersion(), members, changes);\n+        encodedClusterTopology.getVersion(), members, completedChange, currentChange);\n   }\n \n   private Topology.ClusterTopology encodeClusterTopology(\n@@ -110,12 +116,19 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n         clusterTopology.members().entrySet().stream()\n             .collect(Collectors.toMap(e -> e.getKey().id(), e -> encodeMemberState(e.getValue())));\n \n-    final var encodedChangePlan = encodeChangePlan(clusterTopology.changes());\n-    return Topology.ClusterTopology.newBuilder()\n-        .setVersion(clusterTopology.version())\n-        .putAllMembers(members)\n-        .setChanges(encodedChangePlan)\n-        .build();\n+    final var builder =\n+        Topology.ClusterTopology.newBuilder()\n+            .setVersion(clusterTopology.version())\n+            .putAllMembers(members);\n+\n+    clusterTopology\n+        .lastChange()\n+        .ifPresent(lastChange -> builder.setLastChange(encodeCompletedChange(lastChange)));\n+    clusterTopology\n+        .changes()\n+        .ifPresent(changePlan -> builder.setCurrentChange(encodeChangePlan(changePlan)));\n+\n+    return builder.build();\n   }\n \n   private io.camunda.zeebe.topology.state.MemberState decodeMemberState(\n@@ -207,17 +220,28 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private Topology.ClusterChangePlan encodeChangePlan(final ClusterChangePlan changes) {\n-    final var builder = Topology.ClusterChangePlan.newBuilder().setVersion(changes.version());\n-    if (changes.ongoingChange().isPresent()) {\n-      builder.setPendingChange(encodePendingChange(changes.ongoingChange().get()));\n-    } else if (changes.lastChange().isPresent()) {\n-      builder.setCompletedChange(encodeCompletedChange(changes.lastChange().get()));\n-    }\n+    final var builder =\n+        Topology.ClusterChangePlan.newBuilder()\n+            .setVersion(changes.version())\n+            .setId(changes.id())\n+            .setStatus(fromTopologyChangeStatus(changes.status()))\n+            .setStartedAt(\n+                Timestamp.newBuilder()\n+                    .setSeconds(changes.startedAt().getEpochSecond())\n+                    .setNanos(changes.startedAt().getNano())\n+                    .build());\n+    changes\n+        .pendingOperations()\n+        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n+    changes\n+        .completedOperations()\n+        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n+\n     return builder.build();\n   }\n \n   private CompletedChange encodeCompletedChange(\n-      final ClusterChangePlan.CompletedChange completedChange) {\n+      final io.camunda.zeebe.topology.state.CompletedChange completedChange) {\n     final var builder = Topology.CompletedChange.newBuilder();\n     builder\n         .setId(completedChange.id())\n@@ -236,27 +260,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n     return builder.build();\n   }\n \n-  private Topology.PendingChange encodePendingChange(\n-      final ClusterChangePlan.PendingChange pendingChange) {\n-    final var builder = Topology.PendingChange.newBuilder();\n-    builder\n-        .setId(pendingChange.id())\n-        .setStatus(fromTopologyChangeStatus(pendingChange.status()))\n-        .setStartedAt(\n-            Timestamp.newBuilder()\n-                .setSeconds(pendingChange.startedAt().getEpochSecond())\n-                .setNanos(pendingChange.startedAt().getNano())\n-                .build());\n-    pendingChange\n-        .pendingOperations()\n-        .forEach(operation -> builder.addPendingOperations(encodeOperation(operation)));\n-    pendingChange\n-        .completedOperations()\n-        .forEach(operation -> builder.addCompletedOperations(encodeCompletedOperation(operation)));\n-\n-    return builder.build();\n-  }\n-\n   private Topology.TopologyChangeOperation encodeOperation(\n       final io.camunda.zeebe.topology.state.TopologyChangeOperation operation) {\n     final var builder =\n@@ -298,22 +301,31 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n   }\n \n   private ClusterChangePlan decodeChangePlan(final Topology.ClusterChangePlan clusterChangePlan) {\n+\n     final var version = clusterChangePlan.getVersion();\n-    final Optional<ClusterChangePlan.PendingChange> pendingChange =\n-        clusterChangePlan.hasPendingChange()\n-            ? Optional.of(decodePendingChange(clusterChangePlan.getPendingChange()))\n-            : Optional.empty();\n-    final Optional<ClusterChangePlan.CompletedChange> completedChange =\n-        clusterChangePlan.hasCompletedChange()\n-            ? Optional.of(decodeCompletedChange(clusterChangePlan.getCompletedChange()))\n-            : Optional.empty();\n+    final var pendingOperations =\n+        clusterChangePlan.getPendingOperationsList().stream()\n+            .map(this::decodeOperation)\n+            .collect(Collectors.toList());\n+    final var completedOperations =\n+        clusterChangePlan.getCompletedOperationsList().stream()\n+            .map(this::decodeCompletedOperation)\n+            .collect(Collectors.toList());\n \n-    return new ClusterChangePlan(version, completedChange, pendingChange);\n+    return new ClusterChangePlan(\n+        clusterChangePlan.getId(),\n+        clusterChangePlan.getVersion(),\n+        toChangeStatus(clusterChangePlan.getStatus()),\n+        Instant.ofEpochSecond(\n+            clusterChangePlan.getStartedAt().getSeconds(),\n+            clusterChangePlan.getStartedAt().getNanos()),\n+        completedOperations,\n+        pendingOperations);\n   }\n \n-  private ClusterChangePlan.CompletedChange decodeCompletedChange(\n+  private io.camunda.zeebe.topology.state.CompletedChange decodeCompletedChange(\n       final CompletedChange completedChange) {\n-    return new ClusterChangePlan.CompletedChange(\n+    return new io.camunda.zeebe.topology.state.CompletedChange(\n         completedChange.getId(),\n         toChangeStatus(completedChange.getStatus()),\n         Instant.ofEpochSecond(\n@@ -323,25 +335,6 @@ public class ProtoBufSerializer implements ClusterTopologySerializer, TopologyRe\n             completedChange.getCompletedAt().getNanos()));\n   }\n \n-  private ClusterChangePlan.PendingChange decodePendingChange(final PendingChange pendingChange) {\n-    final var pendingOperations =\n-        pendingChange.getPendingOperationsList().stream()\n-            .map(this::decodeOperation)\n-            .collect(Collectors.toList());\n-    final var completedOperations =\n-        pendingChange.getCompletedOperationsList().stream()\n-            .map(this::decodeCompletedOperation)\n-            .collect(Collectors.toList());\n-\n-    return new ClusterChangePlan.PendingChange(\n-        pendingChange.getId(),\n-        toChangeStatus(pendingChange.getStatus()),\n-        Instant.ofEpochSecond(\n-            pendingChange.getStartedAt().getSeconds(), pendingChange.getStartedAt().getNanos()),\n-        completedOperations,\n-        pendingOperations);\n-  }\n-\n   private TopologyChangeOperation decodeOperation(\n       final Topology.TopologyChangeOperation topologyChangeOperation) {\n     if (topologyChangeOperation.hasPartitionJoin()) {\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\nindex 49ed70f..97a29ba 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterChangePlan.java\n@@ -11,7 +11,6 @@ import io.atomix.cluster.MemberId;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n \n /**\n  * Represents the ongoing cluster topology changes. The pendingOperations are executed sequentially.\n@@ -23,50 +22,32 @@ import java.util.Optional;\n  * gossip update out of order.\n  */\n public record ClusterChangePlan(\n-    int version, Optional<CompletedChange> lastChange, Optional<PendingChange> ongoingChange) {\n-  public static ClusterChangePlan empty() {\n-    return new ClusterChangePlan(0, Optional.empty(), Optional.empty());\n-  }\n+    long id,\n+    int version,\n+    Status status,\n+    Instant startedAt,\n+    List<CompletedOperation> completedOperations,\n+    List<TopologyChangeOperation> pendingOperations) {\n \n   public static ClusterChangePlan init(\n       final long id, final List<TopologyChangeOperation> operations) {\n     return new ClusterChangePlan(\n-        1,\n-        Optional.empty(),\n-        Optional.of(\n-            new PendingChange(\n-                id, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations))));\n+        id, 1, Status.IN_PROGRESS, Instant.now(), List.of(), List.copyOf(operations));\n   }\n \n   /** To be called when the first operation is completed. */\n   ClusterChangePlan advance() {\n     // List#subList hold on to the original list. Make a copy to prevent a potential memory leak.\n-    final PendingChange pendingChange = ongoingChange.orElseThrow();\n-    final List<TopologyChangeOperation> pendingOperations = pendingChange.pendingOperations();\n     final var nextPendingOperations =\n         List.copyOf(pendingOperations.subList(1, pendingOperations.size()));\n-    final var newCompletedOperations = new ArrayList<>(pendingChange.completedOperations());\n+    final var newCompletedOperations = new ArrayList<>(completedOperations);\n     newCompletedOperations.add(new CompletedOperation(pendingOperations.get(0), Instant.now()));\n     return new ClusterChangePlan(\n-        version + 1,\n-        lastChange,\n-        Optional.of(\n-            new PendingChange(\n-                pendingChange.id(),\n-                pendingChange.status(),\n-                pendingChange.startedAt(),\n-                newCompletedOperations,\n-                nextPendingOperations)));\n+        id, version + 1, status, startedAt(), newCompletedOperations, nextPendingOperations);\n   }\n \n-  ClusterChangePlan completed() {\n-    final var pendingChange = ongoingChange.orElseThrow();\n-    return new ClusterChangePlan(\n-        0, // reset version\n-        Optional.of(\n-            new CompletedChange(\n-                pendingChange.id(), Status.COMPLETED, pendingChange.startedAt(), Instant.now())),\n-        Optional.empty());\n+  CompletedChange completed() {\n+    return new CompletedChange(id, Status.COMPLETED, startedAt(), Instant.now());\n   }\n \n   public ClusterChangePlan merge(final ClusterChangePlan other) {\n@@ -81,35 +62,22 @@ public record ClusterChangePlan(\n   }\n \n   public boolean hasPendingChangesFor(final MemberId memberId) {\n-    if (ongoingChange.isEmpty()) {\n-      return false;\n-    }\n-    final var pendingOperations = ongoingChange.get().pendingOperations();\n     return !pendingOperations.isEmpty() && pendingOperations.get(0).memberId().equals(memberId);\n   }\n \n   public TopologyChangeOperation nextPendingOperation() {\n-    return ongoingChange.orElseThrow().pendingOperations().get(0);\n+    return pendingOperations().get(0);\n   }\n \n   public boolean hasPendingChanges() {\n-    return ongoingChange.isPresent() && !ongoingChange.get().pendingOperations().isEmpty();\n+    return !pendingOperations().isEmpty();\n   }\n \n-  public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\n-\n-  public record PendingChange(\n-      long id,\n-      Status status,\n-      Instant startedAt,\n-      List<CompletedOperation> completedOperations,\n-      List<TopologyChangeOperation> pendingOperations) {}\n-\n   public record CompletedOperation(TopologyChangeOperation operation, Instant completedAt) {}\n \n   public enum Status {\n     IN_PROGRESS,\n     COMPLETED,\n-    FAILED\n+    FAILED;\n   }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\nindex 544118a..3494832 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/ClusterTopology.java\n@@ -12,6 +12,8 @@ import io.atomix.cluster.MemberId;\n import io.camunda.zeebe.topology.state.MemberState.State;\n import java.util.List;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.NoSuchElementException;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.function.UnaryOperator;\n@@ -32,12 +34,15 @@ import java.util.stream.Stream;\n  * <p>This class is immutable. Each mutable methods returns a new instance with the updated state.\n  */\n public record ClusterTopology(\n-    long version, Map<MemberId, MemberState> members, ClusterChangePlan changes) {\n+    long version,\n+    Map<MemberId, MemberState> members,\n+    Optional<CompletedChange> lastChange,\n+    Optional<ClusterChangePlan> changes) {\n \n   private static final int UNINITIALIZED_VERSION = -1;\n \n   public static ClusterTopology uninitialized() {\n-    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(UNINITIALIZED_VERSION, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public boolean isUninitialized() {\n@@ -45,7 +50,7 @@ public record ClusterTopology(\n   }\n \n   public static ClusterTopology init() {\n-    return new ClusterTopology(0, Map.of(), ClusterChangePlan.empty());\n+    return new ClusterTopology(0, Map.of(), Optional.empty(), Optional.empty());\n   }\n \n   public ClusterTopology addMember(final MemberId memberId, final MemberState state) {\n@@ -58,7 +63,7 @@ public record ClusterTopology(\n \n     final var newMembers =\n         ImmutableMap.<MemberId, MemberState>builder().putAll(members).put(memberId, state).build();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   /**\n@@ -96,7 +101,7 @@ public record ClusterTopology(\n     }\n \n     final var newMembers = mapBuilder.buildKeepingLast();\n-    return new ClusterTopology(version, newMembers, changes);\n+    return new ClusterTopology(version, newMembers, lastChange, changes);\n   }\n \n   public ClusterTopology startTopologyChange(final List<TopologyChangeOperation> operations) {\n@@ -110,7 +115,10 @@ public record ClusterTopology(\n     } else {\n       final long newVersion = version + 1;\n       return new ClusterTopology(\n-          newVersion, members, ClusterChangePlan.init(newVersion, operations));\n+          newVersion,\n+          members,\n+          lastChange,\n+          Optional.of(ClusterChangePlan.init(newVersion, operations)));\n     }\n   }\n \n@@ -130,20 +138,28 @@ public record ClusterTopology(\n     } else {\n       final var mergedMembers =\n           Stream.concat(members.entrySet().stream(), other.members().entrySet().stream())\n-              .collect(\n-                  Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, MemberState::merge));\n+              .collect(Collectors.toMap(Entry::getKey, Entry::getValue, MemberState::merge));\n \n-      final var mergedChanges = changes.merge(other.changes);\n-      return new ClusterTopology(version, ImmutableMap.copyOf(mergedMembers), mergedChanges);\n+      final Optional<ClusterChangePlan> mergedChanges =\n+          Stream.of(changes, other.changes)\n+              .flatMap(Optional::stream)\n+              .reduce(ClusterChangePlan::merge);\n+\n+      return new ClusterTopology(\n+          version, ImmutableMap.copyOf(mergedMembers), lastChange, mergedChanges);\n     }\n   }\n \n+  public boolean hasPendingChanges() {\n+    return changes.isPresent() && changes.orElseThrow().hasPendingChanges();\n+  }\n+\n   /**\n    * @return true if the next operation in pending changes is applicable for the given memberId,\n    *     otherwise returns false.\n    */\n   private boolean hasPendingChangesFor(final MemberId memberId) {\n-    return changes.hasPendingChangesFor(memberId);\n+    return changes.isPresent() && changes.get().hasPendingChangesFor(memberId);\n   }\n \n   /**\n@@ -157,7 +173,7 @@ public record ClusterTopology(\n     if (!hasPendingChangesFor(memberId)) {\n       return Optional.empty();\n     }\n-    return Optional.of(changes.nextPendingOperation());\n+    return Optional.of(changes.orElseThrow().nextPendingOperation());\n   }\n \n   /**\n@@ -179,7 +195,9 @@ public record ClusterTopology(\n       throw new IllegalStateException(\n           \""Expected to advance the topology change, but there is no pending change\"");\n     }\n-    final ClusterTopology result = new ClusterTopology(version, members, changes.advance());\n+    final ClusterTopology result =\n+        new ClusterTopology(\n+            version, members, lastChange, Optional.of(changes.orElseThrow().advance()));\n \n     if (!result.hasPendingChanges()) {\n       // The last change has been applied. Clean up the members that are marked as LEFT in the\n@@ -194,7 +212,9 @@ public record ClusterTopology(\n               .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n \n       // Increment the version so that other members can merge by overwriting their local topology.\n-      return new ClusterTopology(result.version() + 1, currentMembers, changes.completed());\n+      final var completedChange = changes.orElseThrow().completed();\n+      return new ClusterTopology(\n+          result.version() + 1, currentMembers, Optional.of(completedChange), Optional.empty());\n     }\n \n     return result;\n@@ -208,10 +228,6 @@ public record ClusterTopology(\n     return members().get(memberId);\n   }\n \n-  public boolean hasPendingChanges() {\n-    return changes.hasPendingChanges();\n-  }\n-\n   public int clusterSize() {\n     return (int)\n         members.entrySet().stream()\n@@ -226,4 +242,11 @@ public record ClusterTopology(\n     return (int)\n         members.values().stream().flatMap(m -> m.partitions().keySet().stream()).distinct().count();\n   }\n+\n+  public TopologyChangeOperation nextPendingOperation() {\n+    if (!hasPendingChanges()) {\n+      throw new NoSuchElementException();\n+    }\n+    return changes.orElseThrow().nextPendingOperation();\n+  }\n }\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\nnew file mode 100644\nindex 0000000..7031e88\n--- /dev/null\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/state/CompletedChange.java\n@@ -0,0 +1,13 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.1. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.1.\n+ */\n+package io.camunda.zeebe.topology.state;\n+\n+import io.camunda.zeebe.topology.state.ClusterChangePlan.Status;\n+import java.time.Instant;\n+\n+public record CompletedChange(long id, Status status, Instant startedAt, Instant completedAt) {}\ndiff --git a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\nindex 5861c7c..ef94a1f 100644\n--- a/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n+++ b/topology/src/main/java/io/camunda/zeebe/topology/util/TopologyUtil.java\n@@ -10,13 +10,13 @@ package io.camunda.zeebe.topology.util;\n import io.atomix.cluster.MemberId;\n import io.atomix.primitive.partition.PartitionId;\n import io.atomix.primitive.partition.PartitionMetadata;\n-import io.camunda.zeebe.topology.state.ClusterChangePlan;\n import io.camunda.zeebe.topology.state.ClusterTopology;\n import io.camunda.zeebe.topology.state.MemberState;\n import io.camunda.zeebe.topology.state.PartitionState;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n@@ -42,7 +42,7 @@ public final class TopologyUtil {\n     }\n \n     return new io.camunda.zeebe.topology.state.ClusterTopology(\n-        0, Map.copyOf(memberStates), ClusterChangePlan.empty());\n+        0, Map.copyOf(memberStates), Optional.empty(), Optional.empty());\n   }\n \n   public static Set<PartitionMetadata> getPartitionDistributionFrom(\n"", ""diff --git a/server/src/services/repository.service.ts b/server/src/services/repository.service.ts\nindex 3869c98..d675b30 100644\n--- a/server/src/services/repository.service.ts\n+++ b/server/src/services/repository.service.ts\n@@ -19,6 +19,8 @@ export class RepositoryService {\n       return;\n     }\n \n+    await this.createTeam(this.github, this.getTeamName(course), course.id);\n+\n     const studentRepo = getCustomRepository(StudentRepository);\n     const students = await studentRepo.findActiveByCourseId(this.courseId);\n \n@@ -31,8 +33,8 @@ export class RepositoryService {\n         if (mentorGithubId) {\n           await this.inviteMentor(mentorGithubId, course);\n         }\n-        await this.addTeamToRepository(this.github, course, student.githubId);\n       }\n+      await this.addTeamToRepository(this.github, course, student.githubId);\n       if (record?.repository) {\n         result.push({ repository: record.repository });\n       }\n"", ""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex 4dea4c9..006290a 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -122,7 +122,7 @@ jobs:\n           path: junit.xml\n \n   test_postgres:\n-    name: PostgreSQL ubuntu-latest deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n+    name: PostgreSQL deps-${{ (matrix.deps && \""\"") || \""un\"" }}bounded python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -204,7 +204,7 @@ jobs:\n           path: junit.xml\n \n   test_pyspark:\n-    name: PySpark ${{ matrix.pyspark.version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: PySpark ${{ matrix.pyspark.version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -279,7 +279,7 @@ jobs:\n           path: junit.xml\n \n   test_impala:\n-    name: Impala ubuntu-latest python-${{ matrix.python-version }}\n+    name: Impala python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     env:\n       IBIS_TEST_NN_HOST: localhost\n@@ -386,7 +386,7 @@ jobs:\n           path: junit.xml\n \n   test_mysql_clickhouse:\n-    name: ${{ matrix.backend.title }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: ${{ matrix.backend.title }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n@@ -460,7 +460,7 @@ jobs:\n           path: junit.xml\n \n   test_datafusion:\n-    name: DataFusion ${{ matrix.datafusion-version }} ubuntu-latest python-${{ matrix.python-version }}\n+    name: DataFusion ${{ matrix.datafusion-version }} python-${{ matrix.python-version }}\n     runs-on: ubuntu-latest\n     strategy:\n       fail-fast: false\n""]",5,"[""e0198f74b81da3663144cfe1d971939319f82a0f"", ""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""3cca5c314ad6feeffbfe1f14cf49ebd0fd9a95a2"", ""87d5d4e55ab7149b593d29410f1fe426ba2447d4"", ""74e9de5ec97dc013a52aa063dff0f40ac74c407b""]","[""test"", ""build"", ""refactor"", ""fix"", ""cicd""]"
"buffer assert and bpmn model api helper class

related to camunda-tngp/camunda-tngp#23,fix build ordering,repository creation,add a branch name to Slack notifications (#14793),add benchmark for known-slow table expression","[""diff --git a/test-util/pom.xml b/test-util/pom.xml\nindex a097651..b6518ee 100644\n--- a/test-util/pom.xml\n+++ b/test-util/pom.xml\n@@ -20,6 +20,7 @@\n     <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>\n     <!-- TODO: Move to common parent -->\n     <agrona.version>0.4.11</agrona.version>\n+    <camunda.version>7.6.0-SNAPSHOT</camunda.version>\n   </properties>\n \n   <dependencies>\n@@ -30,6 +31,13 @@\n       <version>${agrona.version}</version>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.camunda.bpm.model</groupId>\n+      <artifactId>camunda-bpmn-model</artifactId>\n+      <version>${camunda.version}</version>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <dependency>\n       <groupId>junit</groupId>\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\nindex 37e3a6f..b8d9b26 100644\n--- a/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/BufferAssert.java\n@@ -14,7 +14,7 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         super(actual, BufferAssert.class);\n     }\n \n-    public static BufferAssert assertThat(DirectBuffer buffer)\n+    public static BufferAssert assertThatBuffer(DirectBuffer buffer)\n     {\n         return new BufferAssert(buffer);\n     }\n@@ -41,4 +41,16 @@ public class BufferAssert extends AbstractAssert<BufferAssert, DirectBuffer>\n         return hasBytes(expected, 0);\n     }\n \n+    public BufferAssert hasCapacity(int expectedCapacity)\n+    {\n+        isNotNull();\n+\n+        if (expectedCapacity != actual.capacity())\n+        {\n+            failWithMessage(\""Expected capacity \"" + expectedCapacity + \"" but was \"" + actual.capacity());\n+        }\n+\n+        return this;\n+    }\n+\n }\ndiff --git a/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\nnew file mode 100644\nindex 0000000..6f0d134\n--- /dev/null\n+++ b/test-util/src/main/java/org/camunda/tngp/broker/test/util/bpmn/TngpModelInstance.java\n@@ -0,0 +1,121 @@\n+package org.camunda.tngp.broker.test.util.bpmn;\n+\n+import java.util.Collection;\n+\n+import org.camunda.bpm.model.bpmn.BpmnModelInstance;\n+import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants;\n+import org.camunda.bpm.model.bpmn.instance.Definitions;\n+import org.camunda.bpm.model.xml.Model;\n+import org.camunda.bpm.model.xml.instance.DomDocument;\n+import org.camunda.bpm.model.xml.instance.ModelElementInstance;\n+import org.camunda.bpm.model.xml.type.ModelElementType;\n+import org.camunda.bpm.model.xml.validation.ModelElementValidator;\n+import org.camunda.bpm.model.xml.validation.ValidationResults;\n+\n+public class TngpModelInstance implements BpmnModelInstance\n+{\n+    protected BpmnModelInstance wrappedInstance;\n+\n+    public TngpModelInstance(BpmnModelInstance wrappedInstance)\n+    {\n+        this.wrappedInstance = wrappedInstance;\n+    }\n+\n+    @Override\n+    public DomDocument getDocument()\n+    {\n+        return wrappedInstance.getDocument();\n+    }\n+\n+    @Override\n+    public ModelElementInstance getDocumentElement()\n+    {\n+        return wrappedInstance.getDocumentElement();\n+    }\n+\n+    @Override\n+    public void setDocumentElement(ModelElementInstance documentElement)\n+    {\n+        wrappedInstance.setDocumentElement(documentElement);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(Class<T> type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T newInstance(ModelElementType type)\n+    {\n+        return wrappedInstance.newInstance(type);\n+    }\n+\n+    @Override\n+    public Model getModel()\n+    {\n+        return wrappedInstance.getModel();\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> T getModelElementById(String id)\n+    {\n+        return wrappedInstance.getModelElementById(id);\n+    }\n+\n+    @Override\n+    public Collection<ModelElementInstance> getModelElementsByType(ModelElementType referencingType)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingType);\n+    }\n+\n+    @Override\n+    public <T extends ModelElementInstance> Collection<T> getModelElementsByType(Class<T> referencingClass)\n+    {\n+        return wrappedInstance.getModelElementsByType(referencingClass);\n+    }\n+\n+    @Override\n+    public ValidationResults validate(Collection<ModelElementValidator<?>> validators)\n+    {\n+        return wrappedInstance.validate(validators);\n+    }\n+\n+    @Override\n+    public BpmnModelInstance clone()\n+    {\n+        return wrappedInstance.clone();\n+    }\n+\n+    @Override\n+    public Definitions getDefinitions()\n+    {\n+        return wrappedInstance.getDefinitions();\n+    }\n+\n+    @Override\n+    public void setDefinitions(Definitions arg0)\n+    {\n+        wrappedInstance.setDefinitions(arg0);\n+    }\n+\n+    public TngpModelInstance taskAttributes(String taskId, String taskType, int taskQueueId)\n+    {\n+        final ModelElementInstance task = wrappedInstance.getModelElementById(taskId);\n+\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskType\"", taskType);\n+        task.setAttributeValueNs(BpmnModelConstants.CAMUNDA_NS, \""taskQueueId\"", String.valueOf(taskQueueId));\n+\n+        return this;\n+    }\n+\n+    public static TngpModelInstance wrap(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance);\n+    }\n+\n+    public static TngpModelInstance wrapCopy(BpmnModelInstance modelInstance)\n+    {\n+        return new TngpModelInstance(modelInstance.clone());\n+    }\n+}\n"", ""diff --git a/scripts/build.mjs b/scripts/build.mjs\nindex 204854f..b3cf067 100644\n--- a/scripts/build.mjs\n+++ b/scripts/build.mjs\n@@ -3,8 +3,8 @@ import { write } from 'fsxx';\n import { info, success } from './helpers.mjs';\n \n await $`rm -rf dist/*`;\n-await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n await $`unbuild`;\n+await $`esbuild src/react/react.ts --legal-comments=none --minify --outfile=dist/code-size-measurement.js`;\n \n const packages = [\n   'jsx-runtime',\n"", ""diff --git a/server/src/services/repository.service.ts b/server/src/services/repository.service.ts\nindex 3869c98..d675b30 100644\n--- a/server/src/services/repository.service.ts\n+++ b/server/src/services/repository.service.ts\n@@ -19,6 +19,8 @@ export class RepositoryService {\n       return;\n     }\n \n+    await this.createTeam(this.github, this.getTeamName(course), course.id);\n+\n     const studentRepo = getCustomRepository(StudentRepository);\n     const students = await studentRepo.findActiveByCourseId(this.courseId);\n \n@@ -31,8 +33,8 @@ export class RepositoryService {\n         if (mentorGithubId) {\n           await this.inviteMentor(mentorGithubId, course);\n         }\n-        await this.addTeamToRepository(this.github, course, student.githubId);\n       }\n+      await this.addTeamToRepository(this.github, course, student.githubId);\n       if (record?.repository) {\n         result.push({ repository: record.repository });\n       }\n"", ""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n"", ""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n""]",5,"[""6ed56ce9ae743ba9a87e6c9643cc06b1de7b748d"", ""c323d59c607cabc91f17a78528d998f376f30b10"", ""87d5d4e55ab7149b593d29410f1fe426ba2447d4"", ""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da"", ""e9617f0854030e70365eb264bcb3b58078e79e9e""]","[""feat"", ""build"", ""fix"", ""cicd"", ""test""]"
"[gn win] link comctl32.lib to fix component build,add benchmark for known-slow table expression,added suported tuple types,add hardware back button

Closes #5071,add remote [skip ci]","[""diff --git a/BUILD.gn b/BUILD.gn\nindex 571f528..7924a3d 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -676,8 +676,9 @@ if (is_mac) {\n       ]\n \n       libs = [\n-        \""wtsapi32.lib\"",\n+        \""comctl32.lib\"",\n         \""uiautomationcore.lib\"",\n+        \""wtsapi32.lib\"",\n       ]\n \n       configs += [ \""//build/config/win:windowed\"" ]\n"", ""diff --git a/.gitignore b/.gitignore\nindex 2e99ad3..eef9203 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -95,3 +95,4 @@ docs/backends/support_matrix.csv\n __pycache__\n tags\n .DS_Store\n+prof/\ndiff --git a/ibis/tests/benchmarks/test_benchmarks.py b/ibis/tests/benchmarks/test_benchmarks.py\nindex ac19aaf..36aed0e 100644\n--- a/ibis/tests/benchmarks/test_benchmarks.py\n+++ b/ibis/tests/benchmarks/test_benchmarks.py\n@@ -602,3 +602,93 @@ def test_multiple_joins(benchmark, num_joins, num_columns):\n         name=\""t\"",\n     )\n     benchmark(multiple_joins, table, num_joins)\n+\n+\n+@pytest.fixture\n+def customers():\n+    return ibis.table(\n+        dict(\n+            customerid=\""int32\"",\n+            name=\""string\"",\n+            address=\""string\"",\n+            citystatezip=\""string\"",\n+            birthdate=\""date\"",\n+            phone=\""string\"",\n+            timezone=\""string\"",\n+            lat=\""float64\"",\n+            long=\""float64\"",\n+        ),\n+        name=\""customers\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders():\n+    return ibis.table(\n+        dict(\n+            orderid=\""int32\"",\n+            customerid=\""int32\"",\n+            ordered=\""timestamp\"",\n+            shipped=\""timestamp\"",\n+            items=\""string\"",\n+            total=\""float64\"",\n+        ),\n+        name=\""orders\"",\n+    )\n+\n+\n+@pytest.fixture\n+def orders_items():\n+    return ibis.table(\n+        dict(orderid=\""int32\"", sku=\""string\"", qty=\""int32\"", unit_price=\""float64\""),\n+        name=\""orders_items\"",\n+    )\n+\n+\n+@pytest.fixture\n+def products():\n+    return ibis.table(\n+        dict(\n+            sku=\""string\"",\n+            desc=\""string\"",\n+            weight_kg=\""float64\"",\n+            cost=\""float64\"",\n+            dims_cm=\""string\"",\n+        ),\n+        name=\""products\"",\n+    )\n+\n+\n+@pytest.mark.benchmark(group=\""compilation\"")\n+@pytest.mark.parametrize(\n+    \""module\"",\n+    [\n+        pytest.param(\n+            mod,\n+            marks=pytest.mark.xfail(\n+                condition=mod in _XFAIL_COMPILE_BACKENDS,\n+                reason=f\""{mod} backend doesn't support compiling UnboundTable\"",\n+            ),\n+        )\n+        for mod in _backends\n+    ],\n+)\n+def test_compile_with_drops(\n+    benchmark, module, customers, orders, orders_items, products\n+):\n+    expr = (\n+        customers.join(orders, \""customerid\"")\n+        .join(orders_items, \""orderid\"")\n+        .join(products, \""sku\"")\n+        .drop(\""customerid\"", \""qty\"", \""total\"", \""items\"")\n+        .drop(\""dims_cm\"", \""cost\"")\n+        .mutate(o_date=lambda t: t.shipped.date())\n+        .filter(lambda t: t.ordered == t.shipped)\n+    )\n+\n+    try:\n+        mod = getattr(ibis, module)\n+    except (AttributeError, ImportError) as e:\n+        pytest.skip(str(e))\n+    else:\n+        benchmark(mod.compile, expr)\n"", ""diff --git a/src/List/Tuple.ts b/src/List/Tuple.ts\nindex 4c59caa..6e45503 100644\n--- a/src/List/Tuple.ts\n+++ b/src/List/Tuple.ts\n@@ -1,15 +1,17 @@\n-/** A [[Tuple]]\n+import {NonNullable} from '../Object/NonNullable'\n+\n+/** A [[Tuple]] (supported)\n  * @param A its type\n- * @returns **`any[]`**\n+ * @returns **`A[]`**\n  * @example\n  * ```ts\n- * type list0 = [1, 2, 3]\n- * type list1 = number[]\n+ * type tuple0 = [1, 20, 42]\n+ * type tuple1 = ['at', 420]\n  * ```\n  */\n-export type Tuple = [\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-    any?, any?, any?, any?, any?, any?, any?, any?, any?, any?,\n-]\n+export type Tuple<A = any> = NonNullable<[\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+    A?, A?, A?, A?, A?, A?, A?, A?, A?, A?,\n+]>\n"", ""diff --git a/ionic/components/app/app.ts b/ionic/components/app/app.ts\nindex 04d8c57..08aab92 100644\n--- a/ionic/components/app/app.ts\n+++ b/ionic/components/app/app.ts\n@@ -3,8 +3,7 @@ import {Title} from 'angular2/platform/browser';\n \n import {Config} from '../../config/config';\n import {ClickBlock} from '../../util/click-block';\n-import {Nav} from '../nav/nav';\n-import {Tabs} from '../tabs/tabs';\n+import {Platform} from '../../platform/platform';\n \n \n /**\n@@ -23,8 +22,20 @@ export class IonicApp {\n \n   constructor(\n     private _config: Config,\n-    private _clickBlock: ClickBlock\n-  ) {}\n+    private _clickBlock: ClickBlock,\n+    platform: Platform\n+  ) {\n+    platform.backButton.subscribe(() => {\n+      let activeNav = this.getActiveNav();\n+      if (activeNav) {\n+        if (activeNav.length() === 1) {\n+          platform.exitApp();\n+        } else {\n+          activeNav.pop();\n+        }\n+      }\n+    });\n+  }\n \n   /**\n    * Sets the document title.\n@@ -102,7 +113,7 @@ export class IonicApp {\n   /**\n    * @private\n    */\n-  getActiveNav(): Nav | Tabs {\n+  getActiveNav(): any {\n     var nav = this._rootNav || null;\n     var activeChildNav;\n \n"", ""diff --git a/.github/workflows/ibis-rebase-nightly.yml b/.github/workflows/ibis-rebase-nightly.yml\nindex 06c9003..e19c703 100644\n--- a/.github/workflows/ibis-rebase-nightly.yml\n+++ b/.github/workflows/ibis-rebase-nightly.yml\n@@ -47,7 +47,10 @@ jobs:\n           git config --global user.email 'ibis-squawk-bot[bot]@users.noreply.github.com'\n \n       - name: fetch and rebase on top of upstream\n-        run: git pull --rebase -X ours https://github.com/ibis-project/ibis master\n+        run: |\n+          git remote add upstream https://github.com/ibis-project/ibis\n+          git fetch upstream\n+          git rebase -X ours upstream/master\n \n       - uses: tibdex/github-app-token@v1\n         id: generate_pr_token\n""]",5,"[""5b81fde8a72cf2e69a10e9f5c4f0bea0a2b8c3e0"", ""e9617f0854030e70365eb264bcb3b58078e79e9e"", ""2954a0955ce9af6acb345ed1e8328e145ad30475"", ""68278b00450f2679761a2999500f6d87a579376b"", ""e96487ad7ce90b141219d9032fa2bed68d5dae6a""]","[""build"", ""test"", ""refactor"", ""feat"", ""cicd""]"
"run pyspark tests in parallel,export a modal transition preset,nginx forward L7 headers from LB

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>,enable user to re-order attachment in modal view

re #383

Signed-off-by: Pranav C <pranavxc@gmail.com>,fix default value for `cache.enabled`

Previously it was required to have the `cache.enabled` explicitly enabled
even with ts-morph provider, otherwise CLI cache commands would fail to run.","[""diff --git a/.github/workflows/ibis-backends.yml b/.github/workflows/ibis-backends.yml\nindex e23088e..9708157 100644\n--- a/.github/workflows/ibis-backends.yml\n+++ b/.github/workflows/ibis-backends.yml\n@@ -202,11 +202,11 @@ jobs:\n         run: poetry install --without dev --without docs --extras ${{ matrix.backend.name }} --extras geospatial\n \n       - name: \""run parallel tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name != 'pyspark' && matrix.backend.name != 'impala'\n+        if: matrix.backend.name != 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }} --numprocesses auto --dist=loadgroup\n \n       - name: \""run serial tests: ${{ matrix.backend.name }}\""\n-        if: matrix.backend.name == 'pyspark' || matrix.backend.name == 'impala'\n+        if: matrix.backend.name == 'impala'\n         run: just ci-check -m ${{ matrix.backend.name }}\n         env:\n           IBIS_TEST_NN_HOST: localhost\n"", ""diff --git a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\nindex f1066a1..ae93dca 100644\n--- a/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n+++ b/packages/stack/src/TransitionConfigs/TransitionPresets.tsx\n@@ -79,3 +79,8 @@ export const DefaultTransition = Platform.select({\n       ? FadeFromBottomAndroid\n       : WipeFromBottomAndroid,\n });\n+\n+export const ModalTransition = Platform.select({\n+  ios: ModalSlideFromBottomIOS,\n+  default: DefaultTransition,\n+});\ndiff --git a/packages/stack/src/views/Stack/Stack.tsx b/packages/stack/src/views/Stack/Stack.tsx\nindex cf1719c..47c1abf 100755\n--- a/packages/stack/src/views/Stack/Stack.tsx\n+++ b/packages/stack/src/views/Stack/Stack.tsx\n@@ -14,7 +14,7 @@ import { Props as HeaderContainerProps } from '../Header/HeaderContainer';\n import StackItem from './StackItem';\n import {\n   DefaultTransition,\n-  ModalSlideFromBottomIOS,\n+  ModalTransition,\n } from '../../TransitionConfigs/TransitionPresets';\n import { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\n import {\n@@ -301,9 +301,7 @@ export default class Stack extends React.Component<Props, State> {\n     const focusedOptions = descriptors[focusedRoute.key].options;\n \n     let defaultTransitionPreset =\n-      mode === 'modal' && Platform.OS === 'ios'\n-        ? ModalSlideFromBottomIOS\n-        : DefaultTransition;\n+      mode === 'modal' ? ModalTransition : DefaultTransition;\n \n     if (headerMode === 'screen') {\n       defaultTransitionPreset = {\n"", ""diff --git a/scripts/helmcharts/vars.yaml b/scripts/helmcharts/vars.yaml\nindex 5c02f57..163b7d2 100644\n--- a/scripts/helmcharts/vars.yaml\n+++ b/scripts/helmcharts/vars.yaml\n@@ -54,6 +54,10 @@ ingress-nginx: &ingress-nginx\n       default-ssl-certificate: \""app/openreplay-ssl\""\n     config:\n       enable-real-ip: true\n+      # Enable LB forwarded protocol\n+      # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#use-forwarded-headers\n+      # https://github.com/nginxinc/kubernetes-ingress/issues/1284#issuecomment-872869354\n+      # use-forwarded-headers: true\n       # Ref: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#max-worker-connections\n       max-worker-connections: 0\n       # SSL redirection\n"", ""diff --git a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\nindex 7e9d06c..cbc5775 100644\n--- a/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n+++ b/packages/nc-gui/components/project/spreadsheet/components/editableCell/editableAttachmentCell.vue\n@@ -18,13 +18,16 @@\n     </div>\n \n     <div class=\""d-flex align-center img-container\"">\n-      <div v-for=\""(item,i) in localState\"" :key=\""i\"" class=\""thumbnail align-center justify-center d-flex\"">\n+      <div\n+        v-for=\""(item,i) in localState\""\n+        :key=\""item.url\""\n+        class=\""thumbnail align-center justify-center d-flex\""\n+      >\n         <v-tooltip bottom>\n           <template #activator=\""{on}\"">\n             <!--            <img alt=\""#\"" v-if=\""isImage(item.title)\"" :src=\""item.url\"" v-on=\""on\"" @click=\""selectImage(item.url,i)\"">-->\n             <v-img\n               v-if=\""isImage(item.title)\""\n-              :key=\""item.url\""\n               lazy-src=\""https://via.placeholder.com/60.png?text=Loading...\""\n               alt=\""#\""\n               max-height=\""33px\""\n@@ -89,7 +92,11 @@\n \n           <div class=\""d-flex flex-wrap h-100\"">\n             <v-container fluid style=\""max-height:calc(90vh - 80px);overflow-y: auto\"">\n-              <v-row>\n+              <draggable\n+                v-model=\""localState\""\n+                class=\""row\""\n+                @update=\""onOrderUpdate\""\n+              >\n                 <v-col v-for=\""(item,i) in localState\"" :key=\""i\"" cols=\""4\"">\n                   <v-card\n                     class=\""modal-thumbnail-card align-center justify-center d-flex\""\n@@ -125,7 +132,7 @@\n                     {{ item.title }}\n                   </p>\n                 </v-col>\n-              </v-row>\n+              </draggable>\n             </v-container>\n           </div>\n         </v-card-text>\n@@ -216,9 +223,12 @@\n \n <script>\n import FileSaver from 'file-saver'\n+import draggable from 'vuedraggable'\n import { isImage } from '@/components/project/spreadsheet/helpers/imageExt'\n+\n export default {\n   name: 'EditableAttachmentCell',\n+  components: { draggable },\n   props: ['dbAlias', 'value', 'active', 'isLocked', 'meta', 'column'],\n   data: () => ({\n     carousel: null,\n@@ -301,6 +311,10 @@ export default {\n       this.$emit('input', JSON.stringify(this.localState))\n       this.$emit('update')\n     },\n+    onOrderUpdate() {\n+      this.$emit('input', JSON.stringify(this.localState))\n+      this.$emit('update')\n+    },\n     removeItem(i) {\n       this.localState.splice(i, 1)\n       this.$emit('input', JSON.stringify(this.localState))\n@@ -394,18 +408,19 @@ export default {\n   top: 5px;\n   right: 5px\n }\n-.modal-thumbnail-card{\n+\n+.modal-thumbnail-card {\n \n   .download-icon {\n     position: absolute;\n     bottom: 5px;\n     right: 5px;\n-    opacity:0;\n-    transition:.4s opacity;\n+    opacity: 0;\n+    transition: .4s opacity;\n   }\n \n-  &:hover .download-icon{\n-    opacity:1\n+  &:hover .download-icon {\n+    opacity: 1\n   }\n }\n \n"", ""diff --git a/packages/core/src/utils/Configuration.ts b/packages/core/src/utils/Configuration.ts\nindex 95516ba..a869a32 100644\n--- a/packages/core/src/utils/Configuration.ts\n+++ b/packages/core/src/utils/Configuration.ts\n@@ -183,7 +183,7 @@ export class Configuration<D extends IDatabaseDriver = IDatabaseDriver> {\n       this.options.cache.adapter = NullCacheAdapter;\n     }\n \n-    if ('enabled' in this.options.cache) {\n+    if (!('enabled' in this.options.cache)) {\n       this.options.cache.enabled = this.getMetadataProvider().useCache();\n     }\n \n""]",5,"[""4cbbd2552ba0de273e1dfe7d453c5b3efed751a3"", ""535708ae50aecb452560a23356fd396f99ef13a2"", ""e12d9e77a6fd531a22325337838a841b1c67f00d"", ""fd8e563cc19ca4684885d4692acee6bebcca4ada"", ""9be725fa3906323d4bc9788f54eccf74109d632b""]","[""cicd"", ""refactor"", ""docs"", ""feat"", ""fix""]"
"add a branch name to Slack notifications (#14793),autostart feature fixed,detach ViewControllers when not active,Fix typo,make it mode less","[""diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex d0c7bd1..cd5d2cc 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -50,7 +50,7 @@ step-maybe-notify-slack-failure: &step-maybe-notify-slack-failure\n     name: Send a Slack notification on failure\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build failed for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\n@@ -61,7 +61,7 @@ step-maybe-notify-slack-success: &step-maybe-notify-slack-success\n     name: Send a Slack notification on success\n     command: |\n       if [ \""$NOTIFY_SLACK\"" == \""true\"" ]; then\n-        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build.\""\n+        export MESSAGE=\""Build succeeded for *<$CIRCLE_BUILD_URL|$CIRCLE_JOB>* nightly build from *$CIRCLE_BRANCH*.\""\n         curl -g -H \""Content-Type: application/json\"" -X POST \\\n         -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$CIRCLE_JOB nightly build results\\\"",\\\""title_link\\\"": \\\""$CIRCLE_BUILD_URL\\\""}]}\"" $SLACK_WEBHOOK\n       fi\ndiff --git a/vsts.yml b/vsts.yml\nindex c02d13a..2e72426 100644\n--- a/vsts.yml\n+++ b/vsts.yml\n@@ -128,7 +128,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build failed for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""#FC5C3C\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Failure'\n@@ -136,7 +136,7 @@ jobs:\n \n   - bash: |\n       export BUILD_URL=\""${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID}\""\n-      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build.\""\n+      export MESSAGE=\""Build succeeded for *<$BUILD_URL|$BUILD_DEFINITIONNAME>* nightly build from *$BUILD_SOURCEBRANCHNAME*.\""\n       curl -g -H \""Content-Type: application/json\"" -X POST \\\n       -d \""{\\\""text\\\"": \\\""$MESSAGE\\\"", \\\""attachments\\\"": [{\\\""color\\\"": \\\""good\\\"",\\\""title\\\"": \\\""$BUILD_DEFINITIONNAME nightly build results\\\"",\\\""title_link\\\"": \\\""$BUILD_URL\\\""}]}\"" $(slack_webhook)\n     displayName: 'Post Slack Notification on Success'\n"", ""diff --git a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\nindex 8017a14..24ed3d0 100644\n--- a/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Interactivity/Modes/ModesOptionsEditor.ts\n@@ -3,7 +3,6 @@ import type { IModes } from \""tsparticles/dist/Options/Interfaces/Interactivity/M\n import { ColorUtils, EditorGroup, IHsl, IRgb, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n import { ParticlesOptionsEditor } from \""../../Particles/ParticlesOptionsEditor\"";\n-import { IParticles } from \""tsparticles/dist/Options/Interfaces/Particles/IParticles\"";\n \n export class ModesOptionsEditor extends EditorBase {\n     public group!: EditorGroup;\ndiff --git a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\nindex 8cdc539..c3999f3 100644\n--- a/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n+++ b/core/editor/src/ts/Sections/Options/Particles/Stroke/StrokeOptionsEditor.ts\n@@ -1,7 +1,6 @@\n import { Container } from \""tsparticles/dist/Core/Container\"";\n import { IStroke } from \""tsparticles/dist/Options/Interfaces/Particles/IStroke\"";\n import { ColorOptionsEditor } from \""../Color/ColorOptionsEditor\"";\n-import { IAnimatableColor } from \""tsparticles/dist/Options/Interfaces/Particles/IAnimatableColor\"";\n import { EditorGroup, SingleOrMultiple, EditorType } from \""object-gui\"";\n import { EditorBase } from \""../../../../EditorBase\"";\n \ndiff --git a/core/main/src/Core/Container.ts b/core/main/src/Core/Container.ts\nindex bc634f2..7c3773b 100644\n--- a/core/main/src/Core/Container.ts\n+++ b/core/main/src/Core/Container.ts\n@@ -309,7 +309,7 @@ export class Container {\n             return;\n         }\n \n-        this.firstStart = false;\n+        this.firstStart = true;\n         this.started = false;\n         this.eventListeners.removeListeners();\n         this.pause();\n"", ""diff --git a/ionic/components/nav/nav-controller.ts b/ionic/components/nav/nav-controller.ts\nindex becdd99..1cc3c31 100644\n--- a/ionic/components/nav/nav-controller.ts\n+++ b/ionic/components/nav/nav-controller.ts\n@@ -1410,6 +1410,9 @@ export class NavController extends Ion {\n       // set the ComponentRef's instance to this ViewController\n       view.setInstance(component);\n \n+      // remember the ChangeDetectorRef for this ViewController\n+      view.setChangeDetector(hostViewRef.changeDetectorRef);\n+\n       // remember the ElementRef to the ion-page elementRef that was just created\n       view.setPageRef(pageElementRef);\n \ndiff --git a/ionic/components/nav/view-controller.ts b/ionic/components/nav/view-controller.ts\nindex 3207fa2..069c74d 100644\n--- a/ionic/components/nav/view-controller.ts\n+++ b/ionic/components/nav/view-controller.ts\n@@ -1,4 +1,4 @@\n-import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer} from 'angular2/core';\n+import {Output, EventEmitter, Type, TemplateRef, ViewContainerRef, ElementRef, Renderer, ChangeDetectorRef} from 'angular2/core';\n \n import {Navbar} from '../navbar/navbar';\n import {NavController, NavOptions} from './nav-controller';\n@@ -33,6 +33,7 @@ export class ViewController {\n   private _nbVwRef: ViewContainerRef;\n   private _onDismiss: Function = null;\n   private _pgRef: ElementRef;\n+  private _cd: ChangeDetectorRef;\n   protected _nav: NavController;\n \n   /**\n@@ -166,6 +167,13 @@ export class ViewController {\n   /**\n    * @private\n    */\n+  setChangeDetector(cd: ChangeDetectorRef) {\n+    this._cd = cd;\n+  }\n+\n+  /**\n+   * @private\n+   */\n   setInstance(instance: any) {\n     this.instance = instance;\n   }\n@@ -467,6 +475,14 @@ export class ViewController {\n    * The view is about to enter and become the active view.\n    */\n   willEnter() {\n+    if (this._cd) {\n+      // ensure this has been re-attached to the change detector\n+      this._cd.reattach();\n+\n+      // detect changes before we run any user code\n+      this._cd.detectChanges();\n+    }\n+\n     ctrlFn(this, 'onPageWillEnter');\n   }\n \n@@ -496,6 +512,10 @@ export class ViewController {\n    */\n   didLeave() {\n     ctrlFn(this, 'onPageDidLeave');\n+\n+    // when this is not the active page\n+    // we no longer need to detect changes\n+    this._cd && this._cd.detach();\n   }\n \n   /**\n"", ""diff --git a/README.md b/README.md\nindex a8ef3bf..2947cd9 100644\n--- a/README.md\n+++ b/README.md\n@@ -69,7 +69,7 @@ Follow the instructions on the `rustup` site for your operating system.\n \n [`rustup`]: https://rustup.rs/\n \n-By default, `rustup` will install the latest stable verison of Rust. InfluxDB IOx is currently\n+By default, `rustup` will install the latest stable version of Rust. InfluxDB IOx is currently\n using a nightly version of Rust to get performance benefits from the unstable `simd` feature. The\n exact nightly version is specified in the `rust-toolchain` file. When you're in the directory\n containing this repository's code, `rustup` will look in the `rust-toolchain` file and\n"", ""diff --git a/core/src/components/slides/slides.tsx b/core/src/components/slides/slides.tsx\nindex 48fd53f..d5c2f75 100644\n--- a/core/src/components/slides/slides.tsx\n+++ b/core/src/components/slides/slides.tsx\n@@ -1,7 +1,6 @@\n import { Component, Element, Event, EventEmitter, Method, Prop, Watch } from '@stencil/core';\n \n import { Mode } from '../../interface.js';\n-import { createThemedClasses } from '../../utils/theme.js';\n \n import { Swiper } from './vendor/swiper.js';\n \n@@ -15,6 +14,7 @@ import { Swiper } from './vendor/swiper.js';\n   shadow: true\n })\n export class Slides {\n+\n   private container!: HTMLElement;\n   private swiper: any;\n \n@@ -391,12 +391,6 @@ export class Slides {\n     return { ...swiperOptions, ...this.options, ...eventOptions };\n   }\n \n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'slides')\n-    };\n-  }\n-\n   render() {\n     return (\n       <div class=\""swiper-container\"" ref={el => this.container = el as HTMLElement }>\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.scss b/core/src/components/thumbnail/thumbnail.ios.scss\ndeleted file mode 100644\nindex e3add45..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.ios.vars\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-ios-width};\n-  --border-radius: #{$thumbnail-ios-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.ios.vars.scss b/core/src/components/thumbnail/thumbnail.ios.vars.scss\ndeleted file mode 100644\nindex 85d53e5..0000000\n--- a/core/src/components/thumbnail/thumbnail.ios.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.ios\"";\n-\n-// iOS Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-ios-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-ios-height:                  $thumbnail-ios-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-ios-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.md.scss b/core/src/components/thumbnail/thumbnail.md.scss\ndeleted file mode 100644\nindex 0fbb2ca..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.scss\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-@import \""./thumbnail\"";\n-@import \""./thumbnail.md.vars\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-:host {\n-  --size: #{$thumbnail-md-width};\n-  --border-radius: #{$thumbnail-md-border-radius};\n-}\ndiff --git a/core/src/components/thumbnail/thumbnail.md.vars.scss b/core/src/components/thumbnail/thumbnail.md.vars.scss\ndeleted file mode 100644\nindex 94e48b2..0000000\n--- a/core/src/components/thumbnail/thumbnail.md.vars.scss\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-@import \""../../themes/ionic.globals.md\"";\n-\n-// Material Design Thumbnail\n-// --------------------------------------------------\n-\n-/// @prop - Width of the thumbnail\n-$thumbnail-md-width:                   48px !default;\n-\n-/// @prop - Height of the thumbnail\n-$thumbnail-md-height:                  $thumbnail-md-width !default;\n-\n-/// @prop - Border radius of the thumbnail\n-$thumbnail-md-border-radius:           0 !default;\ndiff --git a/core/src/components/thumbnail/thumbnail.scss b/core/src/components/thumbnail/thumbnail.scss\nindex 8ac3a22..8af268d 100644\n--- a/core/src/components/thumbnail/thumbnail.scss\n+++ b/core/src/components/thumbnail/thumbnail.scss\n@@ -9,6 +9,8 @@\n    * @prop --border-radius: Border radius of the thumbnail\n    * @prop --size: Size of the thumbnail\n    */\n+  --size: 48px;\n+  --border-radius: 0;\n \n   @include border-radius(var(--border-radius));\n \ndiff --git a/core/src/components/thumbnail/thumbnail.tsx b/core/src/components/thumbnail/thumbnail.tsx\nindex 50ff2c2..de76593 100644\n--- a/core/src/components/thumbnail/thumbnail.tsx\n+++ b/core/src/components/thumbnail/thumbnail.tsx\n@@ -1,25 +1,11 @@\n import { Component } from '@stencil/core';\n \n-import { Mode } from '../../interface';\n-import { createThemedClasses } from '../../utils/theme';\n-\n @Component({\n   tag: 'ion-thumbnail',\n-  styleUrls: {\n-    ios: 'thumbnail.ios.scss',\n-    md: 'thumbnail.md.scss'\n-  },\n+  styleUrl: 'thumbnail.scss',\n   shadow: true\n })\n export class Thumbnail {\n-  mode!: Mode;\n-\n-  hostData() {\n-    return {\n-      class: createThemedClasses(this.mode, 'thumbnail')\n-    };\n-  }\n-\n   render() {\n     return <slot></slot>;\n   }\n""]",5,"[""c5fa7b80438fbd74f4c341f0d3c9bd9e0f4910da"", ""bed78248c941d57ad4cc20a455147e186e97c7a1"", ""b282e90e2cbb74559aab79eee8443a4d7c85502a"", ""bf83c9155e9bee6925aa7102fab53fb803d52533"", ""771857b1df9470ebc15357e8879118a72c649d5b""]","[""cicd"", ""fix"", ""feat"", ""docs"", ""refactor""]"
