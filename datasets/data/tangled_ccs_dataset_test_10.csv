commit_message,diff,concern_count,shas,types,reason
"move toolbar to tab content level

Signed-off-by: Pranav C <pranavxc@gmail.com>
updates the readme to improve the readability and contributing sections","diff --git a/packages/nc-gui-v2/components.d.ts b/packages/nc-gui-v2/components.d.ts
index f6be04b..cf555ef 100644
--- a/packages/nc-gui-v2/components.d.ts
+++ b/packages/nc-gui-v2/components.d.ts
@@ -201,6 +201,7 @@ declare module '@vue/runtime-core' {
     MdiThumbUp: typeof import('~icons/mdi/thumb-up')['default']
     MdiTrashCan: typeof import('~icons/mdi/trash-can')['default']
     MdiTwitter: typeof import('~icons/mdi/twitter')['default']
+    MdiUpload: typeof import('~icons/mdi/upload')['default']
     MdiUploadOutline: typeof import('~icons/mdi/upload-outline')['default']
     MdiViewListOutline: typeof import('~icons/mdi/view-list-outline')['default']
     MdiWhatsapp: typeof import('~icons/mdi/whatsapp')['default']
diff --git a/packages/nc-gui-v2/components/smartsheet-toolbar/ViewActions.vue b/packages/nc-gui-v2/components/smartsheet-toolbar/ViewActions.vue
index c2c87d3..27c0acc 100644
--- a/packages/nc-gui-v2/components/smartsheet-toolbar/ViewActions.vue
+++ b/packages/nc-gui-v2/components/smartsheet-toolbar/ViewActions.vue
@@ -132,7 +132,7 @@ async function changeLockType(type: LockType) {
   <div>
     <a-dropdown>
       <a-button v-t=""['c:actions']"" class=""nc-actions-menu-btn nc-toolbar-btn"">
-        <div class=""flex gap-2 align-center"">
+        <div class=""flex gap-2 items-center"">
           <component
             :is=""viewIcons[selectedView?.type].icon""
             class=""nc-view-icon group-hover:hidden""
@@ -311,6 +311,6 @@ async function changeLockType(type: LockType) {
 
 <style scoped>
 .nc-locked-menu-item > div {
-  @apply grid grid-cols-[30px,auto] gap-2  p-2 align-center;
+  @apply grid grid-cols-[30px,auto] gap-2  p-2 items-center;
 }
 </style>
diff --git a/packages/nc-gui-v2/components/smartsheet/Toolbar.vue b/packages/nc-gui-v2/components/smartsheet/Toolbar.vue
index 5fa555f..d498871 100644
--- a/packages/nc-gui-v2/components/smartsheet/Toolbar.vue
+++ b/packages/nc-gui-v2/components/smartsheet/Toolbar.vue
@@ -36,7 +36,7 @@ const {isOpen} =useSidebar()
 
     <SmartsheetToolbarSearchData v-if=""(isGrid || isGallery) && !isPublic"" class=""shrink mr-2 ml-2"" />
 
-    <ToggleDrawer v-if=""!isOpen""/>
+    <ToggleDrawer class=""mr-2""/>
 
 
   </div>
diff --git a/packages/nc-gui-v2/components/smartsheet/sidebar/index.vue b/packages/nc-gui-v2/components/smartsheet/sidebar/index.vue
index 896ad62..77aee05 100644
--- a/packages/nc-gui-v2/components/smartsheet/sidebar/index.vue
+++ b/packages/nc-gui-v2/components/smartsheet/sidebar/index.vue
@@ -99,6 +99,7 @@ function onCreate(view: GridType | FormType | KanbanType | GalleryType) {
     class=""relative shadow-md h-full""
     theme=""light""
   >
+    <!--
     <Toolbar
       v-if=""isOpen""
       class=""min-h-[var(--toolbar-height)] max-h-[var(--toolbar-height)]""
@@ -128,7 +129,7 @@ function onCreate(view: GridType | FormType | KanbanType | GalleryType) {
         <div v-if=""!isForm"" class=""dot"" />
       </template>
     </Toolbar>
-
+-->
     <div v-if=""isOpen"" class=""flex-1 flex flex-col"">
       <MenuTop @open-modal=""openModal"" @deleted=""loadViews"" @sorted=""loadViews"" />
 
diff --git a/packages/nc-gui-v2/components/smartsheet/sidebar/toolbar/ToggleDrawer.vue b/packages/nc-gui-v2/components/smartsheet/sidebar/toolbar/ToggleDrawer.vue
index 3e3d78a..8441450 100644
--- a/packages/nc-gui-v2/components/smartsheet/sidebar/toolbar/ToggleDrawer.vue
+++ b/packages/nc-gui-v2/components/smartsheet/sidebar/toolbar/ToggleDrawer.vue
@@ -4,7 +4,7 @@ const { isOpen, toggle } = useSidebar({ storageKey: 'nc-right-sidebar' })
 </script>
 
 <template>
-  <a-tooltip :placement=""isOpen ? 'bottomRight' : 'left'"" :mouse-enter-delay=""0.8"">
+<!--  <a-tooltip :placement=""isOpen ? 'bottomRight' : 'left'"" :mouse-enter-delay=""0.8"">
     <template #title> Toggle sidebar</template>
 
     <div class=""nc-sidebar-right-item hover:after:(bg-primary bg-opacity-75) group nc-sidebar-add-row"">
@@ -14,5 +14,11 @@ const { isOpen, toggle } = useSidebar({ storageKey: 'nc-right-sidebar' })
         @click=""toggle(!isOpen)""
       />
     </div>
-  </a-tooltip>
+  </a-tooltip>-->
+
+  <a-button @click=""toggle(!isOpen)"" size=""small"">
+  <div class=""flex items-center gap-2"">  <MdiMenu/> Views
+  </div>
+  </a-button>
+
 </template>
diff --git a/packages/nc-gui-v2/components/tabs/Smartsheet.vue b/packages/nc-gui-v2/components/tabs/Smartsheet.vue
index 4181996..7b7ec36 100644
--- a/packages/nc-gui-v2/components/tabs/Smartsheet.vue
+++ b/packages/nc-gui-v2/components/tabs/Smartsheet.vue
@@ -83,11 +83,11 @@ watch(isLocked, (nextValue) => (treeViewIsLockedInj.value = nextValue), { immedi
 
             <SmartsheetForm v-else-if=""isForm"" />
           </div>
+          <SmartsheetSidebar class=""nc-right-sidebar"" v-if=""meta"" />
         </div>
       </template>
     </div>
 
-    <SmartsheetSidebar class=""nc-right-sidebar"" v-if=""meta"" />
   </div>
 </template>
 

diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md
index 3c4dd8d..f8b8514 100644
--- a/.github/CONTRIBUTING.md
+++ b/.github/CONTRIBUTING.md
@@ -21,7 +21,8 @@ Contributions are always welcome! Please use the following guidelines when contr
     - `chore` - Catch all or things that have to do with the build system, etc
     - `examples` - Changes to existing example, or a new example
  * The `COMPONENT` is optional, and may be a single file, directory, or logical component. Can be omitted if commit applies globally
-5. Run the tests (`cargo test --no-std-features && cargo test --features yaml`)
+5. Run the tests (`cargo test --features ""yaml unstable""`)
+5. Run the lints (`cargo build --features lints`) (requires a nightly compiler)
 6. `git rebase` into concise commits and remove `--fixup`s (`git rebase -i HEAD~NUM` where `NUM` is number of commits back)
 7. Push your changes back to your fork (`git push origin $your-branch`)
 8. Create a pull request! (You can also create the pull request first, and we'll merge when ready. This a good way to discuss proposed changes.)
diff --git a/README.md b/README.md
index 9e6efce..b74405d 100644
--- a/README.md
+++ b/README.md
@@ -31,7 +31,9 @@ Table of Contents
   * [More Information](#more-information)
     * [Video Tutorials](#video-tutorials)
 * [How to Contribute](#how-to-contribute)
-  * [Running the tests](#running-the-tests)
+  * [Testing Code](#testing-code)
+  * [Linting Code](#linting-code)
+  * [Debugging Code](#debugging-code)
   * [Goals](#goals)
   * [Compatibility Policy](#compatibility-policy)
     * [Minimum Version of Rust](#minimum-version-of-rust)
@@ -43,288 +45,83 @@ Created by [gh-md-toc](https://github.com/ekalinin/github-markdown-toc)
 
 ## What's New
 
-Here's what's new in v2.18.0
+Here's the highlights from v2.0.0 to v2.18.0
 
 * **Completions:**  Adds completion support for Microsoft PowerShell! (Thanks to @Arnavion)
-
-Here's what's new in v2.17.1
-
-* Fixes a bug where using low index multiples was propagated to subcommands
-
-Here's what's new in v2.17.0
-
 * Allows specifying the second to last positional argument as `multiple(true)` (i.e. things such as `mv <files>... <target>`)
 * Adds an `App::get_name` and `App::get_bin_name`
-
-Here's what's new in v2.16.4
-
-* Fixes bug that caused panic on subcommands with aliases
 * Conflicting argument errors are now symetrical, meaning more consistent and better usage suggestions
-* Fixes typo in example `13a_enum_values_automatic`
-* Fixes failing yaml example (#715)
-* Fixes the `debug` feature (#716)
-
-Here's the highlights for v2.16.3
-
-* Fixes a bug where the derived display order isn't propagated
-* **yaml-example:**  fixes some inconsistent args in the example
-
-Here's the highlights for v2.16.2
-
-* Fixes a bug where single quotes are not escaped
-
-Here's the highlights for v2.16.1
-
-* **Help Message:**  fixes a regression bug where args with multiple(true) threw off alignment
-
-Here's the highlights for v2.16.0
-
 * **Completions:**  adds automatic ZSH completion script generation support! :tada: :tada:
-
-Here's a gif of them in action!
-
-![zsh-comppletions](http://i.imgur.com/rwlMbAv.gif)
-
-Here's the highlights for v2.15.0
-
 * **AppSettings:**  adds new setting `AppSettings::AllowNegativeNumbers` which functions like `AllowLeadingHyphen` except only allows undefined negative numbers to pass parsing.
-* Improves some of the documentation of `AppSettings` by moving variants into roughly alphabetical order
-
-Here's the highlights for v2.14.1 (Huge thanks to all the contributors who put in a lot of work this cycle! Especially @tormol @nabijaczleweli and @wdv4758h)
-
 * Stabilize `clap_app!` macro (i.e. no longer need to use `unstable` feature)
-* Fixes a bug that made determining when to auto-wrap long help messages inconsistent
-* Fixes fish completions for nested subcommands
-* Improve documentation around features
-* Reword docs for `ErrorKind` and `App::settings`
-* Fix tests that fail when the `suggestions` feature is disabled
-* Fix the `OsString`-using doc-tests
-* Tag non-rust code blocks as such instead of ignoring them
-* Improve some errors about subcommands
-* Makes sure the doc-tests don't fail before ""missing file"" in YAML tests
 * Deprecate `App::with_defaults`
-* Make lints not enable other nightly-requiring features
-
-Here's the highlights for v2.14.0
-
-* One can now alias arguments either visibly (whichc appears in the help text) or invisibly just like subcommands!
+* One can now alias arguments either visibly (which appears in the help text) or invisibly just like subcommands!
 * The `from_usage` parser now correctly handles non-ascii names / options and help!
-* Fixes a bug in the `require_delimiter` code which caused some incorrect parses
-* Fixes various typos in the docs
-* Various other small performance improvements and enhancements
-
-Here's the highlights for v2.13.0
-
 * **Value Delimiters:**  fixes the confusion around implicitly setting value delimiters. (The default is to *not* use a delimiter unless explicitly set)
-* **Docs:** Updates README.md with new website information and updated video tutorials info
-* **Docs:** Updates the docs about removing implicit `value_delimiter(true)`
-* **Docs:** Adds better examples on using default values
-
-
-Here's the highlights for v2.12.1
-
-* Fixes a regression-bug where the old `{n}` newline char stopped being replaced a properly re-aligned newline
-
-Here's the highlights for v2.12.0
-
 * Changes the default value delimiter rules (i.e. the default is `use_delimiter(false)` *unless* a setting/method that implies multiple values was used) **[Bugfix that *may* ""break"" code]**
  * If code breaks, simply add `Arg::use_delimiter(true)` to the affected args
-* Updates the docs for the `Arg::multiple` method WRT value delimiters and default settings
 * Adds ability to hide the possible values from the help text on a per argument basis, instead of command wide
 * Allows for limiting detected terminal width (i.e. wrap at `x` length, unless the terminal width is *smaller*)
-* Removes some redundant `contains()` checks for minor performance improvements
-* Fixes a bug where valid args aren't recognized with the `AppSettings::AllowLeadingHyphen` setting
 * `clap` now ignores hard newlines in help messages and properly re-aligns text, but still wraps if the term width is too small
-* Makes some minor changes to when next line help is automatically used
 * Adds support for the setting `Arg::require_delimiter` from YAML
-* Removes the verbage about using `'{n}'` to insert newlines in help text from the docs (the normal `\n` can now be used)
-* Documents `AppSetting::DisableVersion`
-
-Here's the highlights for v2.11.3
-
 * `clap` no longer requires one to use `{n}` inside help text to insert a newline that is properly aligned. One can now use the normal `\n`.
 * `clap` now ignores hard newlines in help messages and properly re-aligns text, but still wraps if the term width is too small
-* Supports setting `Arg::require_delimiter` from YAML
-
-Here's the highlights for v2.11.2
-
-* Makes some minor changes to when next line help is automatically used for improved wrapping
-
-Here's the highlights for v2.11.1
-
-* Fixes an issue where settings weren't propogated down through grand-child subcommands
 * Errors can now have custom description
 * Uses `term_size` instead of home-grown solution on Windows
-* Updates deps with some minor bug fixes
-
-
-Here's the highlights for v2.11.0
-
 * Adds the ability to wrap help text intelligently on Windows!
-* Moves docs to [docs.rs!](https://docs.rs/clap/)
-* Fixes some usage strings that contain both args in groups and ones that conflict with each other
-* Uses standard conventions for bash completion files, namely `{bin}.bash-completion`
+* Moves docs to [docs.rs!](https://docs.rs/clap/)!
 * Automatically moves help text to the next line and wraps when term width is determined to be too small, or help text is too long
 * Vastly improves *development* error messages when using YAML
-* Adds `App::with_defaults` to automatically use `crate_authors!` and `crate_version!` macros
-* Other minor improvements and bug fixes
-
-Here's the highlights for v2.10.4
-
-* Fixes a bug where help is wrapped incorrectly and causing a panic with some non-English characters
-
-Here's the highlights for v2.10.3
-
-* Fixes a bug with non-English characters in help text wrapping, where the character is stripped or causes a panic
-* Fixes an issue with `strsim` which caused a panic in some scenarios
 * Adds a shorthand way to ignore help text wrapping and use source formatting (i.e. `App::set_term_width(0)`)
-
-Here's the highlights for v2.10.2
-
-* Fixes a critical bug where the help message is printed twice
-
-Here's the highlights for v2.10.1
-
 * **Help Subcommand:**  fixes misleading usage string when using multi-level subcommmands such as `myprog help subcmd1 subcmd2`
 * **YAML:**  allows using lists or single values with certain arg declarations for increased ergonomics
-
-
-Here's the highlights for v2.10.0
-
-
 * **Fish Shell Completions:**  one can generate a basic fish completions script at compile time!
-* **External SubCommands:**  fixes a bug which now correctly preserves external subcommand name along with args to said command (Minor breaking change that breaks no known real world code)
-* **YAML Documentation:**  fixes example 17's incorrect reference to arg_groups instead of groups
-
-
-Here's the highlights for v2.9.3
-
 * Adds the ability to generate completions to an `io::Write` object
 * Adds an `App::unset_setting` and `App::unset_settings`
-* Fixes bug where only first arg in list of `required_unless_one` is recognized
-* Fixes a typo bug `SubcommandsRequired`->`SubcommandRequired`
-
-
-Here's the highlights for v2.9.2
-
-
-* fixes bug where --help and --version short weren't added to the completion list
-* improves completions allowing multiple bins to have seperate completion files
-
-Here's the highlights for v2.9.0
-
 * **Completions:**  one can now [generate a bash completions](https://docs.rs/clap/2.9.0/clap/struct.App.html#method.gen_completions) script at compile time! These completions work with options using [possible values](https://docs.rs/clap/2.9.0/clap/struct.Arg.html#method.possible_values), [subcommand aliases](https://docs.rs/clap/2.9.0/clap/struct.App.html#method.aliases), and even multiple levels of subcommands
-* Minor bug fixes when using `AppSettings::TrailingVarArg` and `AppSettings::AllowLeadingHyphen`
-
-Here's the highlights for v2.8.0
-
 * **Arg:**  adds new optional setting [`Arg::require_delimiter`](https://docs.rs/clap/2.8.0/clap/struct.Arg.html#method.require_delimiter) which requires val delimiter to parse multiple values
 * The terminal sizing portion has been factored out into a separate crate, [term_size](https://crates.io/crates/term_size)
-* Minor bug fixes
-
-
-Here's the highlights for v2.7.1
-
-* **Options:**
-  *  options using multiple values and delimiters no longer parse additional values after a trailing space (i.e. `prog -o 1,2 file.txt` parses as `1,2` for `-o` and `file.txt` for a positional arg)
-  *  using options using multiple values and with an `=` no longer parse args after the trailing space as values (i.e. `prog -o=1 file.txt` parses as `1` for `-o` and `file.txt` for a positional arg)
-
-Here's the highlights for v2.7.0
-
+* Options using multiple values and delimiters no longer parse additional values after a trailing space (i.e. `prog -o 1,2 file.txt` parses as `1,2` for `-o` and `file.txt` for a positional arg)
+* Using options using multiple values and with an `=` no longer parse args after the trailing space as values (i.e. `prog -o=1 file.txt` parses as `1` for `-o` and `file.txt` for a positional arg)
 * **Usage Strings:**  `[FLAGS]` and `[ARGS]` are no longer blindly added to usage strings, instead only when applicable
 * `arg_enum!`:  allows using more than one meta item, or things like `#[repr(C)]` with `arg_enum!`s
 * `App::print_help`: now prints the same as would have been printed by `--help` or the like
-* **Help Messages:**
- *  prevents invoking `<cmd> help help` and displaying incorrect help message
- *  subcommand help messages requested via `<cmd> help <sub>` now correctly match `<cmd> <sub> --help`
-* **`ArgGroup`s:**
- *  one can now specify groups which require AT LEAST one of the args
- *  allows adding multiple ArgGroups per Arg
- * **Documentation:**  vastly improves `ArgGroup` docs by adding better examples
-* **Documentation:**  fixes a bunch of typos in the documentation
-
-Here's the highlights for v2.6.0
-
+* Prevents invoking `<cmd> help help` and displaying incorrect help message
+* Subcommand help messages requested via `<cmd> help <sub>` now correctly match `<cmd> <sub> --help`
+* One can now specify groups which require AT LEAST one of the args
+* Allows adding multiple ArgGroups per Arg
 * **Global Settings:** One can now set an `AppSetting` which is propogated down through child subcommands
 * **Terminal Wrapping:**  Allows wrapping at specified term width (Even on Windows!) (can now set an absolute width to ""smart"" wrap at)
 * **SubCommands/Aliases:**  adds support for visible aliases for subcommands (i.e. aliases that are dipslayed in the help message)
 * **Subcommands/Aliases:**  when viewing the help of an alias, it now display help of the aliased subcommand
-* Improves the default usage string when only a single positional arg is present
 * Adds new setting to stop delimiting values with `--` or `AppSettings::TrailingVarArg`
-* `App::before_help` and `App::after_help` now correctly wrap
-* Fixes bug where positional args are printed out of order when using templates
-* Fixes bug where one can't override the auto-generated version or help flags
-* Fixes issue where `App::before_help` wasn't printed
-* Fixes a failing windows build
-* Fixes bug where new color settings couldn't be converted from strings
-* Adds missing YAML methods for App and Arg
-* Allows printing version to any io::Write object
-* Removes extra newline from help and version output
-
-Here's what's new in v.2.5.2
-
-*   Removes trailing newlines from help and version output
-*   Allows printing version to any io::Write object
-*   Inter-links all types and pages
-*   Makes all publicly available types viewable in docs
-*   Fixes bug where one can't override version or help flags
-*   Fixes bug where args are printed out of order when using templates
-*   Fixes issue where `App::before_help` wasn't printed properly
-
-Here's what's new in v.2.5.0
-
 * Subcommands now support aliases - think of them as hidden subcommands that dispatch to said subcommand automatically
-
-Here's what's new in v2.4.3
-
-* Bug Fixes
- * Usage strings get de-deuplicated when there are args which are also part ``ArgGroup`s`
- * Fixed times when `ArgGroup`s are duplicated in usage strings
-* Improvements
- * Positional arguments which are part of a group are now formatted in a more readable way (fewer brackets)
- * Positional arguments use the standard `<>` brackets to reduce confusion
- * The default help string for the `help` subcommand has been shortened to fit in 80 columns
-
-Here's the highlights from v2.4.0
-
+* Fixed times when `ArgGroup`s are duplicated in usage strings
 * **Before Help:**  adds support for displaying info before help message
 * **Required Unless:**  adds support for allowing args that are required unless certain other args are present
-* Bug fixes
-
-Here's the highlights from v2.3.0
-
 * **New Help Template Engine!**: Now you have full control over the layout of your help message. Major thanks to @hgrecco
 * **Pull crate Authors from Cargo.toml**: One can now use the `crate_authors!` macro to automatically pull the crate authors from their Cargo.toml file
 * **Colored Help Messages**: Help messages can now be optionally colored (See the `AppSettings::ColoredHelp` setting). Screenshot below.
-* A bunch of bug fixes
-
-Here's the highlights from v2.2.1
-
 * **Help text auto wraps and aligns at for subcommands too!** - Long help strings of subcommands will now properly wrap and align to term width on Linux and OS X. This can be turned off as well.
-* Bug fixes
-
-An example of the optional colored help:
-
-![screenshot](http://i.imgur.com/7fs2h5j.png)
-
-Here's the highlights from v2.2.0
-
 * **Help text auto wraps and aligns at term width!** - Long help strings will now properly wrap and align to term width on Linux and OS X (and presumably Unix too). This can be turned off as well.
 * **Can customize the order of opts, flags, and subcommands in help messages**  - Instead of using the default alphabetical order, you can now re-arrange the order of your args and subcommands in help message. This helps to emphasize more popular or important options.
- * **Can auto-derive the order from declaration order** - Have a bunch of args or subcommmands to re-order? You can now just derive the order from the declaration order!
+* **Can auto-derive the order from declaration order** - Have a bunch of args or subcommmands to re-order? You can now just derive the order from the declaration order!
 * **Help subcommand now accepts other subcommands as arguments!** - Similar to other CLI precedents, the `help` subcommand can now accept other subcommands as arguments to display their help message. i.e. `$ myprog help mysubcmd` (*Note* these can even be nested heavily such as `$ myprog help subcmd1 subcmd2 subcmd3` etc.)
+* **Default Values**: Args can now specify default values
+* **Next Line Help**: Args can have help strings on the line following the argument (useful for long arguments, or those with many values). This can be set command-wide or for individual args
 
-* Other minor bug fixes
+Here's a gif of them in action!
+
+![zsh-comppletions](http://i.imgur.com/rwlMbAv.gif)
 
 An example of the help text wrapping at term width:
 
 ![screenshot](http://i.imgur.com/PAJzJJG.png)
 
-In v2.1.2
+An example of the optional colored help:
+
+![screenshot](http://i.imgur.com/7fs2h5j.png)
 
- * **Default Values**: Args can now specify default values
- * **Next Line Help**: Args can have help strings on the line following the argument (useful for long arguments, or those with many values). This can be set command-wide or for individual args
- * **Documentation Examples**: The examples in the documentation have been vastly improved
 
 For full details, see [CHANGELOG.md](https://github.com/kbknapp/clap-rs/blob/master/CHANGELOG.md)
 
@@ -697,6 +494,7 @@ features = [ ""suggestions"", ""color"" ]
 #### Opt-in features
 
 * **""yaml""**: Enables building CLIs from YAML documents. (builds dependency `yaml-rust`)
+* **""unstable""**: Enables unstable `clap` features that may change from release to release
 
 ### Dependencies Tree
 
@@ -707,6 +505,7 @@ The following graphic depicts `clap`s dependency graph (generated using [cargo-g
  * **Blue** Color: Dev dependency, only used while developing.
 
 ![clap dependencies](clap_dep_graph.png)
+
 ### More Information
 
 You can find complete documentation on the [docs.rs](https://docs.rs/clap/) for this project.
@@ -727,20 +526,65 @@ Another really great way to help is if you find an interesting, or helpful way i
 
 Please read [CONTRIBUTING.md](.github/CONTRIBUTING.md) before you start contributing.
 
+
+### Testing Code
+
 To test with all features both enabled and disabled, you can run theese commands:
 
 ```sh
 $ cargo test --no-default-features
-$ cargo test --features yaml
+$ cargo test --features ""yaml unstable""
 ```
 
-If you have a nightly compiler you can append `--features lints` to both commands
-to get style warnings and code smells; If you get one from code you think is fine,
-you can ignore it by prepending `#[cfg_attr(feature=""lints"", allow(lint_name))]`
-to the function or impl block.
+Alternatively, if you have [`just`](https://github.com/casey/just) installed you can run the prebuilt recipies. *Not* using `just` is prfeclty fine as well, it simply bundles commands automatically.
+
+For example, to test the code, as above simply run:
+
+```sh
+$ just run-tests`
+```
+
+From here on, I will lis the appropriate `cargo` command as well as the `just` command.
+
+Sometimes it's helpful to only run a subset of the tests, which can be done via:
+
+```sh
+$ cargo test --test <test_name>
+
+# Or
+
+$ just run-test <test_name>
+```
 
-If you are debugging (or just trying to understand the code) you can enable the
-""debug"" feature which will trace function calls and brances in some parts of the code.
+### Linting Code
+
+During the CI process `clap` runs against many different lints using [`clippy`](https://github.com/Manishearth/rust-clippy). In order to check if these lints pass on your own computer prior to submitting a PR you'll need a nightly compiler.
+
+In order to check the code for lints run either:
+
+```sh
+$ rustup override add nightly
+$ cargo build --features lints
+$ rustup override remove
+
+# Or
+
+$ just lint
+```
+
+### Debugging Code
+
+Another helpful technique is to see the `clap` debug output while developing features. In order to see the debug output while running the full test suite or individual tests, run:
+
+```sh
+$ cargo test --features debug
+
+# Or for individual tests
+$ cargo test --test <test_name> --features debug
+
+# The corresponding just command for individual debugging tests is:
+$ just debug <test_name>
+```
 
 ### Goals
 
",2,"[""bf95d5d0b34d32ef2684488feb3de01cb824b2b4"", ""eb51316cdfdc7258d287ba13b67ef2f42bd2b8f6""]","[""refactor"", ""docs""]","1. The code changes include restructuring Vue component logic related to toolbars (moving and commenting out code, adjusting class names, etc.) and significant updates to documentation files (README.md and CONTRIBUTING.md), improving readability and contribution instructions.
2. The Vue component changes align with the 'refactor' label as they reorganize UI structure and improve code clarity without changing external behavior, while the documentation file edits align with the 'docs' label, as they exclusively enhance documentation content and instructions.
3. 'refactor' is appropriate for the component-level UI restructuring because no new features or bug fixes are introduced, only internal organization is improved; 'docs' is correct for the README and CONTRIBUTING changes as they are purely textual/documentation edits, not affecting code logic or behavior. No other labels (such as 'feat', 'fix', or 'test') are suitable given the nature of the changes.
4. The 'refactor' label accurately captures the internal code reorganization in the UI components, and the 'docs' label correctly reflects the documentation improvements, together covering the full scope of this commit."
"skip if related view/hook/column of a filter is not found

Signed-off-by: Pranav C <pranavxc@gmail.com>
Add ability to specify release name

Signed-off-by: Matt Stratton <matt.stratton@gmail.com>","diff --git a/packages/nocodb/src/lib/version-upgrader/ncFilterUpgrader.ts b/packages/nocodb/src/lib/version-upgrader/ncFilterUpgrader.ts
index 1515f88..6c250bd 100644
--- a/packages/nocodb/src/lib/version-upgrader/ncFilterUpgrader.ts
+++ b/packages/nocodb/src/lib/version-upgrader/ncFilterUpgrader.ts
@@ -21,7 +21,13 @@ export default async function ({ ncMeta }: NcUpgraderCtx) {
     } else {
       continue;
     }
-    if (filter.project_id != model.project_id) {
+
+    // skip if related model is not found
+    if (!model) {
+      continue;
+    }
+
+    if (filter.project_id !== model.project_id) {
       await ncMeta.metaUpdate(
         null,
         null,

diff --git a/config/config.go b/config/config.go
index ee2922d..f37c4c1 100644
--- a/config/config.go
+++ b/config/config.go
@@ -116,9 +116,10 @@ type Archive struct {
 
 // Release config used for the GitHub release
 type Release struct {
-	GitHub     Repo `yaml:"",omitempty""`
-	Draft      bool `yaml:"",omitempty""`
-	Prerelease bool `yaml:"",omitempty""`
+	GitHub       Repo   `yaml:"",omitempty""`
+	Draft        bool   `yaml:"",omitempty""`
+	Prerelease   bool   `yaml:"",omitempty""`
+	NameTemplate string `yaml:"",omitempty`
 
 	// Capture all undefined fields and should be empty after loading
 	XXX map[string]interface{} `yaml:"",inline""`
diff --git a/internal/name/name.go b/internal/name/name.go
index ca5dbec..e53a0a2 100644
--- a/internal/name/name.go
+++ b/internal/name/name.go
@@ -67,6 +67,18 @@ func ForChecksums(ctx *context.Context) (string, error) {
 	)
 }
 
+// ForTitle returns the release title based upon its template
+func ForTitle(ctx *context.Context) (string, error) {
+	return apply{
+		nameData{
+			ProjectName: ctx.Config.ProjectName,
+			Tag: ctx.Git.CurrentTag,
+			Version: ctx.Version,
+		}
+		ctx.Config.Release.NameTemplate,
+	}
+}
+
 func apply(data nameData, templateStr string) (string, error) {
 	var out bytes.Buffer
 	t, err := template.New(data.ProjectName).Parse(templateStr)
diff --git a/pipeline/defaults/defaults.go b/pipeline/defaults/defaults.go
index e94ee24..9dbfce8 100644
--- a/pipeline/defaults/defaults.go
+++ b/pipeline/defaults/defaults.go
@@ -14,6 +14,9 @@ import (
 // NameTemplate default name_template for the archive.
 const NameTemplate = ""{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}""
 
+// ReleaseNameTemplate is the default name for the release.
+const ReleaseNameTemplate = ""{{ .Version }}""
+
 // SnapshotNameTemplate represents the default format for snapshot release names.
 const SnapshotNameTemplate = ""SNAPSHOT-{{ .Commit }}""
 
@@ -31,6 +34,9 @@ func (Pipe) Description() string {
 // Run the pipe
 func (Pipe) Run(ctx *context.Context) error {
 	ctx.Config.Dist = ""dist""
+	if ctx.Config.Release.NameTemplate == """" {
+		ctx.Config.Release.NameTemplate = ReleaseNameTemplate
+	}
 	if ctx.Config.Snapshot.NameTemplate == """" {
 		ctx.Config.Snapshot.NameTemplate = SnapshotNameTemplate
 	}
",2,"[""ab1e60a97c6d5c688dacbd23bca40cb8f20c4ac3"", ""f823cf28652987d43c8324b4f5b203240032383a""]","[""fix"", ""feat""]","1. The change in 'ncFilterUpgrader.ts' adds a check to skip processing if a related model is not found, preventing errors from missing dependencies; the changes in 'config.go', 'name.go', and 'defaults.go' introduce and apply the ability to specify a release name template in configuration and default pipeline logic.
2. The first change addresses a bug by ensuring the code safely handles missing related models, aligning with the 'fix' label definition; the second set of changes adds a new feature by introducing a configurable release name, matching the 'feat' label.
3. 'fix' is appropriate for the filter upgrader change because it resolves a potential runtime fault rather than adding new capability or refactoring; 'feat' is correct for the release name template additions since they introduce new user-facing functionality, not merely restructuring or documentation.
4. The assignment of 'fix' for the error-handling logic and 'feat' for the new configuration option accurately reflects the motivation and essence of each code unit in the commit."
add tests for ProfilePage methods,"diff --git a/client/src/components/Profile/PreScreeningIviewCard.tsx b/client/src/components/Profile/PreScreeningIviewCard.tsx
index f84392a..2031203 100644
--- a/client/src/components/Profile/PreScreeningIviewCard.tsx
+++ b/client/src/components/Profile/PreScreeningIviewCard.tsx
@@ -27,7 +27,7 @@ type State = {
   isPreScreeningIviewModalVisible: boolean;
 };
 
-class CoreJSIviewsCard extends React.PureComponent<Props, State> {
+class PreScreeningIviewsCard extends React.PureComponent<Props, State> {
   state = {
     courseIndex: 0,
     isPreScreeningIviewModalVisible: false,
@@ -98,4 +98,4 @@ class CoreJSIviewsCard extends React.PureComponent<Props, State> {
   }
 }
 
-export default CoreJSIviewsCard;
+export default PreScreeningIviewsCard;
diff --git a/client/src/components/Profile/__test__/__snapshots__/PreScreeningIviewCard.test.tsx.snap b/client/src/components/Profile/__test__/__snapshots__/PreScreeningIviewCard.test.tsx.snap
index 7b73c3f..54b378c 100644
--- a/client/src/components/Profile/__test__/__snapshots__/PreScreeningIviewCard.test.tsx.snap
+++ b/client/src/components/Profile/__test__/__snapshots__/PreScreeningIviewCard.test.tsx.snap
@@ -1,7 +1,7 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`PreScreeningIviewCard Should render correctly 1`] = `
-<CoreJSIviewsCard
+<PreScreeningIviewsCard
   data={
     Array [
       Object {
@@ -3015,5 +3015,5 @@ exports[`PreScreeningIviewCard Should render correctly 1`] = `
       </div>
     </Card>
   </CommonCard>
-</CoreJSIviewsCard>
+</PreScreeningIviewsCard>
 `;
diff --git a/client/src/pages/profile/__tests__/ProfilePage.tests.tsx b/client/src/pages/profile/__tests__/ProfilePage.tests.tsx
index 079d966..95f3e49 100644
--- a/client/src/pages/profile/__tests__/ProfilePage.tests.tsx
+++ b/client/src/pages/profile/__tests__/ProfilePage.tests.tsx
@@ -4,7 +4,6 @@ import { shallowToJson } from 'enzyme-to-json';
 import { NextRouter } from 'next/router';
 import { Session } from 'components/withSession';
 import { ProfilePage } from '../index';
-// import { GeneralInfo } from '../../../../../common/models/profile';
 
 jest.mock('next/config', () => () => ({}));
 jest.mock('services/user', () => ({
@@ -12,80 +11,378 @@ jest.mock('services/user', () => ({
       getProfileInfo() {
         return jest.fn();
       }
+      saveProfileInfo() {
+        return jest.fn();
+      }
     },
   }),
 );
 
-describe('ProfilePage', () => {
-  const profile = {
-    generalInfo: {
-      name: 'Dzmitry Petrov',
-      githubId: 'petrov',
-      aboutMyself: 'Test',
+const profile = {
+  permissionsSettings: {
+    isProfileVisible: { all: true },
+    isAboutVisible: { mentor: true, student: false, all: false },
+    isEducationVisible: { mentor: true, student: false, all: false },
+    isEnglishVisible: { student: false, all: false },
+    isEmailVisible: { student: false, all: false },
+    isTelegramVisible: { student: false, all: false },
+    isSkypeVisible: { student: false, all: false },
+    isPhoneVisible: { student: false, all: false },
+    isContactsNotesVisible: { student: true, all: false },
+    isLinkedInVisible: { mentor: true, student: false, all: false },
+    isPublicFeedbackVisible: { mentor: true, student: true, all: false },
+    isMentorStatsVisible: { mentor: true, student: true, all: false },
+    isStudentStatsVisible: { student: false, all: false },
+  },
+  generalInfo: {
+    aboutMyself: 'Test',
+    educationHistory: [{
+      graduationYear: '2019',
+      faculty: 'TT',
+      university: 'Test',
+    }],
+    englishLevel: 'a2+',
+    locationId: 456,
+    locationName: 'Brest',
+  },
+  contacts: {},
+  mentorStats: [
+    {},
+  ],
+  studentStats: [
+    {
+      courseFullName: 'test',
+      courseName: 'test',
       locationName: 'Minsk',
-      locationId: '1',
-      educationHistory: null,
-      englishLevel: 'a2+',
-    },
-    permissionsSettings: {
-      isProfileVisible: { all: true },
-      isAboutVisible: { mentor: true, student: false, all: false },
-      isEducationVisible: { mentor: true, student: false, all: false },
-      isEnglishVisible: { student: false, all: false },
-      isEmailVisible: { student: false, all: false },
-      isTelegramVisible: { student: false, all: false },
-      isSkypeVisible: { student: false, all: false },
-      isPhoneVisible: { student: false, all: false },
-      isContactsNotesVisible: { student: true, all: false },
-      isLinkedInVisible: { mentor: true, student: false, all: false },
-      isPublicFeedbackVisible: { mentor: true, student: true, all: false },
-      isMentorStatsVisible: { mentor: true, student: true, all: false },
-      isStudentStatsVisible: { student: false, all: false },
-    },
-    contacts: {
-      phone: '+375292123456',
-      email: 'petro@gmail.com',
-      skype: 'petro:live',
-      telegram: 'petro',
-      notes: 'discord: @petro, instagram: @petro12',
-    },
-    isPermissionsSettingsChanged: true,
-    isProfileSettingsChanged: true,
-  };
-  const session = {
-    id: 2020,
-    githubId: 'mikhama',
-    isAdmin: true,
-    isHirer: false,
-    isActivist: false,
-    roles: {
-      1: 'mentor',
-      2: 'student',
-      11: 'mentor',
-    },
-    coursesRoles: {
-      13: [
-        'manager',
+      tasks: [
+        {
+          interviewFormAnswers: {},
+        },
       ],
     },
-  } as Session;
-  const router = {
-    query: {
-      githubId: 'petrov',
-    },
-    asPath: '/#edit/',
-  } as unknown as NextRouter;
+  ],
+  publicFeedback: [
+    {},
+  ],
+  stageInterviewFeedback: [
+    {},
+  ],
+};
+const session = {
+  id: 2020,
+  githubId: 'mikhama',
+  isAdmin: true,
+  isHirer: false,
+  isActivist: false,
+  roles: {
+    1: 'mentor',
+    2: 'student',
+    11: 'mentor',
+  },
+  coursesRoles: {
+    13: [
+      'manager',
+    ],
+  },
+} as Session;
+const router = {
+  query: {
+    githubId: 'petrov',
+  },
+  asPath: '/#edit/',
+} as unknown as NextRouter;
+const state = {
+  profile,
+  isInitialPermissionsSettingsChanged: false,
+  isInitialProfileSettingsChanged: false,
+};
 
+describe('ProfilePage', () => {
   describe('Should render correctly', () => {
-    it('if full info about profile is in the state', () => {
+    it('if full profile info is in the state', () => {
       const wrapper = shallow(
         <ProfilePage
           session={session}
           router={router}
         />,
       );
-      wrapper.setState({ profile });
+      wrapper.setState(state);
       expect(shallowToJson(wrapper)).toMatchSnapshot();
     });
   });
+
+  const wrapper = shallow(
+    <ProfilePage
+      session={session}
+      router={router}
+    />,
+  );
+  const instance = wrapper.instance();
+  describe('onPermissionsSettingsChange', () => {
+    describe('Should set state correctly', () => {
+      it('if permissions for student role were changed', async () => {
+        const event = {
+          target: {
+            checked: true,
+          },
+        }
+        const changedPermissionsSettings = {
+          permissionName: 'isEmailVisible',
+          role: 'student',
+        };
+        wrapper.setState(state);
+        await instance.onPermissionsSettingsChange(event, changedPermissionsSettings);
+        expect(wrapper.state().profile.permissionsSettings.isEmailVisible).toEqual({
+          student: true, all: false,
+        });
+        expect(wrapper.state().isInitialPermissionsSettingsChanged).toBe(true);
+      });
+      it('if permissions for mentor role were changed', async () => {
+        const event = {
+          target: {
+            checked: false,
+          },
+        }
+        const changedPermissionsSettings = {
+          permissionName: 'isLinkedInVisible',
+          role: 'mentor',
+        };
+        wrapper.setState(state);
+        await instance.onPermissionsSettingsChange(event, changedPermissionsSettings);
+        expect(wrapper.state().profile.permissionsSettings.isLinkedInVisible).toEqual({
+          mentor: false, student: false, all: false,
+        });
+        expect(wrapper.state().isInitialPermissionsSettingsChanged).toBe(true);
+      });
+      it('if permissions for all roles were changed', async () => {
+        const event = {
+          target: {
+            checked: true,
+          },
+        }
+        const changedPermissionsSettings = {
+          permissionName: 'isEducationVisible',
+          role: 'all',
+        };
+        wrapper.setState(state);
+        await instance.onPermissionsSettingsChange(event, changedPermissionsSettings);
+        expect(wrapper.state().profile.permissionsSettings.isEducationVisible).toEqual({
+          mentor: true, student: true, all: true,
+        });
+        expect(wrapper.state().isInitialPermissionsSettingsChanged).toBe(true);
+      });
+    });
+  });
+  describe('onProfileSettingsChange', () => {
+    describe('Should set state correctly', () => {
+      it('if ""profile.generalInfo.location"" was changed', async () => {
+        const event = {
+          id: 123,
+          name: 'Minsk',
+        }
+        const path = 'generalInfo.location';
+        wrapper.setState(state);
+        await instance.onProfileSettingsChange(event, path);
+        expect(wrapper.state().profile.generalInfo.locationId).toBe(123);
+        expect(wrapper.state().profile.generalInfo.locationName).toBe('Minsk');
+        expect(wrapper.state().isInitialProfileSettingsChanged).toBe(true);
+      });
+      it('if ""profile.generalInfo.englishLevel"" was changed', async () => {
+        const event = 'b2+';
+        const path = 'generalInfo.englishLevel';
+        wrapper.setState(state);
+        await instance.onProfileSettingsChange(event, path);
+        expect(wrapper.state().profile.generalInfo.englishLevel).toBe('b2+');
+      });
+      it('if field added to ""profile.generalInfo.educationHistory""', async () => {
+        const event = {
+          type: 'add',
+        };
+        const path = 'generalInfo.educationHistory';
+        wrapper.setState(state);
+        await instance.onProfileSettingsChange(event, path);
+        expect(wrapper.state().profile.generalInfo.educationHistory).toEqual([
+          {
+            graduationYear: '2019',
+            faculty: 'TT',
+            university: 'Test',
+          },
+          {
+            graduationYear: null,
+            faculty: null,
+            university: null,
+          },
+        ]);
+        expect(wrapper.state().isInitialProfileSettingsChanged).toBe(true);
+      });
+      it('if field deleted from ""profile.generalInfo.educationHistory""', async () => {
+        const event = {
+          type: 'delete',
+          index: 0,
+        };
+        const path = 'generalInfo.educationHistory';
+        wrapper.setState(state);
+        await instance.onProfileSettingsChange(event, path);
+        expect(wrapper.state().profile.generalInfo.educationHistory).toEqual([]);
+      });
+      it('if some other field was changed', async () => {
+        const event = {
+          target: {
+            value: 'Hello everyone, my name is Mike.',
+          }
+        };
+        const path = 'generalInfo.aboutMyself';
+        wrapper.setState(state);
+        await instance.onProfileSettingsChange(event, path);
+        expect(wrapper.state().profile.generalInfo.aboutMyself).toEqual('Hello everyone, my name is Mike.');
+        expect(wrapper.state().isInitialProfileSettingsChanged).toBe(true);
+      });
+    });
+  });
+  describe('changeProfilePageMode', () => {
+    describe('Should set state correctly', () => {
+      it('if mode = ""edit"" was passed', async () => {
+        const mode = 'edit';
+        wrapper.setState({ ...state, isEditingModeEnabled: false });
+        expect(wrapper.state().isEditingModeEnabled).toBe(false);
+        await instance.changeProfilePageMode(mode);
+        expect(wrapper.state().isEditingModeEnabled).toBe(true);
+      });
+      it('if mode = ""view"" was passed', async () => {
+        const mode = 'view';
+        wrapper.setState({ ...state, isEditingModeEnabled: true });
+        expect(wrapper.state().isEditingModeEnabled).toBe(true);
+        await instance.changeProfilePageMode(mode);
+        expect(wrapper.state().isEditingModeEnabled).toBe(false);
+      });
+    });
+  });
+  describe('saveProfile', () => {
+    it('Should set state correctly', async () => {
+      const profile = {
+        generalInfo: {
+          aboutMyself: 'Hello',
+          educationHistory: [{
+            graduationYear: '2019',
+            faculty: 'TT',
+            university: 'Test',
+          }],
+          englishLevel: 'c1',
+          locationId: 778,
+          locationName: 'Hrodna',
+        },
+        contacts: {
+          telegram: 'test',
+        },
+        permissionsSettings: {
+          isProfileVisible: { all: true },
+          isAboutVisible: { mentor: true, student: false, all: false },
+          isEducationVisible: { mentor: true, student: false, all: false },
+          isEnglishVisible: { student: true, all: true },
+          isEmailVisible: { student: true, all: true },
+          isTelegramVisible: { student: true, all: true },
+          isSkypeVisible: { student: true, all: false },
+          isPhoneVisible: { student: true, all: false },
+          isContactsNotesVisible: { student: true, all: false },
+          isLinkedInVisible: { mentor: true, student: false, all: false },
+          isPublicFeedbackVisible: { mentor: true, student: true, all: false },
+          isMentorStatsVisible: { mentor: true, student: true, all: false },
+          isStudentStatsVisible: { student: false, all: false },
+        },
+      };
+      wrapper.setState({
+        ...state,
+        profile,
+        isInitialPermissionsSettingsChanged: true,
+        isInitialProfileSettingsChanged: true,
+      });
+      await instance.saveProfile();
+      expect(wrapper.state().isSaving).toBe(false);
+      expect(wrapper.state().isInitialPermissionsSettingsChanged).toBe(false);
+      expect(wrapper.state().isInitialProfileSettingsChanged).toBe(false);
+      expect(wrapper.state().initialPermissionsSettings).toEqual(profile.permissionsSettings);
+      expect(wrapper.state().initialProfileSettings).toEqual(profile);
+    });
+  });
+  describe('hadStudentCoreJSInterview', () => {
+    describe('Should return', () => {
+      it('""true"" if student has an ""interviewFormAnswers"" in one of the task', () => {
+        const studentStats = [
+          {
+            courseFullName: 'test',
+            courseName: 'test',
+            locationName: 'Minsk',
+            tasks: [
+              {},
+              {
+                interviewFormAnswers: {},
+              },
+              {},
+              {},
+            ],
+          },
+        ];
+        const result = instance.hadStudentCoreJSInterview(studentStats);
+        expect(result).toBe(true);
+      });
+      it('""false"" if student has not an ""interviewFormAnswers"" in one of the task', () => {
+        const studentStats = [
+          {
+            courseFullName: 'test',
+            courseName: 'test',
+            locationName: 'Minsk',
+            tasks: [
+              {},
+              {},
+              {},
+            ],
+          },
+        ];
+        const result = instance.hadStudentCoreJSInterview(studentStats);
+        expect(result).toBe(false);
+      });
+    });
+  });
+  describe('getStudentCoreJSInterviews', () => {
+    it('Should return info about CoreJS interviews', () => {
+      const studentStats = [
+        {
+          courseFullName: 'test',
+          courseName: 'test',
+          locationName: 'Minsk',
+          tasks: [
+            {},
+            {},
+            {
+              interviewer: {
+                name: 'Dima Petrov',
+                githubId: 'dip',
+              },
+              comment: 'Test',
+              score: 9,
+              interviewFormAnswers: {},
+            },
+            {},
+          ],
+        },
+      ];
+      const result = instance.getStudentCoreJSInterviews(studentStats);
+      expect(result).toEqual([
+        {
+          courseFullName: 'test',
+          courseName: 'test',
+          interview: {
+            answers: {},
+            interviewer: {
+              name: 'Dima Petrov',
+              githubId: 'dip',
+            },
+            comment: 'Test',
+            score: 9,
+          },
+          locationName: 'Minsk',
+        },
+      ]);
+    });
+  });
 });
diff --git a/client/src/pages/profile/__tests__/__snapshots__/ProfilePage.tests.tsx.snap b/client/src/pages/profile/__tests__/__snapshots__/ProfilePage.tests.tsx.snap
index fbd133c..729b2de 100644
--- a/client/src/pages/profile/__tests__/__snapshots__/ProfilePage.tests.tsx.snap
+++ b/client/src/pages/profile/__tests__/__snapshots__/ProfilePage.tests.tsx.snap
@@ -1,6 +1,6 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`ProfilePage Should render correctly if  1`] = `
+exports[`ProfilePage Should render correctly if full profile info is in the state 1`] = `
 <Fragment>
   <LoadingScreen
     show={true}
@@ -50,12 +50,16 @@ exports[`ProfilePage Should render correctly if  1`] = `
               data={
                 Object {
                   ""aboutMyself"": ""Test"",
-                  ""educationHistory"": null,
+                  ""educationHistory"": Array [
+                    Object {
+                      ""faculty"": ""TT"",
+                      ""graduationYear"": ""2019"",
+                      ""university"": ""Test"",
+                    },
+                  ],
                   ""englishLevel"": ""a2+"",
-                  ""githubId"": ""petrov"",
-                  ""locationId"": ""1"",
-                  ""locationName"": ""Minsk"",
-                  ""name"": ""Dzmitry Petrov"",
+                  ""locationId"": 456,
+                  ""locationName"": ""Brest"",
                 }
               }
               isEditingModeEnabled={false}
@@ -135,12 +139,16 @@ exports[`ProfilePage Should render correctly if  1`] = `
               data={
                 Object {
                   ""aboutMyself"": ""Test"",
-                  ""educationHistory"": null,
+                  ""educationHistory"": Array [
+                    Object {
+                      ""faculty"": ""TT"",
+                      ""graduationYear"": ""2019"",
+                      ""university"": ""Test"",
+                    },
+                  ],
                   ""englishLevel"": ""a2+"",
-                  ""githubId"": ""petrov"",
-                  ""locationId"": ""1"",
-                  ""locationName"": ""Minsk"",
-                  ""name"": ""Dzmitry Petrov"",
+                  ""locationId"": 456,
+                  ""locationName"": ""Brest"",
                 }
               }
               isEditingModeEnabled={false}
@@ -220,12 +228,16 @@ exports[`ProfilePage Should render correctly if  1`] = `
               data={
                 Object {
                   ""aboutMyself"": ""Test"",
-                  ""educationHistory"": null,
+                  ""educationHistory"": Array [
+                    Object {
+                      ""faculty"": ""TT"",
+                      ""graduationYear"": ""2019"",
+                      ""university"": ""Test"",
+                    },
+                  ],
                   ""englishLevel"": ""a2+"",
-                  ""githubId"": ""petrov"",
-                  ""locationId"": ""1"",
-                  ""locationName"": ""Minsk"",
-                  ""name"": ""Dzmitry Petrov"",
+                  ""locationId"": 456,
+                  ""locationName"": ""Brest"",
                 }
               }
               isEditingModeEnabled={false}
@@ -305,12 +317,16 @@ exports[`ProfilePage Should render correctly if  1`] = `
               data={
                 Object {
                   ""aboutMyself"": ""Test"",
-                  ""educationHistory"": null,
+                  ""educationHistory"": Array [
+                    Object {
+                      ""faculty"": ""TT"",
+                      ""graduationYear"": ""2019"",
+                      ""university"": ""Test"",
+                    },
+                  ],
                   ""englishLevel"": ""a2+"",
-                  ""githubId"": ""petrov"",
-                  ""locationId"": ""1"",
-                  ""locationName"": ""Minsk"",
-                  ""name"": ""Dzmitry Petrov"",
+                  ""locationId"": 456,
+                  ""locationName"": ""Brest"",
                 }
               }
               isEditingModeEnabled={false}
@@ -387,15 +403,7 @@ exports[`ProfilePage Should render correctly if  1`] = `
             }
           >
             <ContactsCard
-              data={
-                Object {
-                  ""email"": ""petro@gmail.com"",
-                  ""notes"": ""discord: @petro, instagram: @petro12"",
-                  ""phone"": ""+375292123456"",
-                  ""skype"": ""petro:live"",
-                  ""telegram"": ""petro"",
-                }
-              }
+              data={Object {}}
               isEditingModeEnabled={false}
               onPermissionsSettingsChange={[Function]}
               onProfileSettingsChange={[Function]}
@@ -461,84 +469,22 @@ exports[`ProfilePage Should render correctly if  1`] = `
               }
             />
           </div>
-        </Masonry>
-        <JSXStyle
-          id=""3803498300""
-        >
-          div.jsx-3803498300{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin-left:-16px;width:auto;}
-        </JSXStyle>
-        <JSXStyle
-          id=""110195169""
-        >
-          div.jsx-110195169{padding-left:16px;background-clip:padding-box;}
-        </JSXStyle>
-      </div>
-    </Spin>
-  </LoadingScreen>
-</Fragment>
-`;
-
-exports[`ProfilePage Should render correctly if full info about profile is in the state 1`] = `
-<Fragment>
-  <LoadingScreen
-    show={true}
-  >
-    <Header
-      isProfileEditingModeEnabled={false}
-      isProfilePage={false}
-      isSaveButtonVisible={false}
-      onChangeProfilePageMode={[Function]}
-      onSaveClick={[Function]}
-      username=""mikhama""
-    />
-    <Spin
-      delay={200}
-      size=""default""
-      spinning={false}
-      wrapperClassName=""""
-    >
-      <div
-        style={
-          Object {
-            ""padding"": 10,
-          }
-        }
-      >
-        <Masonry
-          breakpointCols={
-            Object {
-              ""1100"": 3,
-              ""500"": 1,
-              ""700"": 2,
-              ""default"": 4,
-            }
-          }
-          className=""jsx-3803498300""
-          columnClassName=""jsx-110195169""
-        >
           <div
-            key=""card-0""
+            key=""card-5""
             style={
               Object {
                 ""marginBottom"": 16,
               }
             }
           >
-            <MainCard
+            <PublicFeedbackCard
               data={
-                Object {
-                  ""aboutMyself"": ""Test"",
-                  ""educationHistory"": null,
-                  ""englishLevel"": ""a2+"",
-                  ""githubId"": ""petrov"",
-                  ""locationId"": ""1"",
-                  ""locationName"": ""Minsk"",
-                  ""name"": ""Dzmitry Petrov"",
-                }
+                Array [
+                  Object {},
+                ]
               }
               isEditingModeEnabled={false}
               onPermissionsSettingsChange={[Function]}
-              onProfileSettingsChange={[Function]}
               permissionsSettings={
                 Object {
                   ""isAboutVisible"": Object {
@@ -602,28 +548,30 @@ exports[`ProfilePage Should render correctly if full info about profile is in th
             />
           </div>
           <div
-            key=""card-1""
+            key=""card-6""
             style={
               Object {
                 ""marginBottom"": 16,
               }
             }
           >
-            <AboutCard
+            <StudentStatsCard
               data={
-                Object {
-                  ""aboutMyself"": ""Test"",
-                  ""educationHistory"": null,
-                  ""englishLevel"": ""a2+"",
-                  ""githubId"": ""petrov"",
-                  ""locationId"": ""1"",
-                  ""locationName"": ""Minsk"",
-                  ""name"": ""Dzmitry Petrov"",
-                }
+                Array [
+                  Object {
+                    ""courseFullName"": ""test"",
+                    ""courseName"": ""test"",
+                    ""locationName"": ""Minsk"",
+                    ""tasks"": Array [
+                      Object {
+                        ""interviewFormAnswers"": Object {},
+                      },
+                    ],
+                  },
+                ]
               }
               isEditingModeEnabled={false}
               onPermissionsSettingsChange={[Function]}
-              onProfileSettingsChange={[Function]}
               permissionsSettings={
                 Object {
                   ""isAboutVisible"": Object {
@@ -687,28 +635,21 @@ exports[`ProfilePage Should render correctly if full info about profile is in th
             />
           </div>
           <div
-            key=""card-2""
+            key=""card-7""
             style={
               Object {
                 ""marginBottom"": 16,
               }
             }
           >
-            <EnglishCard
+            <MentorStatsCard
               data={
-                Object {
-                  ""aboutMyself"": ""Test"",
-                  ""educationHistory"": null,
-                  ""englishLevel"": ""a2+"",
-                  ""githubId"": ""petrov"",
-                  ""locationId"": ""1"",
-                  ""locationName"": ""Minsk"",
-                  ""name"": ""Dzmitry Petrov"",
-                }
+                Array [
+                  Object {},
+                ]
               }
               isEditingModeEnabled={false}
               onPermissionsSettingsChange={[Function]}
-              onProfileSettingsChange={[Function]}
               permissionsSettings={
                 Object {
                   ""isAboutVisible"": Object {
@@ -772,170 +713,44 @@ exports[`ProfilePage Should render correctly if full info about profile is in th
             />
           </div>
           <div
-            key=""card-3""
+            key=""card-8""
             style={
               Object {
                 ""marginBottom"": 16,
               }
             }
           >
-            <EducationCard
+            <CoreJSIviewsCard
               data={
-                Object {
-                  ""aboutMyself"": ""Test"",
-                  ""educationHistory"": null,
-                  ""englishLevel"": ""a2+"",
-                  ""githubId"": ""petrov"",
-                  ""locationId"": ""1"",
-                  ""locationName"": ""Minsk"",
-                  ""name"": ""Dzmitry Petrov"",
-                }
-              }
-              isEditingModeEnabled={false}
-              onPermissionsSettingsChange={[Function]}
-              onProfileSettingsChange={[Function]}
-              permissionsSettings={
-                Object {
-                  ""isAboutVisible"": Object {
-                    ""all"": false,
-                    ""mentor"": true,
-                    ""student"": false,
-                  },
-                  ""isContactsNotesVisible"": Object {
-                    ""all"": false,
-                    ""student"": true,
-                  },
-                  ""isEducationVisible"": Object {
-                    ""all"": false,
-                    ""mentor"": true,
-                    ""student"": false,
-                  },
-                  ""isEmailVisible"": Object {
-                    ""all"": false,
-                    ""student"": false,
-                  },
-                  ""isEnglishVisible"": Object {
-                    ""all"": false,
-                    ""student"": false,
-                  },
-                  ""isLinkedInVisible"": Object {
-                    ""all"": false,
-                    ""mentor"": true,
-                    ""student"": false,
-                  },
-                  ""isMentorStatsVisible"": Object {
-                    ""all"": false,
-                    ""mentor"": true,
-                    ""student"": true,
-                  },
-                  ""isPhoneVisible"": Object {
-                    ""all"": false,
-                    ""student"": false,
-                  },
-                  ""isProfileVisible"": Object {
-                    ""all"": true,
-                  },
-                  ""isPublicFeedbackVisible"": Object {
-                    ""all"": false,
-                    ""mentor"": true,
-                    ""student"": true,
-                  },
-                  ""isSkypeVisible"": Object {
-                    ""all"": false,
-                    ""student"": false,
-                  },
-                  ""isStudentStatsVisible"": Object {
-                    ""all"": false,
-                    ""student"": false,
-                  },
-                  ""isTelegramVisible"": Object {
-                    ""all"": false,
-                    ""student"": false,
-                  },
-                }
+                Array [
+                  Object {
+                    ""courseFullName"": ""test"",
+                    ""courseName"": ""test"",
+                    ""interview"": Object {
+                      ""answers"": Object {},
+                      ""comment"": undefined,
+                      ""interviewer"": undefined,
+                      ""score"": undefined,
+                    },
+                    ""locationName"": ""Minsk"",
+                  },
+                ]
               }
             />
           </div>
           <div
-            key=""card-4""
+            key=""card-9""
             style={
               Object {
                 ""marginBottom"": 16,
               }
             }
           >
-            <ContactsCard
+            <PreScreeningIviewsCard
               data={
-                Object {
-                  ""email"": ""petro@gmail.com"",
-                  ""notes"": ""discord: @petro, instagram: @petro12"",
-                  ""phone"": ""+375292123456"",
-                  ""skype"": ""petro:live"",
-                  ""telegram"": ""petro"",
-                }
-              }
-              isEditingModeEnabled={false}
-              onPermissionsSettingsChange={[Function]}
-              onProfileSettingsChange={[Function]}
-              permissionsSettings={
-                Object {
-                  ""isAboutVisible"": Object {
-                    ""all"": false,
-                    ""mentor"": true,
-                    ""student"": false,
-                  },
-                  ""isContactsNotesVisible"": Object {
-                    ""all"": false,
-                    ""student"": true,
-                  },
-                  ""isEducationVisible"": Object {
-                    ""all"": false,
-                    ""mentor"": true,
-                    ""student"": false,
-                  },
-                  ""isEmailVisible"": Object {
-                    ""all"": false,
-                    ""student"": false,
-                  },
-                  ""isEnglishVisible"": Object {
-                    ""all"": false,
-                    ""student"": false,
-                  },
-                  ""isLinkedInVisible"": Object {
-                    ""all"": false,
-                    ""mentor"": true,
-                    ""student"": false,
-                  },
-                  ""isMentorStatsVisible"": Object {
-                    ""all"": false,
-                    ""mentor"": true,
-                    ""student"": true,
-                  },
-                  ""isPhoneVisible"": Object {
-                    ""all"": false,
-                    ""student"": false,
-                  },
-                  ""isProfileVisible"": Object {
-                    ""all"": true,
-                  },
-                  ""isPublicFeedbackVisible"": Object {
-                    ""all"": false,
-                    ""mentor"": true,
-                    ""student"": true,
-                  },
-                  ""isSkypeVisible"": Object {
-                    ""all"": false,
-                    ""student"": false,
-                  },
-                  ""isStudentStatsVisible"": Object {
-                    ""all"": false,
-                    ""student"": false,
-                  },
-                  ""isTelegramVisible"": Object {
-                    ""all"": false,
-                    ""student"": false,
-                  },
-                }
+                Array [
+                  Object {},
+                ]
               }
             />
           </div>
",1,"[""11ffd5174bd61a2939ae58d2b2d43284302ae490""]","[""test""]","1. The commit adds and updates test logic for the ProfilePage component, including new and expanded Jest/Enzyme test cases, and updates related snapshot files to reflect changes in test structure and expected outputs.
2. These changes are entirely within test files and snapshot files, focusing on verifying component methods and rendering, which directly aligns with the 'test' object label definition for modifications dedicated to testing logic.
3. The 'test' label is appropriate because the modifications are exclusively for test artifacts; no production code logic, documentation, build, or CI/CD configuration files are affected, and the intent is not to fix a bug or refactor but to expand test coverage.
4. The 'test' label correctly represents that this commit is solely concerned with adding and updating test logic and related snapshots for the ProfilePage component."
"build improvements
reintroduce timeout for assertion

The timeout had been removed by a previous commit. Without the timeout the test might be flaky.
Also removed obsolete code","diff --git a/.travis.yml b/.travis.yml
index 9e1b926..3144244 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,5 +1,6 @@
 language: node_js
 dist: trusty
+sudo: required
 node_js:
   - '6.9.5'
 before_install:
diff --git a/e2e/schematics/command-line.test.ts b/e2e/schematics/command-line.test.ts
index 16d8b34..ea91494 100644
--- a/e2e/schematics/command-line.test.ts
+++ b/e2e/schematics/command-line.test.ts
@@ -68,8 +68,6 @@ describe('Command line', () => {
 
       updateFile('apps/myapp/src/app/app.component.spec.ts', `import '@nrwl/mylib';`);
 
-      updateRunAffectedToWorkInE2ESetup();
-
       const affectedApps = runCommand('npm run affected:apps -- --files=""libs/mylib/index.ts""');
       expect(affectedApps).toContain('myapp');
       expect(affectedApps).not.toContain('myapp2');
@@ -147,11 +145,3 @@ describe('Command line', () => {
     1000000
   );
 });
-
-function updateRunAffectedToWorkInE2ESetup() {
-  const runAffected = readFile('node_modules/@nrwl/schematics/src/command-line/affected.js');
-  const newRunAffected = runAffected
-    .replace('ng build', '../../node_modules/.bin/ng build')
-    .replace('ng e2e', '../../node_modules/.bin/ng e2e');
-  updateFile('node_modules/@nrwl/schematics/src/command-line/affected.js', newRunAffected);
-}
diff --git a/e2e/schematics/workspace.test.ts b/e2e/schematics/workspace.test.ts
index 8a41070..8749926 100644
--- a/e2e/schematics/workspace.test.ts
+++ b/e2e/schematics/workspace.test.ts
@@ -82,7 +82,7 @@ describe('Nrwl Convert to Nx Workspace', () => {
 
   it('should generate a workspace and not change dependencies or devDependencies if they already exist', () => {
     // create a new AngularCLI app
-    runNgNew('--skip-install');
+    runNgNew();
     const nxVersion = '0.0.0';
     const schematicsVersion = '0.0.0';
     const ngrxVersion = '0.0.0';
diff --git a/e2e/utils.ts b/e2e/utils.ts
index 422d866..a03104f 100644
--- a/e2e/utils.ts
+++ b/e2e/utils.ts
@@ -17,8 +17,7 @@ export function newProject(): void {
     copyMissingPackages();
     execSync('mv ./tmp/proj ./tmp/proj_backup');
   }
-  execSync('cp -r ./tmp/proj_backup ./tmp/proj');
-  setUpSynLink();
+  execSync('cp -a ./tmp/proj_backup ./tmp/proj');
 }
 
 export function copyMissingPackages(): void {
@@ -26,14 +25,9 @@ export function copyMissingPackages(): void {
   modulesToCopy.forEach(m => copyNodeModule(projectName, m));
 }
 
-export function setUpSynLink(): void {
-  execSync(`ln -s ../@nrwl/schematics/src/command-line/nx.js tmp/${projectName}/node_modules/.bin/nx`);
-  execSync(`chmod +x tmp/${projectName}/node_modules/.bin/nx`);
-}
-
 function copyNodeModule(path: string, name: string) {
   execSync(`rm -rf tmp/${path}/node_modules/${name}`);
-  execSync(`cp -r node_modules/${name} tmp/${path}/node_modules/${name}`);
+  execSync(`cp -a node_modules/${name} tmp/${path}/node_modules/${name}`);
 }
 
 export function runCLI(
@@ -43,7 +37,7 @@ export function runCLI(
   }
 ): string {
   try {
-    return execSync(`../../node_modules/.bin/ng ${command}`, {
+    return execSync(`./node_modules/.bin/ng ${command}`, {
       cwd: `./tmp/${projectName}`
     })
       .toString()
@@ -67,7 +61,7 @@ export function newLib(name: string): string {
 }
 
 export function runSchematic(command: string): string {
-  return execSync(`../../node_modules/.bin/schematics ${command}`, {
+  return execSync(`./node_modules/.bin/schematics ${command}`, {
     cwd: `./tmp/${projectName}`
   }).toString();
 }
diff --git a/package.json b/package.json
index bef54f8..9186a58 100644
--- a/package.json
+++ b/package.json
@@ -6,7 +6,7 @@
   ""private"": true,
   ""scripts"": {
     ""build"": ""./scripts/build.sh"",
-    ""e2e"": ""yarn build && ./scripts/e2e.sh"",
+    ""e2e"": ""./scripts/e2e.sh"",
     ""format"": ""./scripts/format.sh"",
     ""linknpm"": ""./scripts/link.sh"",
     ""package"": ""./scripts/package.sh"",
@@ -14,7 +14,7 @@
     ""copy"": ""./scripts/copy.sh"",
     ""test:schematics"": ""yarn build && ./scripts/test_schematics.sh"",
     ""test:nx"": ""yarn build && ./scripts/test_nx.sh"",
-    ""test"": ""yarn build && ./scripts/test_nx.sh && ./scripts/test_schematics.sh"",
+    ""test"": ""yarn linknpm && ./scripts/test_nx.sh && ./scripts/test_schematics.sh"",
     ""checkformat"": ""./scripts/check-format.sh"",
     ""publish_npm"": ""./scripts/publish.sh""
   },
diff --git a/packages/schematics/src/collection/workspace/index.ts b/packages/schematics/src/collection/workspace/index.ts
index 8f8897f..c70d161 100644
--- a/packages/schematics/src/collection/workspace/index.ts
+++ b/packages/schematics/src/collection/workspace/index.ts
@@ -254,20 +254,7 @@ function moveFiles(options: Schema) {
 
 function copyAngularCliTgz() {
   return (host: Tree) => {
-    copyFile(
-      path.join(
-        'node_modules',
-        '@nrwl',
-        'schematics',
-        'src',
-        'collection',
-        'application',
-        'files',
-        '__directory__',
-        '.angular_cli.tgz'
-      ),
-      '.'
-    );
+    copyFile(path.join(__dirname, '..', 'application', 'files', '__directory__', '.angular_cli.tgz'), '.');
     return host;
   };
 }
diff --git a/packages/schematics/src/command-line/affected.ts b/packages/schematics/src/command-line/affected.ts
index b7f9173..89a4f72 100644
--- a/packages/schematics/src/command-line/affected.ts
+++ b/packages/schematics/src/command-line/affected.ts
@@ -1,5 +1,7 @@
 import { execSync } from 'child_process';
 import { getAffectedApps, parseFiles } from './shared';
+import * as path from 'path';
+import * as resolve from 'resolve';
 
 export function affected(args: string[]): void {
   const command = args[0];
@@ -39,7 +41,7 @@ function build(apps: string[], rest: string[]) {
   if (apps.length > 0) {
     console.log(`Building ${apps.join(', ')}`);
     apps.forEach(app => {
-      execSync(`ng build ${rest.join(' ')} -a=${app}`, { stdio: [0, 1, 2] });
+      execSync(`${ngPath()} build ${rest.join(' ')} -a=${app}`, { stdio: [0, 1, 2] });
     });
   } else {
     console.log('No apps to build');
@@ -50,9 +52,13 @@ function e2e(apps: string[], rest: string[]) {
   if (apps.length > 0) {
     console.log(`Testing ${apps.join(', ')}`);
     apps.forEach(app => {
-      execSync(`ng e2e ${rest.join(' ')} -a=${app}`, { stdio: [0, 1, 2] });
+      execSync(`${ngPath()} e2e ${rest.join(' ')} -a=${app}`, { stdio: [0, 1, 2] });
     });
   } else {
-    console.log('No apps to tst');
+    console.log('No apps to test');
   }
 }
+
+function ngPath() {
+  return `${path.dirname(path.dirname(path.dirname(resolve.sync('@angular/cli', { basedir: __dirname }))))}/bin/ng`;
+}
diff --git a/scripts/build.sh b/scripts/build.sh
index ac533b5..9b8891b 100755
--- a/scripts/build.sh
+++ b/scripts/build.sh
@@ -3,6 +3,8 @@
 rm -rf build
 ngc
 rsync -a --exclude=*.ts packages/ build/packages
+chmod +x build/packages/schematics/bin/create-nx-workspace.js
+chmod +x build/packages/schematics/src/command-line/nx.js
 rm -rf build/packages/install
 cp README.md build/packages/schematics
 cp README.md build/packages/nx
\ No newline at end of file

diff --git a/engine/src/test/java/io/camunda/zeebe/engine/processing/streamprocessor/StreamProcessorReplayModeTest.java b/engine/src/test/java/io/camunda/zeebe/engine/processing/streamprocessor/StreamProcessorReplayModeTest.java
index d0ee4f3..c2ab83c 100644
--- a/engine/src/test/java/io/camunda/zeebe/engine/processing/streamprocessor/StreamProcessorReplayModeTest.java
+++ b/engine/src/test/java/io/camunda/zeebe/engine/processing/streamprocessor/StreamProcessorReplayModeTest.java
@@ -13,6 +13,7 @@ import static io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent.ACTI
 import static io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent.ELEMENT_ACTIVATING;
 import static java.util.function.Predicate.isEqual;
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.awaitility.Awaitility.await;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.ArgumentMatchers.anyLong;
 import static org.mockito.ArgumentMatchers.eq;
@@ -30,7 +31,6 @@ import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;
 import io.camunda.zeebe.streamprocessor.StreamProcessor;
 import io.camunda.zeebe.streamprocessor.StreamProcessor.Phase;
 import io.camunda.zeebe.streamprocessor.StreamProcessorMode;
-import org.awaitility.Awaitility;
 import org.junit.Rule;
 import org.junit.Test;
 import org.mockito.InOrder;
@@ -71,7 +71,7 @@ public final class StreamProcessorReplayModeTest {
     // when
     startStreamProcessor(replayUntilEnd);
 
-    Awaitility.await()
+    await()
         .untilAsserted(
             () -> assertThat(getCurrentPhase(replayUntilEnd)).isEqualTo(Phase.PROCESSING));
 
@@ -163,7 +163,7 @@ public final class StreamProcessorReplayModeTest {
         command().processInstance(ACTIVATE_ELEMENT, RECORD),
         event().processInstance(ELEMENT_ACTIVATING, RECORD).causedBy(0));
 
-    Awaitility.await(""should have replayed first events"")
+    await(""should have replayed first events"")
         .until(replayContinuously::getLastSuccessfulProcessedRecordPosition, (pos) -> pos > 0);
 
     // when
@@ -210,7 +210,7 @@ public final class StreamProcessorReplayModeTest {
         command().processInstance(ACTIVATE_ELEMENT, RECORD),
         event().processInstance(ELEMENT_ACTIVATING, RECORD).causedBy(0));
 
-    Awaitility.await(""should have replayed first events"")
+    await(""should have replayed first events"")
         .until(replayContinuously::getLastSuccessfulProcessedRecordPosition, (pos) -> pos > 0);
     streamProcessor.pauseProcessing().join();
     replayContinuously.writeBatch(
@@ -244,7 +244,7 @@ public final class StreamProcessorReplayModeTest {
     // then
     verify(eventApplier, TIMEOUT).applyState(anyLong(), eq(ELEMENT_ACTIVATING), any());
 
-    Awaitility.await()
+    await()
         .untilAsserted(
             () -> {
               final var lastProcessedPosition = getLastProcessedPosition(replayContinuously);
@@ -273,8 +273,7 @@ public final class StreamProcessorReplayModeTest {
 
     verify(eventApplier, TIMEOUT).applyState(anyLong(), eq(ELEMENT_ACTIVATING), any());
 
-    Awaitility.await()
-        .until(() -> getLastProcessedPosition(replayContinuously), isEqual(commandPosition));
+    await().until(() -> getLastProcessedPosition(replayContinuously), isEqual(commandPosition));
 
     // then
     assertThat(replayContinuously.getLastSuccessfulProcessedRecordPosition())
@@ -285,7 +284,6 @@ public final class StreamProcessorReplayModeTest {
   @Test
   public void shouldNotSetLastProcessedPositionIfLessThanSnapshotPosition() {
     // given
-    final var commandPositionBeforeSnapshot = 1L;
     final var snapshotPosition = 2L;
 
     startStreamProcessor(replayContinuously);
@@ -298,23 +296,20 @@ public final class StreamProcessorReplayModeTest {
     // when
     startStreamProcessor(replayContinuously);
 
-    Awaitility.await()
+    await()
         .untilAsserted(
             () -> assertThat(getCurrentPhase(replayContinuously)).isEqualTo(Phase.REPLAY));
 
-    final var eventPosition =
-        replayContinuously.writeEvent(
-            ELEMENT_ACTIVATING,
-            RECORD,
-            writer -> writer.sourceRecordPosition(commandPositionBeforeSnapshot));
-
     // then
     final var lastProcessedPositionState = replayContinuously.getLastProcessedPositionState();
 
-    assertThat(lastProcessedPositionState.getLastSuccessfulProcessedRecordPosition())
-        .describedAs(
-            ""Expected that the last processed position is not less than the snapshot position"")
-        .isEqualTo(snapshotPosition);
+    await()
+        .untilAsserted(
+            () ->
+                assertThat(lastProcessedPositionState.getLastSuccessfulProcessedRecordPosition())
+                    .describedAs(
+                        ""Expected that the last processed position is not less than the snapshot position"")
+                    .isEqualTo(snapshotPosition));
   }
 
   private StreamProcessor startStreamProcessor(final StreamProcessorRule streamProcessorRule) {
",2,"[""e0a977b2d316e7612b5d72cb02cd7d78e75dbc55"", ""0d23f1b3ed22e615b9611bb4eae01d2241e64dff""]","[""build"", ""refactor""]","1. The commit modifies the CI configuration file (.travis.yml), build scripts (scripts/build.sh), package.json scripts, source code (packages/schematics/src/collection/workspace/index.ts, packages/schematics/src/command-line/affected.ts), test utilities (e2e/utils.ts), and a Java test file (StreamProcessorReplayModeTest.java), including reintroducing a timeout in a test and removing obsolete code.
2. The changes to .travis.yml, scripts/build.sh, and package.json scripts are related to build and CI/CD configuration, while the test file changes (StreamProcessorReplayModeTest.java) reintroduce a timeout for stability and remove unused code, aligning with 'refactor' for code cleanup and non-functional improvement.
3. The 'build' label is appropriate only for changes strictly affecting build configuration or scripts, while 'refactor' fits for codebase improvements that do not alter external behavior; however, the test file changes are better classified as 'test' or 'refactor' depending on whether they add new tests or just improve existing ones, but here the main motivation is to stabilize tests and remove obsolete code, fitting 'refactor'.
4. The assigned labels 'build' and 'refactor' are appropriate as the commit includes both build-system adjustments and non-behavioral code restructuring, excluding labels like 'feat', 'fix', or 'test' because no new features, bug fixes, or new tests are added."
"fix monorepo.dir prop

Signed-off-by: Carlos Alexandro Becker <caarlos0@gmail.com>
tests","diff --git a/www/docs/customization/monorepo.md b/www/docs/customization/monorepo.md
index 6d0e857..e45490f 100644
--- a/www/docs/customization/monorepo.md
+++ b/www/docs/customization/monorepo.md
@@ -18,7 +18,7 @@ project_name: subproj1
 
 monorepo:
   tag_prefix: subproject1/
-  folder: subproj1
+  dir: subproj1
 ```
 
 Then, you can release with (from the project's root directory):
@@ -30,11 +30,11 @@ goreleaser release --rm-dist -f ./subproj1/.goreleaser.yml
 Then, the following is different from a ""regular"" run:
 
 - GoReleaser will then look if current commit has a tag prefixed with `subproject1`, and also the previous tag with the same prefix;
-- Changelog will include only commits that contain changes to files within the `subproj1` folder;
+- Changelog will include only commits that contain changes to files within the `subproj1` directory;
 - Release name gets prefixed with `{{ .ProjectName }} ` if empty;
-- All build's `dir` setting get set to `monorepo.folder` if empty;
+- All build's `dir` setting get set to `monorepo.dir` if empty;
   - if yours is not, you might want to change that manually;
-- Extra files on the release, archives, Docker builds, etc are prefixed with `monorepo.folder`;
+- Extra files on the release, archives, Docker builds, etc are prefixed with `monorepo.dir`;
 - On templates, `{{.PrefixedTag}}` will be `monorepo.prefix/tag` (aka the actual tag name), and `{{.Tag}}` has the prefix stripped;
 
 The rest of the release process should work as usual.

diff --git a/client/src/components/Profile/__test__/EducationCard.test.tsx b/client/src/components/Profile/__test__/EducationCard.test.tsx
index 44b6e00..14539dd 100644
--- a/client/src/components/Profile/__test__/EducationCard.test.tsx
+++ b/client/src/components/Profile/__test__/EducationCard.test.tsx
@@ -53,7 +53,7 @@ describe('EducationCard', () => {
   });
 
   describe('filterPermissions', () => {
-    it('should left only contacts in ""permissionsSettings"" object', () => {
+    it('should left only ""isEducationVisible"" in ""permissionsSettings"" object', () => {
       const permissionsSettings = {
         isProfileVisible: { all: true },
         isAboutVisible: { all: true, mentor: true, student: true },
diff --git a/client/src/components/Profile/__test__/MainCard.test.tsx b/client/src/components/Profile/__test__/MainCard.test.tsx
index 8fb2840..552804b 100644
--- a/client/src/components/Profile/__test__/MainCard.test.tsx
+++ b/client/src/components/Profile/__test__/MainCard.test.tsx
@@ -3,6 +3,8 @@ import { shallow } from 'enzyme';
 import { shallowToJson } from 'enzyme-to-json';
 import MainCard from '../MainCard';
 
+// TODO: Known Issue: https://stackoverflow.com/questions/59942808/how-can-i-use-jest-coverage-in-next-js-styled-jsx
+
 describe('MainCard', () => {
   describe('Should render correctly', () => {
     it('if is editing mode disabled', () => {
@@ -21,49 +23,89 @@ describe('MainCard', () => {
       );
       expect(shallowToJson(output)).toMatchSnapshot();
     });
+    it('if is editing mode enabled', () => {
+      const output = shallow(
+        <MainCard
+          data={{
+            name: 'Petr Pervyi',
+            githubId: 'piter',
+            locationName: 'SPB',
+            locationId: '1',
+          }}
+          isEditingModeEnabled={true}
+          onPermissionsSettingsChange={() => {}}
+          onProfileSettingsChange={() => {}}
+        />,
+      );
+      expect(shallowToJson(output)).toMatchSnapshot();
+    });
   });
 
-  // const wrapper = shallow(
-  //   <MainCard
-  //     data={{
-  //       name: 'Petr Pervyi',
-  //       githubId: 'piter',
-  //       locationName: 'SPB',
-  //       locationId: '1',
-  //     }}
-  //     isEditingModeEnabled={false}
-  //     onPermissionsSettingsChange={() => {}}
-  //     onProfileSettingsChange={() => {}}
-  //   />);
-  // const instance = wrapper.instance();
-  // describe('showVisibilitySettings', () => {
-  //   it('should set ""state.isVisibilitySettingsVisible"" as ""true""', () => {
-  //     expect(instance.state.isVisibilitySettingsVisible).toBe(false);
-  //     instance.showVisibilitySettings();
-  //     expect(instance.state.isVisibilitySettingsVisible).toBe(true);
-  //   });
-  // });
-  // describe('hideVisibilitySettings', () => {
-  //   it('should set ""state.isVisibilitySettingsVisible"" as ""false""', () => {
-  //     instance.state.isVisibilitySettingsVisible = true;
-  //     expect(instance.state.isVisibilitySettingsVisible).toBe(true);
-  //     instance.hideVisibilitySettings();
-  //     expect(instance.state.isVisibilitySettingsVisible).toBe(false);
-  //   });
-  // });
-  // describe('showProfileSettings', () => {
-  //   it('should set ""state.isProfileSettingsVisible"" as ""true""', () => {
-  //     expect(instance.state.isProfileSettingsVisible).toBe(false);
-  //     instance.showProfileSettings();
-  //     expect(instance.state.isProfileSettingsVisible).toBe(true);
-  //   });
-  // });
-  // describe('hideProfileSettings', () => {
-  //   it('should set ""state.isProfileSettingsVisible"" as ""false""', () => {
-  //     instance.state.isProfileSettingsVisible = true;
-  //     expect(instance.state.isProfileSettingsVisible).toBe(true);
-  //     instance.hideProfileSettings();
-  //     expect(instance.state.isProfileSettingsVisible).toBe(false);
-  //   });
-  // });
+  const wrapper = shallow(
+    <MainCard
+      data={{
+        name: 'Petr Pervyi',
+        githubId: 'piter',
+        locationName: 'SPB',
+        locationId: '1',
+      }}
+      isEditingModeEnabled={false}
+      onPermissionsSettingsChange={() => {}}
+      onProfileSettingsChange={() => {}}
+    />);
+  const instance = wrapper.instance();
+  describe('showVisibilitySettings', () => {
+    it('should set ""state.isVisibilitySettingsVisible"" as ""true""', () => {
+      expect(instance.state.isVisibilitySettingsVisible).toBe(false);
+      instance.showVisibilitySettings();
+      expect(instance.state.isVisibilitySettingsVisible).toBe(true);
+    });
+  });
+  describe('hideVisibilitySettings', () => {
+    it('should set ""state.isVisibilitySettingsVisible"" as ""false""', () => {
+      instance.state.isVisibilitySettingsVisible = true;
+      expect(instance.state.isVisibilitySettingsVisible).toBe(true);
+      instance.hideVisibilitySettings();
+      expect(instance.state.isVisibilitySettingsVisible).toBe(false);
+    });
+  });
+  describe('showProfileSettings', () => {
+    it('should set ""state.isProfileSettingsVisible"" as ""true""', () => {
+      expect(instance.state.isProfileSettingsVisible).toBe(false);
+      instance.showProfileSettings();
+      expect(instance.state.isProfileSettingsVisible).toBe(true);
+    });
+  });
+  describe('hideProfileSettings', () => {
+    it('should set ""state.isProfileSettingsVisible"" as ""false""', () => {
+      instance.state.isProfileSettingsVisible = true;
+      expect(instance.state.isProfileSettingsVisible).toBe(true);
+      instance.hideProfileSettings();
+      expect(instance.state.isProfileSettingsVisible).toBe(false);
+    });
+  });
+  describe('filterPermissions', () => {
+    it('should left only ""isProfileVisible"" in ""permissionsSettings"" object', () => {
+      const permissionsSettings = {
+        isProfileVisible: { all: true },
+        isAboutVisible: { all: true, mentor: true, student: true },
+        isEducationVisible: { all: true, mentor: true, student: true },
+        isEnglishVisible: { all: false, student: false },
+        isEmailVisible: { all: true, student: true },
+        isTelegramVisible: { all: false, student: false },
+        isSkypeVisible: { all: true, student: true },
+        isPhoneVisible: { all: false, student: false },
+        isContactsNotesVisible: { all: true, student: true },
+        isLinkedInVisible: { all: false, mentor: false, student: false },
+        isPublicFeedbackVisible: { all: true, mentor: true, student: true },
+        isMentorStatsVisible: { all: true, mentor: true, student: true },
+        isStudentStatsVisible: { all: true, student: true },
+      };
+      const instance = wrapper.instance();
+      const result = instance.filterPermissions(permissionsSettings);
+      expect(result).toEqual({
+        isProfileVisible: { all: true },
+      });
+    });
+  });
 });
diff --git a/client/src/components/Profile/__test__/__snapshots__/MainCard.test.tsx.snap b/client/src/components/Profile/__test__/__snapshots__/MainCard.test.tsx.snap
index 40331eb..fef20dd 100644
--- a/client/src/components/Profile/__test__/__snapshots__/MainCard.test.tsx.snap
+++ b/client/src/components/Profile/__test__/__snapshots__/MainCard.test.tsx.snap
@@ -71,3 +71,158 @@ exports[`MainCard Should render correctly if is editing mode disabled 1`] = `
   </Card>
 </Fragment>
 `;
+
+exports[`MainCard Should render correctly if is editing mode enabled 1`] = `
+<Fragment>
+  <Card
+    actions={
+      Array [
+        <ForwardRef(EditOutlined)
+          onClick={[Function]}
+        />,
+        <ForwardRef(SettingOutlined)
+          onClick={[Function]}
+        />,
+      ]
+    }
+  >
+    <GithubAvatar
+      githubId=""piter""
+      size={96}
+      style={
+        Object {
+          ""display"": ""block"",
+          ""margin"": ""0 auto 10px"",
+        }
+      }
+    />
+    <Title
+      level={1}
+      style={
+        Object {
+          ""fontSize"": 24,
+          ""margin"": 0,
+          ""textAlign"": ""center"",
+        }
+      }
+    >
+      Petr Pervyi
+    </Title>
+    <Paragraph
+      style={
+        Object {
+          ""marginBottom"": 20,
+          ""textAlign"": ""center"",
+        }
+      }
+    >
+      <a
+        href=""https://github.com/piter""
+        style={
+          Object {
+            ""fontSize"": 16,
+            ""marginLeft"": ""-14px"",
+          }
+        }
+        target=""_blank""
+      >
+        <ForwardRef(GithubFilled) />
+         
+        piter
+      </a>
+    </Paragraph>
+    <Paragraph
+      style={
+        Object {
+          ""margin"": 0,
+          ""textAlign"": ""center"",
+        }
+      }
+    >
+      <span
+        style={
+          Object {
+            ""marginLeft"": ""-14px"",
+          }
+        }
+      >
+        <ForwardRef(EnvironmentFilled) />
+         
+        SPB
+      </span>
+    </Paragraph>
+    <PermissionsSettingsDrawer
+      hideSettings={[Function]}
+      isSettingsVisible={false}
+      onPermissionsSettingsChange={[Function]}
+    />
+    <ProfileSettingsDrawer
+      content={
+        <div>
+          <p
+            style={
+              Object {
+                ""fontSize"": 18,
+                ""marginBottom"": 5,
+              }
+            }
+          >
+            <Text
+              strong={true}
+            >
+              Name:
+            </Text>
+          </p>
+          <p
+            style={
+              Object {
+                ""marginBottom"": 20,
+              }
+            }
+          >
+            <Input
+              onChange={[Function]}
+              placeholder=""Firstname Lastname""
+              type=""text""
+              value=""Petr Pervyi""
+            />
+          </p>
+          <p
+            style={
+              Object {
+                ""fontSize"": 18,
+                ""marginBottom"": 5,
+              }
+            }
+          >
+            <Text
+              strong={true}
+            >
+              Location:
+            </Text>
+          </p>
+          <div
+            style={
+              Object {
+                ""marginBottom"": 5,
+              }
+            }
+          >
+            <LocationSelect
+              defaultValue=""1""
+              onChange={[Function]}
+              style={
+                Object {
+                  ""width"": ""100%"",
+                }
+              }
+            />
+          </div>
+        </div>
+      }
+      hideSettings={[Function]}
+      isSettingsVisible={false}
+    />
+  </Card>
+</Fragment>
+`;
diff --git a/client/src/jest.config.js b/client/src/jest.config.js
index df39788..654f9f3 100644
--- a/client/src/jest.config.js
+++ b/client/src/jest.config.js
@@ -7,4 +7,5 @@ module.exports = {
     '^services(.*)$': '<rootDir>/services/$1',
     '^utils(.*)$': '<rootDir>/utils/$1',
   },
+  verbose: true,
 };
",2,"[""9ed3c0c4a72af977fc9150512fb6538f20a94b22"", ""f87659953e9af59bc7cb314a22dd076d988ef607""]","[""docs"", ""test""]","1. The code changes include documentation corrections in 'monorepo.md', updates to test descriptions and logic in 'EducationCard.test.tsx' and 'MainCard.test.tsx', the addition of new test cases and snapshot updates, and a configuration change in 'jest.config.js' to enable verbose output.
2. The documentation file changes align with the 'docs' label as they correct and clarify usage instructions and terminology, while all modifications within test files and snapshots, as well as the test config update, align with the 'test' label because they either improve, add, or configure tests.
3. 'docs' is appropriate for the markdown documentation change because it exclusively affects user-facing documentation, not core logic, and 'test' is correct for the test file and jest config changes since they are fully scoped to the testing infrastructure and logic; neither 'fix', 'feat', nor 'refactor' are suitable because no application logic or features are being directly changed.
4. The 'docs' and 'test' labels are appropriate because the commit is fully comprised of documentation and test-related changes, each mapped directly to their respective artifact categories."
"do not pin time in tests but only skip ahead

related to #573","diff --git a/qa/integration-tests/src/test/java/io/zeebe/broker/it/startup/BrokerRecoveryTest.java b/qa/integration-tests/src/test/java/io/zeebe/broker/it/startup/BrokerRecoveryTest.java
index 636cd21..76afff7 100644
--- a/qa/integration-tests/src/test/java/io/zeebe/broker/it/startup/BrokerRecoveryTest.java
+++ b/qa/integration-tests/src/test/java/io/zeebe/broker/it/startup/BrokerRecoveryTest.java
@@ -15,7 +15,9 @@
  */
 package io.zeebe.broker.it.startup;
 
-import static io.zeebe.broker.it.util.TopicEventRecorder.*;
+import static io.zeebe.broker.it.util.TopicEventRecorder.incidentEvent;
+import static io.zeebe.broker.it.util.TopicEventRecorder.taskEvent;
+import static io.zeebe.broker.it.util.TopicEventRecorder.wfInstanceEvent;
 import static io.zeebe.test.util.TestUtil.doRepeatedly;
 import static io.zeebe.test.util.TestUtil.waitUntil;
 import static org.assertj.core.api.Assertions.assertThat;
@@ -24,11 +26,18 @@ import java.io.File;
 import java.io.InputStream;
 import java.nio.charset.StandardCharsets;
 import java.time.Duration;
-import java.time.Instant;
 import java.util.Collections;
 import java.util.List;
 import java.util.regex.Pattern;
 
+import org.assertj.core.util.Files;
+import org.junit.After;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.ExpectedException;
+import org.junit.rules.RuleChain;
+import org.junit.rules.TemporaryFolder;
+
 import io.zeebe.broker.clustering.ClusterServiceNames;
 import io.zeebe.broker.it.ClientRule;
 import io.zeebe.broker.it.EmbeddedBrokerRule;
@@ -38,7 +47,9 @@ import io.zeebe.client.ZeebeClient;
 import io.zeebe.client.clustering.impl.TopicLeader;
 import io.zeebe.client.clustering.impl.TopologyResponse;
 import io.zeebe.client.cmd.ClientCommandRejectedException;
-import io.zeebe.client.event.*;
+import io.zeebe.client.event.DeploymentEvent;
+import io.zeebe.client.event.TaskEvent;
+import io.zeebe.client.event.WorkflowInstanceEvent;
 import io.zeebe.model.bpmn.Bpmn;
 import io.zeebe.model.bpmn.instance.WorkflowDefinition;
 import io.zeebe.raft.Raft;
@@ -48,9 +59,6 @@ import io.zeebe.test.util.TestFileUtil;
 import io.zeebe.test.util.TestUtil;
 import io.zeebe.transport.SocketAddress;
 import io.zeebe.util.time.ClockUtil;
-import org.assertj.core.util.Files;
-import org.junit.*;
-import org.junit.rules.*;
 
 public class BrokerRecoveryTest
 {
@@ -360,17 +368,12 @@ public class BrokerRecoveryTest
         waitUntil(() -> !recordingTaskHandler.getHandledTasks().isEmpty());
 
         // when
-        restartBroker(() ->
-        {
-            final Instant now = ClockUtil.getCurrentTime();
-            ClockUtil.setCurrentTime(now.plusSeconds(60));
-        });
+        restartBroker(() -> ClockUtil.addTime(Duration.ofSeconds(60)));
 
         // wait until stream processor and scheduler process the lock task event which is not re-processed on recovery
         doRepeatedly(() ->
         {
-            final Instant now = ClockUtil.getCurrentTime();
-            ClockUtil.setCurrentTime(now.plusSeconds(60));
+            ClockUtil.addTime(Duration.ofSeconds(60)); // retriggers lock expiration check in broker
             return null;
         }).until(t -> eventRecorder.hasTaskEvent(taskEvent(""LOCK_EXPIRED"")));
 
diff --git a/qa/integration-tests/src/test/java/io/zeebe/broker/it/startup/BrokerRestartTest.java b/qa/integration-tests/src/test/java/io/zeebe/broker/it/startup/BrokerRestartTest.java
index 5ff1301..0ffe98d 100644
--- a/qa/integration-tests/src/test/java/io/zeebe/broker/it/startup/BrokerRestartTest.java
+++ b/qa/integration-tests/src/test/java/io/zeebe/broker/it/startup/BrokerRestartTest.java
@@ -15,7 +15,9 @@
  */
 package io.zeebe.broker.it.startup;
 
-import static io.zeebe.broker.it.util.TopicEventRecorder.*;
+import static io.zeebe.broker.it.util.TopicEventRecorder.incidentEvent;
+import static io.zeebe.broker.it.util.TopicEventRecorder.taskEvent;
+import static io.zeebe.broker.it.util.TopicEventRecorder.wfInstanceEvent;
 import static io.zeebe.test.util.TestUtil.waitUntil;
 import static org.assertj.core.api.Assertions.assertThat;
 
@@ -23,11 +25,18 @@ import java.io.File;
 import java.io.InputStream;
 import java.nio.charset.StandardCharsets;
 import java.time.Duration;
-import java.time.Instant;
 import java.util.Collections;
 import java.util.List;
 import java.util.regex.Pattern;
 
+import org.junit.After;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.experimental.categories.Category;
+import org.junit.rules.ExpectedException;
+import org.junit.rules.RuleChain;
+import org.junit.rules.TemporaryFolder;
+
 import io.zeebe.broker.clustering.ClusterServiceNames;
 import io.zeebe.broker.it.ClientRule;
 import io.zeebe.broker.it.EmbeddedBrokerRule;
@@ -37,7 +46,9 @@ import io.zeebe.client.ZeebeClient;
 import io.zeebe.client.clustering.impl.TopicLeader;
 import io.zeebe.client.clustering.impl.TopologyResponse;
 import io.zeebe.client.cmd.ClientCommandRejectedException;
-import io.zeebe.client.event.*;
+import io.zeebe.client.event.DeploymentEvent;
+import io.zeebe.client.event.TaskEvent;
+import io.zeebe.client.event.WorkflowInstanceEvent;
 import io.zeebe.model.bpmn.Bpmn;
 import io.zeebe.model.bpmn.instance.WorkflowDefinition;
 import io.zeebe.raft.Raft;
@@ -47,9 +58,6 @@ import io.zeebe.test.util.TestFileUtil;
 import io.zeebe.test.util.TestUtil;
 import io.zeebe.transport.SocketAddress;
 import io.zeebe.util.time.ClockUtil;
-import org.junit.*;
-import org.junit.experimental.categories.Category;
-import org.junit.rules.*;
 
 public class BrokerRestartTest
 {
@@ -360,11 +368,7 @@ public class BrokerRestartTest
         waitUntil(() -> !recordingTaskHandler.getHandledTasks().isEmpty());
 
         // when
-        restartBroker(() ->
-        {
-            final Instant now = ClockUtil.getCurrentTime();
-            ClockUtil.setCurrentTime(now.plusSeconds(60));
-        });
+        restartBroker(() -> ClockUtil.addTime(Duration.ofSeconds(60)));
 
         waitUntil(() -> eventRecorder.hasTaskEvent(taskEvent(""LOCK_EXPIRED"")));
         recordingTaskHandler.clear();
diff --git a/qa/integration-tests/src/test/java/io/zeebe/broker/it/task/TaskSubscriptionTest.java b/qa/integration-tests/src/test/java/io/zeebe/broker/it/task/TaskSubscriptionTest.java
index 49b527d..a322fbe 100644
--- a/qa/integration-tests/src/test/java/io/zeebe/broker/it/task/TaskSubscriptionTest.java
+++ b/qa/integration-tests/src/test/java/io/zeebe/broker/it/task/TaskSubscriptionTest.java
@@ -353,7 +353,7 @@ public class TaskSubscriptionTest
         waitUntil(() -> taskHandler.getHandledTasks().size() == 1);
 
         // when
-        ClockUtil.setCurrentTime(Instant.now().plus(Duration.ofMinutes(5)));
+        ClockUtil.addTime(Duration.ofMinutes(5));
 
         // then
         waitUntil(() -> taskHandler.getHandledTasks().size() == 2);
",1,"[""7ece3a9a16780dc6c633bbd903d36ce0aefd6a8a""]","[""test""]","1. The code changes update test logic in three integration test files to use ClockUtil.addTime instead of setting the current time directly, thereby changing how time is manipulated within the tests.
2. These changes are exclusively within test files and alter only the way time is advanced during test execution, which aligns with the 'test' label as the modifications are scoped to testing logic.
3. The 'test' label is appropriate because the changes do not introduce new features, fix bugs in production code, or restructure core code logic; they only affect test behavior and do not touch documentation, CI/CD, or build artifacts.
4. The 'test' label is justified as all modifications are strictly within test code, adjusting test time control without affecting application or infrastructure code."
"README
assist build

Signed-off-by: rjshrjndrn <rjshrjndrn@gmail.com>
verify the replay mode

* write a test to verify the different replay modes","diff --git a/README.md b/README.md
index 11a24b3..56e8d2a 100644
--- a/README.md
+++ b/README.md
@@ -16,7 +16,9 @@ oclif: create your own CLI
 
 # Description
 
-This is a framework for building CLIs in Node.js. This framework was built out of the [Heroku CLI](https://cli.heroku.com) but generalized to build any custom CLI. It's designed both for simple CLIs that can be just a single file with a few flag options, or for very complex CLIs that have many commands (like git or heroku). Most CLI tools in Node are simple flag parsers but oclif is much more than that—though without the overhead of making simple CLIs quick to write with minimal boilerplate.
+This is a framework for building CLIs in Node.js. This framework was built out of the [Heroku CLI](https://cli.heroku.com) but generalized to build any custom CLI. It's designed both for simple CLIs that can be just a single file with a few flag options, or for very complex CLIs that have many commands (like git or heroku).
+
+Most CLI tools for Node are simple flag parsers but oclif is much more than that—though without the overhead of making simple CLIs quick to write with minimal boilerplate.
 
 # Features
 

diff --git a/scripts/helmcharts/build_deploy.sh b/scripts/helmcharts/build_deploy.sh
index 4a484f2..f9f8f9f 100644
--- a/scripts/helmcharts/build_deploy.sh
+++ b/scripts/helmcharts/build_deploy.sh
@@ -24,7 +24,7 @@ echo $DOCKER_REPO
     docker login $DOCKER_REPO
     cd ../../backend
     bash build.sh $@
-    cd ../../assist-stats/
+    cd ../assist-stats/
     bash build.sh $@
     cd ../assist
     bash build.sh $@
diff --git a/scripts/helmcharts/build_deploy_parallel.sh b/scripts/helmcharts/build_deploy_parallel.sh
index 47ada0c..cb4e3f4 100644
--- a/scripts/helmcharts/build_deploy_parallel.sh
+++ b/scripts/helmcharts/build_deploy_parallel.sh
@@ -15,7 +15,7 @@ export PUSH_IMAGE=1
 export AWS_DEFAULT_REGION=""eu-central-1""
 export SIGN_KEY=""awskms:///alias/openreplay-container-sign""
 echo $DOCKER_REPO
-[[ -z DOCKER_REPO ]] && {
+[[ -z $DOCKER_REPO ]] && {
     echo Set DOCKER_REPO=""your docker registry""
     exit 1
 } || {
@@ -30,7 +30,8 @@ echo $DOCKER_REPO
     tmux split-window ""cd ../../sourcemap-reader && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@""
     tmux split-window ""cd ../../api && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@ \
       && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_alerts.sh $@ \
-      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@""
+      && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build_crons.sh $@ \
+      && cd ../assist-stats && IMAGE_TAG=$IMAGE_TAG DOCKER_REPO=$DOCKER_REPO PUSH_IMAGE=1 bash build.sh $@""
     tmux select-layout tiled
 
 }

diff --git a/engine/src/test/java/io/camunda/zeebe/engine/processing/streamprocessor/ContinuouslyReplayTest.java b/engine/src/test/java/io/camunda/zeebe/engine/processing/streamprocessor/ContinuouslyReplayTest.java
index 167444c..7494014 100644
--- a/engine/src/test/java/io/camunda/zeebe/engine/processing/streamprocessor/ContinuouslyReplayTest.java
+++ b/engine/src/test/java/io/camunda/zeebe/engine/processing/streamprocessor/ContinuouslyReplayTest.java
@@ -11,6 +11,9 @@ import io.camunda.zeebe.engine.state.ZbColumnFamilies;
 import io.camunda.zeebe.engine.util.EngineRule;
 import io.camunda.zeebe.engine.util.ListLogStorage;
 import io.camunda.zeebe.model.bpmn.Bpmn;
+import io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent;
+import io.camunda.zeebe.protocol.record.value.BpmnElementType;
+import io.camunda.zeebe.test.util.record.RecordingExporter;
 import org.assertj.core.api.SoftAssertions;
 import org.awaitility.Awaitility;
 import org.junit.Rule;
@@ -27,16 +30,22 @@ public class ContinuouslyReplayTest {
   @Rule public final EngineRule processing = EngineRule.withSharedStorage(sharedStorage);
 
   @Test
-  public void shouldEndUpWithTheSameState() {
+  public void shouldBuildTheSameStateOnProcessingAndReplay() {
     // given
-
-    // when
     processing
         .deployment()
-        .withXmlResource(Bpmn.createExecutableProcess().startEvent().endEvent().done())
+        .withXmlResource(Bpmn.createExecutableProcess(""process"").startEvent().endEvent().done())
         .deploy();
 
+    // when
+    final var processInstanceKey = processing.processInstance().ofBpmnProcessId(""process"").create();
+
     // then
+    RecordingExporter.processInstanceRecords(ProcessInstanceIntent.ELEMENT_COMPLETED)
+        .withProcessInstanceKey(processInstanceKey)
+        .withElementType(BpmnElementType.PROCESS)
+        .await();
+
     assertStates();
   }
 
diff --git a/engine/src/test/java/io/camunda/zeebe/engine/processing/streamprocessor/StreamProcessorReplayModeTest.java b/engine/src/test/java/io/camunda/zeebe/engine/processing/streamprocessor/StreamProcessorReplayModeTest.java
new file mode 100644
index 0000000..9dd9f4c
--- /dev/null
+++ b/engine/src/test/java/io/camunda/zeebe/engine/processing/streamprocessor/StreamProcessorReplayModeTest.java
@@ -0,0 +1,121 @@
+/*
+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under
+ * one or more contributor license agreements. See the NOTICE file distributed
+ * with this work for additional information regarding copyright ownership.
+ * Licensed under the Zeebe Community License 1.1. You may not use this file
+ * except in compliance with the Zeebe Community License 1.1.
+ */
+package io.camunda.zeebe.engine.processing.streamprocessor;
+
+import static io.camunda.zeebe.engine.util.RecordToWrite.command;
+import static io.camunda.zeebe.engine.util.RecordToWrite.event;
+import static io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent.ACTIVATE_ELEMENT;
+import static io.camunda.zeebe.protocol.record.intent.ProcessInstanceIntent.ELEMENT_ACTIVATING;
+import static org.assertj.core.api.Assertions.assertThat;
+import static org.mockito.ArgumentMatchers.any;
+import static org.mockito.ArgumentMatchers.anyLong;
+import static org.mockito.ArgumentMatchers.eq;
+import static org.mockito.Mockito.inOrder;
+import static org.mockito.Mockito.never;
+import static org.mockito.Mockito.timeout;
+
+import io.camunda.zeebe.engine.processing.streamprocessor.StreamProcessor.Phase;
+import io.camunda.zeebe.engine.state.EventApplier;
+import io.camunda.zeebe.engine.util.Records;
+import io.camunda.zeebe.engine.util.StreamProcessorRule;
+import io.camunda.zeebe.protocol.impl.record.value.processinstance.ProcessInstanceRecord;
+import io.camunda.zeebe.protocol.record.ValueType;
+import org.junit.Rule;
+import org.junit.Test;
+import org.mockito.InOrder;
+import org.mockito.Mock;
+import org.mockito.junit.MockitoJUnit;
+import org.mockito.junit.MockitoRule;
+import org.mockito.verification.VerificationWithTimeout;
+
+public final class StreamProcessorReplayModeTest {
+
+  private static final long TIMEOUT_MILLIS = 2_000L;
+  private static final VerificationWithTimeout TIMEOUT = timeout(TIMEOUT_MILLIS);
+
+  private static final int PARTITION_ID = 1;
+
+  private static final ProcessInstanceRecord RECORD = Records.processInstance(1);
+
+  @Rule
+  public final StreamProcessorRule replayUntilEnd =
+      new StreamProcessorRule(PARTITION_ID).withReplayMode(ReplayMode.UNTIL_END);
+
+  @Rule
+  public final StreamProcessorRule replayContinuously =
+      new StreamProcessorRule(PARTITION_ID).withReplayMode(ReplayMode.CONTINUOUSLY);
+
+  @Rule public MockitoRule mockitoRule = MockitoJUnit.rule();
+
+  @Mock private TypedRecordProcessor<?> typedRecordProcessor;
+  @Mock private EventApplier eventApplier;
+
+  @Test
+  public void shouldReplayUntilEnd() {
+    // given
+    replayUntilEnd.writeBatch(
+        command().processInstance(ACTIVATE_ELEMENT, RECORD),
+        event().processInstance(ELEMENT_ACTIVATING, RECORD).causedBy(0));
+
+    // when
+    startStreamProcessor(replayUntilEnd);
+
+    replayUntilEnd.writeBatch(
+        command().processInstance(ACTIVATE_ELEMENT, RECORD),
+        event().processInstance(ELEMENT_ACTIVATING, RECORD).causedBy(0));
+
+    // then
+    final InOrder inOrder = inOrder(typedRecordProcessor, eventApplier);
+    inOrder.verify(eventApplier, TIMEOUT).applyState(anyLong(), eq(ELEMENT_ACTIVATING), any());
+    inOrder.verify(typedRecordProcessor, TIMEOUT.times(1)).onRecovered(any());
+    inOrder
+        .verify(typedRecordProcessor, TIMEOUT)
+        .processRecord(anyLong(), any(), any(), any(), any());
+    inOrder.verifyNoMoreInteractions();
+
+    assertThat(getCurrentPhase(replayUntilEnd)).isEqualTo(Phase.PROCESSING);
+  }
+
+  @Test
+  public void shouldReplayContinuously() {
+    // given
+    replayContinuously.writeBatch(
+        command().processInstance(ACTIVATE_ELEMENT, RECORD),
+        event().processInstance(ELEMENT_ACTIVATING, RECORD).causedBy(0));
+
+    // when
+    startStreamProcessor(replayContinuously);
+
+    replayContinuously.writeBatch(
+        command().processInstance(ACTIVATE_ELEMENT, RECORD),
+        event().processInstance(ELEMENT_ACTIVATING, RECORD).causedBy(0));
+
+    // then
+    final InOrder inOrder = inOrder(typedRecordProcessor, eventApplier);
+    inOrder
+        .verify(eventApplier, TIMEOUT.times(2))
+        .applyState(anyLong(), eq(ELEMENT_ACTIVATING), any());
+    inOrder.verify(typedRecordProcessor, never()).onRecovered(any());
+    inOrder.verifyNoMoreInteractions();
+
+    assertThat(getCurrentPhase(replayContinuously)).isEqualTo(Phase.REPROCESSING);
+  }
+
+  private void startStreamProcessor(final StreamProcessorRule streamProcessorRule) {
+    streamProcessorRule
+        .withEventApplierFactory(zeebeState -> eventApplier)
+        .startTypedStreamProcessor(
+            (processors, context) ->
+                processors.onCommand(
+                    ValueType.PROCESS_INSTANCE, ACTIVATE_ELEMENT, typedRecordProcessor));
+  }
+
+  private Phase getCurrentPhase(final StreamProcessorRule streamProcessorRule) {
+    return streamProcessorRule.getStreamProcessor(PARTITION_ID).getCurrentPhase().join();
+  }
+}
diff --git a/engine/src/test/java/io/camunda/zeebe/engine/util/EngineRule.java b/engine/src/test/java/io/camunda/zeebe/engine/util/EngineRule.java
index f626ed4..cf07b5c 100644
--- a/engine/src/test/java/io/camunda/zeebe/engine/util/EngineRule.java
+++ b/engine/src/test/java/io/camunda/zeebe/engine/util/EngineRule.java
@@ -101,7 +101,6 @@ public final class EngineRule extends ExternalResource {
       new Int2ObjectHashMap<>();
 
   private long lastProcessedPosition = -1L;
-  private ReplayMode replayMode;
 
   private EngineRule(final int partitionCount) {
     this(partitionCount, null);
@@ -176,7 +175,7 @@ public final class EngineRule extends ExternalResource {
   }
 
   public EngineRule withReplayMode(final ReplayMode replayMode) {
-    this.replayMode = replayMode;
+    environmentRule.withReplayMode(replayMode);
     return this;
   }
 
@@ -194,7 +193,6 @@ public final class EngineRule extends ExternalResource {
               (processingContext) ->
                   EngineProcessors.createEngineProcessors(
                           processingContext
-                              .replayMode(replayMode)
                               .onProcessedListener(
                                   record -> {
                                     lastProcessedPosition = record.getPosition();
diff --git a/engine/src/test/java/io/camunda/zeebe/engine/util/StreamProcessorRule.java b/engine/src/test/java/io/camunda/zeebe/engine/util/StreamProcessorRule.java
index ab44773..1f9fe26 100755
--- a/engine/src/test/java/io/camunda/zeebe/engine/util/StreamProcessorRule.java
+++ b/engine/src/test/java/io/camunda/zeebe/engine/util/StreamProcessorRule.java
@@ -10,6 +10,7 @@ package io.camunda.zeebe.engine.util;
 import static io.camunda.zeebe.engine.util.StreamProcessingComposite.getLogName;
 
 import io.camunda.zeebe.db.ZeebeDbFactory;
+import io.camunda.zeebe.engine.processing.streamprocessor.ReplayMode;
 import io.camunda.zeebe.engine.processing.streamprocessor.StreamProcessor;
 import io.camunda.zeebe.engine.processing.streamprocessor.TypedRecord;
 import io.camunda.zeebe.engine.processing.streamprocessor.TypedRecordProcessorFactory;
@@ -64,6 +65,7 @@ public final class StreamProcessorRule implements TestRule {
   private TestStreams streams;
   private StreamProcessingComposite streamProcessingComposite;
   private ListLogStorage sharedStorage = null;
+  private ReplayMode replayMode = ReplayMode.UNTIL_END;
 
   public StreamProcessorRule() {
     this(new TemporaryFolder());
@@ -125,6 +127,11 @@ public final class StreamProcessorRule implements TestRule {
     return this;
   }
 
+  public StreamProcessorRule withReplayMode(final ReplayMode replayMode) {
+    this.replayMode = replayMode;
+    return this;
+  }
+
   public LogStreamRecordWriter getLogStreamRecordWriter(final int partitionId) {
     return streamProcessingComposite.getLogStreamRecordWriter(partitionId);
   }
@@ -317,6 +324,7 @@ public final class StreamProcessorRule implements TestRule {
     @Override
     protected void before() {
       streams = new TestStreams(tempFolder, closeables, actorSchedulerRule.get());
+      streams.withReplayMode(replayMode);
 
       int partitionId = startPartitionId;
       for (int i = 0; i < partitionCount; i++) {
diff --git a/engine/src/test/java/io/camunda/zeebe/engine/util/TestStreams.java b/engine/src/test/java/io/camunda/zeebe/engine/util/TestStreams.java
index 18696b2..176c405 100644
--- a/engine/src/test/java/io/camunda/zeebe/engine/util/TestStreams.java
+++ b/engine/src/test/java/io/camunda/zeebe/engine/util/TestStreams.java
@@ -17,6 +17,7 @@ import static org.mockito.Mockito.when;
 
 import io.camunda.zeebe.db.ZeebeDb;
 import io.camunda.zeebe.db.ZeebeDbFactory;
+import io.camunda.zeebe.engine.processing.streamprocessor.ReplayMode;
 import io.camunda.zeebe.engine.processing.streamprocessor.StreamProcessor;
 import io.camunda.zeebe.engine.processing.streamprocessor.TypedEventRegistry;
 import io.camunda.zeebe.engine.processing.streamprocessor.TypedRecord;
@@ -79,6 +80,7 @@ public final class TestStreams {
   private boolean snapshotWasTaken = false;
 
   private Function<MutableZeebeState, EventApplier> eventApplierFactory = EventAppliers::new;
+  private ReplayMode replayMode = ReplayMode.UNTIL_END;
 
   public TestStreams(
       final TemporaryFolder dataDirectory,
@@ -107,6 +109,10 @@ public final class TestStreams {
     this.eventApplierFactory = eventApplierFactory;
   }
 
+  public void withReplayMode(final ReplayMode replayMode) {
+    this.replayMode = replayMode;
+  }
+
   public CommandResponseWriter getMockedResponseWriter() {
     return mockCommandResponseWriter;
   }
@@ -252,6 +258,7 @@ public final class TestStreams {
             .onProcessedListener(mockOnProcessedListener)
             .streamProcessorFactory(factory)
             .eventApplierFactory(eventApplierFactory)
+            .replayMode(replayMode)
             .build();
     final var openFuture = streamProcessor.openAsync(false);
 
",3,"[""363f84c7da411468b4103da8e0b39ca48cfd8327"", ""1269431c8a3e7549f10fcbbb4b88ff625c8898b3"", ""48d5d573886e9fdd0cca1cea47112c4a2f6edf52""]","[""docs"", ""build"", ""test""]","1. The commit modifies the README.md file (improving documentation), updates shell scripts related to building and deploying Helm charts, and adds/modifies Java test files to verify replay modes and related test utilities.
2. The README.md change is solely documentation, aligning with the 'docs' label; changes to build_deploy.sh and build_deploy_parallel.sh are strictly related to build and deployment scripting, matching the 'build' label; the addition and modification of Java test files (including a new test and updates to test utilities) are fully dedicated to test logic, aligning with the 'test' label.
3. Alternative labels like 'feat', 'fix', or 'refactor' are not appropriate: no new product features are introduced, no bugs are directly fixed, and no general code restructuring is performed; the changes are entirely scoped to documentation, build/deployment scripts, and test artifacts, so 'docs', 'build', and 'test' are the most accurate and specific labels for each code unit.
4. The assigned labels 'docs', 'build', and 'test' are appropriate because each code unit is fully dedicated to documentation, build scripts, or test logic, with no overlap into behavioral or feature changes."
"refactor generate_completion
add remote [skip ci]
reset padding first on PadLog

Signed-off-by: Carlos A Becker <caarlos0@users.noreply.github.com>","diff --git a/src/lib.rs b/src/lib.rs
index dfd8014..15850f7 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -1,11 +1,106 @@
 //! Generates [Nushell](https://github.com/nushell/nushell) completions for [`clap`](https://github.com/clap-rs/clap) based CLIs
 
-use clap::Command;
+use clap::{Arg, Command};
 use clap_complete::Generator;
 
 /// Generate Nushell complete file
 pub struct Nushell;
 
+enum Argument {
+    Short(char),
+    Long(String),
+    ShortAndLong(char, String),
+    Positional(String, bool),
+}
+
+struct ArgumentLine {
+    arg: Argument,
+    takes_values: bool,
+    help: Option<String>,
+}
+
+impl From<&Arg> for ArgumentLine {
+    fn from(arg: &Arg) -> Self {
+        let takes_values = arg
+            .get_num_args()
+            .map(|v| v.takes_values())
+            .unwrap_or(false);
+
+        let help = arg.get_help().map(|s| s.to_string());
+
+        if arg.is_positional() {
+            let id = arg.get_id().to_string();
+            let required = arg.is_required_set();
+            let arg = Argument::Positional(id, required);
+
+            return Self {
+                arg,
+                takes_values,
+                help,
+            };
+        }
+
+        let short = arg.get_short();
+        let long = arg.get_long();
+
+        match short {
+            Some(short) => match long {
+                Some(long) => Self {
+                    arg: Argument::ShortAndLong(short, long.into()),
+                    takes_values,
+                    help,
+                },
+                None => Self {
+                    arg: Argument::Short(short),
+                    takes_values,
+                    help,
+                },
+            },
+            None => match long {
+                Some(long) => Self {
+                    arg: Argument::Long(long.into()),
+                    takes_values,
+                    help,
+                },
+                None => unreachable!(""No short or long option found""),
+            },
+        }
+    }
+}
+
+impl ToString for ArgumentLine {
+    fn to_string(&self) -> String {
+        let mut s = String::new();
+
+        match &self.arg {
+            Argument::Short(short) => s.push_str(format!(""    -{}"", short).as_str()),
+            Argument::Long(long) => s.push_str(format!(""    --{}"", long).as_str()),
+            Argument::ShortAndLong(short, long) => {
+                s.push_str(format!(""    --{}(-{})"", long, short).as_str())
+            }
+            Argument::Positional(positional, required) => {
+                s.push_str(format!(""    {}"", positional).as_str());
+
+                if !*required {
+                    s.push('?');
+                }
+            }
+        }
+
+        if self.takes_values {
+            s.push_str("": string"");
+        }
+
+        if let Some(help) = &self.help {
+            s.push_str(format!(""\t# {}"", help).as_str());
+        }
+
+        s.push('\n');
+
+        s
+    }
+}
+
 impl Generator for Nushell {
     fn file_name(&self, name: &str) -> String {
         format!(""{}.nu"", name)
@@ -37,51 +132,18 @@ fn generate_completion(completions: &mut String, cmd: &Command, is_subcommand: b
 
     let bin_name = cmd.get_bin_name().expect(""Failed to get bin name"");
 
-    if is_subcommand {
-        completions.push_str(format!(""  export extern \""{}\"" [\n"", bin_name).as_str());
+    let name = if is_subcommand {
+        format!(r#""""{}""""#, bin_name)
     } else {
-        completions.push_str(format!(""  export extern {} [\n"", bin_name).as_str());
-    }
+        bin_name.into()
+    };
 
-    let mut s = String::new();
-    for arg in cmd.get_arguments() {
-        if arg.is_positional() {
-            s.push_str(format!(""    {}"", arg.get_id()).as_str());
-            if !arg.is_required_set() {
-                s.push('?');
-            }
-        }
-
-        let long = arg.get_long();
-        if let Some(opt) = long {
-            s.push_str(format!(""    --{}"", opt).as_str());
-        }
+    completions.push_str(format!(""  export extern {} [\n"", name).as_str());
 
-        let short = arg.get_short();
-        if let Some(opt) = short {
-            if long.is_some() {
-                s.push_str(format!(""(-{})"", opt).as_str());
-            } else {
-                s.push_str(format!(""    -{}"", opt).as_str());
-            }
-        }
-
-        if let Some(v) = arg.get_num_args() {
-            if v.takes_values() {
-                // TODO: add more types?
-                // TODO: add possible values?
-                s.push_str("": string"");
-            }
-        }
-
-        if let Some(msg) = arg.get_help() {
-            if arg.is_positional() || long.is_some() || short.is_some() {
-                s.push_str(format!(""\t# {}"", msg).as_str());
-            }
-        }
-
-        s.push('\n');
-    }
+    let s: String = cmd
+        .get_arguments()
+        .map(|arg| ArgumentLine::from(arg).to_string())
+        .collect();
 
     completions.push_str(&s);
     completions.push_str(""  ]\n\n"");

diff --git a/.github/workflows/ibis-rebase-nightly.yml b/.github/workflows/ibis-rebase-nightly.yml
index 06c9003..e19c703 100644
--- a/.github/workflows/ibis-rebase-nightly.yml
+++ b/.github/workflows/ibis-rebase-nightly.yml
@@ -47,7 +47,10 @@ jobs:
           git config --global user.email 'ibis-squawk-bot[bot]@users.noreply.github.com'
 
       - name: fetch and rebase on top of upstream
-        run: git pull --rebase -X ours https://github.com/ibis-project/ibis master
+        run: |
+          git remote add upstream https://github.com/ibis-project/ibis
+          git fetch upstream
+          git rebase -X ours upstream/master
 
       - uses: tibdex/github-app-token@v1
         id: generate_pr_token

diff --git a/internal/middleware/logging/logging.go b/internal/middleware/logging/logging.go
index 1a3adc7..92c8eb5 100644
--- a/internal/middleware/logging/logging.go
+++ b/internal/middleware/logging/logging.go
@@ -35,6 +35,7 @@ func Log(title string, next middleware.Action) middleware.Action {
 func PadLog(title string, next middleware.Action) middleware.Action {
 	return func(ctx *context.Context) error {
 		defer log.ResetPadding()
+		log.ResetPadding()
 		log.IncreasePadding()
 		log.Infof(bold.Render(title))
 		log.IncreasePadding()
",3,"[""f1bc5a554af4e617c7d7508f7f16f8fd25c78c91"", ""e96487ad7ce90b141219d9032fa2bed68d5dae6a"", ""c5904a9004fca1e438168ca7334a0deefab536ff""]","[""refactor"", ""cicd"", ""fix""]","1. The changes in 'src/lib.rs' restructure the completion generation logic, introducing new structs and refactoring the argument formatting process without altering external behavior; 'internal/middleware/logging/logging.go' resets log padding before increasing it, likely fixing a bug in log formatting; '.github/workflows/ibis-rebase-nightly.yml' switches from 'git pull --rebase' to explicit remote add/fetch/rebase steps in a CI workflow.
2. The 'src/lib.rs' changes align with 'refactor' as they improve code structure and readability without changing outputs; the Go change is a 'fix' as it resolves a likely bug in log padding; the workflow YAML change is 'cicd' since it modifies CI configuration.
3. 'refactor' is appropriate for the Rust code as no new features or bug fixes are introduced; 'fix' applies to the Go change because it addresses a behavioral issue, not just restructuring; 'cicd' is correct for the workflow file as it is purely a CI configuration update, not a build system or test change.
4. The assigned labels 'refactor', 'fix', and 'cicd' are correct as each code unit's primary modification matches the respective label's definition and intent."
"rename ELECTRON_CACHE env variable to electron_config_cache (#21313)
lint source on ci","diff --git a/docs/tutorial/installation.md b/docs/tutorial/installation.md
index d4af120..1a09eea 100644
--- a/docs/tutorial/installation.md
+++ b/docs/tutorial/installation.md
@@ -82,7 +82,7 @@ with the network at all.
 On environments that have been using older versions of Electron, you might find the
 cache also in `~/.electron`.
 
-You can also override the local cache location by providing a `ELECTRON_CACHE`
+You can also override the local cache location by providing a `electron_config_cache`
 environment variable.
 
 The cache contains the version's official zip file as well as a checksum, stored as

diff --git a/.travis.yml b/.travis.yml
index d56185e..96510cb 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -2,5 +2,6 @@ language: node_js
 node_js:
   - 'stable'
 script:
+  - yarn lint
   - yarn build
   - yarn test
",2,"[""f2f52c23b513dd857350f3c163f676d37189d0d3"", ""2ac99c0a66a1adc18ee4ef660608f814823dd198""]","[""docs"", ""cicd""]","1. The commit updates documentation in 'installation.md' to rename an environment variable and adds a 'yarn lint' step to the CI configuration in '.travis.yml'.
2. The documentation change directly aligns with the 'docs' label, as it only updates instructional text; the CI configuration change aligns with the 'cicd' label as it modifies the continuous integration process.
3. 'docs' is appropriate because no code logic or behavior is changed, just documentation; 'cicd' is correct because the change is isolated to a CI script, not to build logic or source code itself—no purpose or other object labels apply.
4. The 'docs' and 'cicd' labels are justified as the changes are strictly scoped to documentation and CI configuration, matching the object label definitions."
parallelize pybind11 build,"diff --git a/poetry-overrides.nix b/poetry-overrides.nix
index d37c5ed..aaaaf02 100644
--- a/poetry-overrides.nix
+++ b/poetry-overrides.nix
@@ -82,4 +82,11 @@ self: super:
     {
       patches = (attrs.patches or [ ]) ++ [ ./patches/watchdog-force-kqueue.patch ];
     });
+
+  pybind11 = super.pybind11.overridePythonAttrs (_: {
+    postBuild = ''
+      # build tests
+      make -j $NIX_BUILD_CORES -l $NIX_BUILD_CORES
+    '';
+  });
 }
",1,"[""9ab4c61975e073e214646443d088339cfdbaa88d""]","[""build""]","1. The code modifies the Nix build override for the 'pybind11' package to parallelize its build process by setting a custom 'postBuild' step using 'make -j $NIX_BUILD_CORES'.
2. This change directly affects the build configuration and process, aligning with the 'build' label, which covers updates to build systems or scripts.
3. The change does not introduce new features ('feat'), fix bugs ('fix'), restructure code ('refactor'), update documentation ('docs'), add tests ('test'), or modify CI/CD scripts ('cicd'); it solely alters build behavior.
4. The 'build' label is appropriate because the change is entirely scoped to the build system and does not impact application code, tests, documentation, or CI/CD configuration."
